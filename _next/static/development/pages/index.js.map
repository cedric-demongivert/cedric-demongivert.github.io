{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///./components/Document.tsx","webpack:///./components/LocalSummary.tsx","webpack:///./components/ParentSummary.tsx","webpack:///./components/Summary.tsx","webpack:///./components/Unit.tsx","webpack:///./components/alchemy/AlchemicMaterialSubject.tsx","webpack:///./components/alchemy/AlchemicMaterialSubjects.tsx","webpack:///./components/alchemy/AlchemicPropertiesHeader.tsx","webpack:///./components/alchemy/AlchemicProperty.tsx","webpack:///./components/alchemy/AlchemicTransformationList.tsx","webpack:///./components/data/Data.tsx","webpack:///./components/data/DataElement.tsx","webpack:///./components/data/DataHeader.tsx","webpack:///./components/data/DataList.tsx","webpack:///./components/subject/Subject.tsx","webpack:///./components/subject/SubjectContent.tsx","webpack:///./components/subject/SubjectIdentifier.tsx","webpack:///./components/subject/SubjectKeyword.tsx","webpack:///./components/subject/SubjectSummary.tsx","webpack:///./components/subject/SubjectTitle.tsx","webpack:///./components/table/Table2D.tsx","webpack:///./components/table/Table2DCell.tsx","webpack:///./components/table/Table2DRow.tsx","webpack:///./content/Content.tsx","webpack:///./content/Summary.tsx","webpack:///./content/alchemy/Alchemy.tsx","webpack:///./content/alchemy/Definitions.tsx","webpack:///./content/alchemy/EtherPoisoning.tsx","webpack:///./content/alchemy/Introduction.tsx","webpack:///./content/alchemy/PrimitiveMaterials.tsx","webpack:///./content/alchemy/ProcessedMaterials.tsx","webpack:///./content/alchemy/index.tsx","webpack:///./content/alchemy/solvents/Introduction.tsx","webpack:///./content/alchemy/solvents/LightAlcohool.tsx","webpack:///./content/alchemy/solvents/Liquor.tsx","webpack:///./content/alchemy/solvents/NobleBlood.tsx","webpack:///./content/alchemy/solvents/Oil.tsx","webpack:///./content/alchemy/solvents/Solvents.tsx","webpack:///./content/alchemy/solvents/Water.tsx","webpack:///./content/alchemy/solvents/index.ts","webpack:///./content/alchemy/transformations/Concentration.tsx","webpack:///./content/alchemy/transformations/Decoction.tsx","webpack:///./content/alchemy/transformations/Dilution.tsx","webpack:///./content/alchemy/transformations/Dissolution.tsx","webpack:///./content/alchemy/transformations/Distillation.tsx","webpack:///./content/alchemy/transformations/Infusion.tsx","webpack:///./content/alchemy/transformations/Maceration.tsx","webpack:///./content/alchemy/transformations/Percolation.tsx","webpack:///./content/alchemy/transformations/Reduction.tsx","webpack:///./content/alchemy/transformations/Transformations.tsx","webpack:///./content/alchemy/transformations/index.ts","webpack:///./content/characteristics/Characteristics.tsx","webpack:///./content/characteristics/Constitution.tsx","webpack:///./content/characteristics/Control.tsx","webpack:///./content/characteristics/Dexterity.tsx","webpack:///./content/characteristics/Luck.tsx","webpack:///./content/characteristics/Power.tsx","webpack:///./content/characteristics/Strength.tsx","webpack:///./content/characteristics/index.ts","webpack:///./content/echoes/Affinity.tsx","webpack:///./content/echoes/Categories.tsx","webpack:///./content/echoes/Echoes.tsx","webpack:///./content/echoes/Introduction.tsx","webpack:///./content/echoes/Manifestations.tsx","webpack:///./content/echoes/Mastery.tsx","webpack:///./content/echoes/index.tsx","webpack:///./content/feats/AcrobaticDodgingFeat.tsx","webpack:///./content/feats/AcrobaticParryFeat.tsx","webpack:///./content/feats/AtlasBurdenFeat.tsx","webpack:///./content/feats/BloodBathFeat.tsx","webpack:///./content/feats/BloodThirstFeat.tsx","webpack:///./content/feats/BullChargeFeat.tsx","webpack:///./content/feats/CatGraceFeat.tsx","webpack:///./content/feats/ChainAttackFeat.tsx","webpack:///./content/feats/ChainDodgeFeat.tsx","webpack:///./content/feats/CounterAttackFeat.tsx","webpack:///./content/feats/DefensiveStyleFeat.tsx","webpack:///./content/feats/DiehardFeat.tsx","webpack:///./content/feats/DoubleSkinFeat.tsx","webpack:///./content/feats/EagleChargeFeat.tsx","webpack:///./content/feats/Feats.tsx","webpack:///./content/feats/FlashDodgeFeat.tsx","webpack:///./content/feats/FullDodgeFeat.tsx","webpack:///./content/feats/HackerFeat.tsx","webpack:///./content/feats/TwistedFeat.tsx","webpack:///./content/feats/WindDanceFeat.tsx","webpack:///./content/feats/index.ts","webpack:///./content/knowledges/Knowledges.tsx","webpack:///./content/knowledges/index.ts","webpack:///./content/masteries/Introduction.tsx","webpack:///./content/masteries/Masteries.tsx","webpack:///./content/masteries/armorMasteries/ArmorMasteries.tsx","webpack:///./content/masteries/armorMasteries/HeavyArmorMastery.tsx","webpack:///./content/masteries/armorMasteries/LightArmorMastery.tsx","webpack:///./content/masteries/armorMasteries/MediumArmorMastery.tsx","webpack:///./content/masteries/armorMasteries/index.ts","webpack:///./content/masteries/index.ts","webpack:///./content/masteries/martialStyleMasteries/MartialStyleMasteries.tsx","webpack:///./content/masteries/martialStyleMasteries/OneHandedWeaponFightingMastery.tsx","webpack:///./content/masteries/martialStyleMasteries/TwoHandedWeaponFightingMastery.tsx","webpack:///./content/masteries/martialStyleMasteries/TwoWeaponFightingMastery.tsx","webpack:///./content/masteries/martialStyleMasteries/UnarmedFightingMastery.tsx","webpack:///./content/masteries/martialStyleMasteries/WeaponAndShieldFightingMastery.tsx","webpack:///./content/masteries/martialStyleMasteries/index.ts","webpack:///./content/masteries/supportMasteries/AcrobaticsMastery.tsx","webpack:///./content/masteries/supportMasteries/ClimbingMastery.tsx","webpack:///./content/masteries/supportMasteries/DiscretionMastery.tsx","webpack:///./content/masteries/supportMasteries/DodgeMastery.tsx","webpack:///./content/masteries/supportMasteries/HorseRidingMastery.tsx","webpack:///./content/masteries/supportMasteries/LockPickingMastery.tsx","webpack:///./content/masteries/supportMasteries/PerceptionMastery.tsx","webpack:///./content/masteries/supportMasteries/SearchMastery.tsx","webpack:///./content/masteries/supportMasteries/SleightOfHandMastery.tsx","webpack:///./content/masteries/supportMasteries/SupportMasteries.tsx","webpack:///./content/masteries/supportMasteries/SwimingMastery.tsx","webpack:///./content/masteries/supportMasteries/index.ts","webpack:///./content/masteries/weaponMasteries/AxeMastery.tsx","webpack:///./content/masteries/weaponMasteries/BastardSwordMastery.tsx","webpack:///./content/masteries/weaponMasteries/DaggerMastery.tsx","webpack:///./content/masteries/weaponMasteries/HammerMastery.tsx","webpack:///./content/masteries/weaponMasteries/HeavyCrossbowMastery.tsx","webpack:///./content/masteries/weaponMasteries/LightCrossbowMastery.tsx","webpack:///./content/masteries/weaponMasteries/LongBowMastery.tsx","webpack:///./content/masteries/weaponMasteries/LongSwordMastery.tsx","webpack:///./content/masteries/weaponMasteries/RodMastery.tsx","webpack:///./content/masteries/weaponMasteries/ShieldMastery.tsx","webpack:///./content/masteries/weaponMasteries/ShortBowMastery.tsx","webpack:///./content/masteries/weaponMasteries/ShortSwordMastery.tsx","webpack:///./content/masteries/weaponMasteries/SpearMastery.tsx","webpack:///./content/masteries/weaponMasteries/WarAxeMastery.tsx","webpack:///./content/masteries/weaponMasteries/WarHammerMastery.tsx","webpack:///./content/masteries/weaponMasteries/WeaponMasteries.tsx","webpack:///./content/masteries/weaponMasteries/index.ts","webpack:///./content/rules/core/AdversialTestRule.tsx","webpack:///./content/rules/core/CooperationRule.tsx","webpack:///./content/rules/core/CoreRules.tsx","webpack:///./content/rules/core/CriticalHitRule.tsx","webpack:///./content/rules/core/RerollRule.tsx","webpack:///./content/rules/core/SelfResolutionRule.tsx","webpack:///./content/rules/core/SituationalDiceRule.tsx","webpack:///./content/rules/core/index.ts","webpack:///./content/rules/fight/ArmorRule.tsx","webpack:///./content/rules/fight/AttackRule.tsx","webpack:///./content/rules/fight/ComaRule.tsx","webpack:///./content/rules/fight/DamageRule.tsx","webpack:///./content/rules/fight/DeathRule.tsx","webpack:///./content/rules/fight/FightRules.tsx","webpack:///./content/rules/fight/HealthPointRule.tsx","webpack:///./content/rules/fight/InitiativeRule.tsx","webpack:///./content/rules/fight/Introduction.tsx","webpack:///./content/rules/fight/WeigthPointRule.tsx","webpack:///./content/rules/fight/WoundsRule.tsx","webpack:///./content/rules/fight/index.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/@cedric-demongivert/gl-tool-collection/index.js","webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/lodash/lodash.js","webpack:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js","webpack:///./node_modules/next/dist/next-server/lib/amp-context.js","webpack:///./node_modules/next/dist/next-server/lib/amp.js","webpack:///./node_modules/next/dist/next-server/lib/head-manager-context.js","webpack:///./node_modules/next/dist/next-server/lib/head.js","webpack:///./node_modules/next/dist/next-server/lib/side-effect.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/inherits.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js","webpack:///delegated ./node_modules/react/index.js from dll-reference dll_2adc2403d89adc16ead0","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/module.js","webpack:///./pages/index.tsx","webpack:///./typescript/Arrays.ts","webpack:///./typescript/ClonePolicy.ts","webpack:///./typescript/EqualityPolicy.ts","webpack:///./typescript/Sets.ts","webpack:///./typescript/alchemy/AlchemicMaterial.ts","webpack:///./typescript/alchemy/AlchemicMaterialBuilder.ts","webpack:///./typescript/alchemy/AlchemicProperty.ts","webpack:///./typescript/alchemy/AlchemicPropertyBuilder.ts","webpack:///./typescript/alchemy/AlchemicTransformation.ts","webpack:///./typescript/alchemy/AlchemicTransformationEntry.ts","webpack:///./typescript/data/alchemy/primitive/BloodyBells.tsx","webpack:///./typescript/data/alchemy/primitive/CeruleanLily.tsx","webpack:///./typescript/data/alchemy/primitive/Dreamstar.tsx","webpack:///./typescript/data/alchemy/primitive/Greenleaves.tsx","webpack:///./typescript/data/alchemy/primitive/Helenite.tsx","webpack:///./typescript/data/alchemy/primitive/PandoraSkin.tsx","webpack:///./typescript/data/alchemy/primitive/PegasusFluff.tsx","webpack:///./typescript/data/alchemy/primitive/Skyhammer.tsx","webpack:///./typescript/data/alchemy/primitive/index.ts","webpack:///./typescript/data/alchemy/processed/BloodDance.tsx","webpack:///./typescript/data/alchemy/processed/BloodyBellsInfusion.tsx","webpack:///./typescript/data/alchemy/processed/CeruleanInfusion.tsx","webpack:///./typescript/data/alchemy/processed/CourrierBlessing.tsx","webpack:///./typescript/data/alchemy/processed/DreamstarInfusion.tsx","webpack:///./typescript/data/alchemy/processed/GoldenSun.tsx","webpack:///./typescript/data/alchemy/processed/GreenleavesCurse.tsx","webpack:///./typescript/data/alchemy/processed/GreenleavesInfusion.tsx","webpack:///./typescript/data/alchemy/processed/GreenleavesPurifier.tsx","webpack:///./typescript/data/alchemy/processed/HunterBlessing.tsx","webpack:///./typescript/data/alchemy/processed/MercenaryBlessing.tsx","webpack:///./typescript/data/alchemy/processed/MorpheaNectar.tsx","webpack:///./typescript/data/alchemy/processed/NobleBlood.tsx","webpack:///./typescript/data/alchemy/processed/PandoraInfusion.tsx","webpack:///./typescript/data/alchemy/processed/ParagonBlessing.tsx","webpack:///./typescript/data/alchemy/processed/PegasusInfusion.tsx","webpack:///./typescript/data/alchemy/processed/SkyhammerInfusion.tsx","webpack:///./typescript/data/alchemy/processed/SquireBlessing.tsx","webpack:///./typescript/data/alchemy/processed/StormLiquor.tsx","webpack:///./typescript/data/alchemy/processed/SunriseInfusion.tsx","webpack:///./typescript/data/alchemy/processed/ThiefBlessing.tsx","webpack:///./typescript/data/alchemy/processed/TreeBlood.tsx","webpack:///./typescript/data/alchemy/processed/WarriorBlessing.tsx","webpack:///./typescript/data/alchemy/processed/WindSyrup.tsx","webpack:///./typescript/data/alchemy/processed/index.ts","webpack:///./typescript/redux/document/Document.ts","webpack:///./typescript/redux/document/DocumentAction.ts","webpack:///./typescript/redux/document/DocumentEvent.ts","webpack:///./typescript/redux/document/DocumentReducer.ts","webpack:///./typescript/redux/document/Subject.ts","webpack:///external \"dll_2adc2403d89adc16ead0\""],"sourcesContent":["import React from 'react'\r\nimport { PureComponent } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport { ReactElement } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport { Document as DocumentModel } from '../typescript/redux/document/Document'\r\nimport { DocumentEvent } from '../typescript/redux/document/DocumentEvent'\r\nimport { DocumentReducer } from '../typescript/redux/document/DocumentReducer'\r\n\r\nexport class Document extends PureComponent<Document.Properties, Document.State> {\r\n  /**\r\n  * @see PureComponent.constructor\r\n  */\r\n  public constructor (props : Document.Properties, context : any) {\r\n    super(props, context)\r\n\r\n    this.state = {\r\n      document: new DocumentModel(8),\r\n      onChange: this.handleDocumentChange.bind(this)\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Handle an update request of this component document model.\r\n  *\r\n  * @param event - Event that describe the change to operate upon this component document model.\r\n  */\r\n  public handleDocumentChange (event : DocumentEvent, callback ? : () => void) : void {\r\n    this.setState(\r\n      function update (state : Document.State) : Document.State {\r\n        return {\r\n          document: DocumentReducer.reduce(state.document, event),\r\n          onChange: state.onChange\r\n        }\r\n      }, callback\r\n    )\r\n  }\r\n\r\n  /**\r\n  * Handle an update request of this component document model.\r\n  *\r\n  * @param event - Event that describe the change to operate upon this component document model.\r\n  */\r\n  public handleSubjectAllocation (event : DocumentEvent) : void {\r\n    this.setState(function update (state : Document.State) : Document.State {\r\n      return {\r\n        document: DocumentReducer.reduce(state.document, event),\r\n        onChange: state.onChange\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n  * @see PureComponent.render\r\n  */\r\n  public render () : ReactElement {\r\n    const className : string = classNames('document', this.props.className)\r\n    return (\r\n      <Document.Provider value={this.state}>\r\n        <div className={className}>\r\n          { this.props.children }\r\n        </div>\r\n      </Document.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport namespace Document {\r\n  export type ChangeListener = (event : DocumentEvent, callback? : () => void) => void\r\n\r\n  export type Properties = {\r\n    children?: ReactNode,\r\n    className?: string\r\n  }\r\n\r\n  export type State = {\r\n    document: DocumentModel,\r\n    onChange: ChangeListener\r\n  }\r\n\r\n  export const Context : React.Context<State> = React.createContext(null)\r\n  export const Provider : React.Provider<State> = Context.Provider\r\n  export const Consumer : React.Consumer<State> = Context.Consumer\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { Document } from './Document'\r\nimport { Summary } from './Summary'\r\nimport { Subject } from './subject/Subject'\r\n\r\nexport function LocalSummary (props : LocalSummary.Properties) : ReactElement {\r\n  return (\r\n    <Subject.Consumer>{\r\n      (subjectState : Subject.State) => (\r\n        <Document.Consumer>{\r\n          (documentState : Document.State) => (\r\n            <Summary\r\n              subjects={[subjectState.subject]}\r\n              document={documentState.document}\r\n              {...props}\r\n            />\r\n          )\r\n        }</Document.Consumer>\r\n      )\r\n    }</Subject.Consumer>\r\n  )\r\n}\r\n\r\nexport namespace LocalSummary {\r\n  export type Properties = {\r\n    className?: string\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { Document } from './Document'\r\nimport { Summary } from './Summary'\r\nimport { Subject } from './subject/Subject'\r\n\r\nexport function ParentSummary (props : ParentSummary.Properties) : ReactElement {\r\n  return (\r\n    <Subject.Consumer>{\r\n      (subjectState : Subject.State) => (\r\n        <Document.Consumer>{\r\n          (documentState : Document.State) => (\r\n            <Summary\r\n              subjects={[documentState.document.getParent(subjectState.subject)]}\r\n              document={documentState.document}\r\n              {...props}\r\n            />\r\n          )\r\n        }</Document.Consumer>\r\n      )\r\n    }</Subject.Consumer>\r\n  )\r\n}\r\n\r\nexport namespace ParentSummary {\r\n  export type Properties = {\r\n    className?: string\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { PureComponent } from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport { Subject as SubjectModel } from '../typescript/redux/document/Subject'\r\nimport { Document as DocumentModel } from '../typescript/redux/document/Document'\r\n\r\nexport class Summary extends PureComponent<Summary.Properties> {\r\n  private _base : number\r\n\r\n  /**\r\n  * @see PureComponent.constructor\r\n  */\r\n  public constructor (props : Summary.Properties, context : any) {\r\n    super(props, context)\r\n    this.renderElement = this.renderElement.bind(this)\r\n    this._base = 0\r\n  }\r\n\r\n  public renderElement (element : SubjectModel, index : number) : ReactElement {\r\n    const depth : number = this.props.document.getDepth(element)\r\n\r\n    const className : string = classNames(\r\n      'summary-element',\r\n      'summary-element-depth-' + depth\r\n    )\r\n\r\n    if (element.key) {\r\n      return (\r\n        <a\r\n          href={'#' + element.key}\r\n          className={className}\r\n          key={index}\r\n          style={{ paddingLeft: ((depth - this._base) * 10) + 'px' }}\r\n        > { element.name } </a>\r\n      )\r\n    } else {\r\n      return (\r\n        <div\r\n          className={className + ' is-disabled'}\r\n          key={index}\r\n          style={{paddingLeft: ((depth - this._base) * 10) + 'px'}}\r\n        > { element.name } </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  public renderColumn (elements : SubjectModel[]) : ReactNode {\r\n    return elements.map(this.renderElement)\r\n  }\r\n\r\n  public render () : ReactElement {\r\n    const className : string = classNames('summary', this.props.className)\r\n    const content : SubjectModel[] = [\r\n      ...this.props.document.walkInChildren(this.props.subjects)\r\n    ]\r\n\r\n    this._base = content.length > 0 ? content.map(\r\n      (x : SubjectModel) : number => this.props.document.getDepth(x)\r\n    ).reduce(\r\n      (a : number, b : number) : number => Math.min(a, b)\r\n    ) : 0\r\n\r\n    return (\r\n      <div className={className}>\r\n        <div className='row justify-content-center'>\r\n          <div className='col-xs-12 col-md-5'>\r\n            { this.renderColumn(content.slice(0, Math.ceil(content.length / 2))) }\r\n          </div>\r\n          <div className='col-xs-12 col-md-5'>\r\n            { this.renderColumn(content.slice(Math.ceil(content.length / 2))) }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport namespace Summary {\r\n  export type Properties = {\r\n    subjects: Iterable<SubjectModel | number>,\r\n    document: DocumentModel,\r\n    className?: string\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nexport function Unit (\r\n  properties : Unit.Properties\r\n) : ReactElement {\r\n  const className : string = classNames('unit', properties.className)\r\n\r\n  return (\r\n    <span className={className}>\r\n      { properties.children }\r\n    </span>\r\n  )\r\n}\r\n\r\nexport namespace Unit {\r\n  export type Properties = {\r\n    children: string,\r\n    className?: string\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\n\r\nimport { AlchemicMaterial } from '../../typescript/alchemy/AlchemicMaterial'\r\nimport { AlchemicTransformation } from '../../typescript/alchemy/AlchemicTransformation'\r\n\r\nimport { SubjectSummary } from '../subject/SubjectSummary'\r\nimport { SubjectContent } from '../subject/SubjectContent'\r\nimport { SubjectTitle } from '../subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../subject/SubjectIdentifier'\r\nimport { Subject } from '../subject/Subject'\r\n\r\nimport { Data } from '../data/Data'\r\n\r\nimport { AlchemicTransformationList } from './AlchemicTransformationList'\r\nimport { AlchemicPropertiesHeader } from './AlchemicPropertiesHeader'\r\nimport { AlchemicProperty } from './AlchemicProperty'\r\n\r\nexport function AlchemicMaterialSubject (properties : AlchemicMaterialSubject.Properties) : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>{'alchemy-material-' + properties.children.identifier}</SubjectIdentifier>\r\n      {\r\n        [...properties.children.keywords].map(function (keyword : string, index : number) : ReactElement {\r\n          return <SubjectKeyword key={index}>{keyword}</SubjectKeyword>\r\n        })\r\n      }\r\n      <SubjectTitle>{properties.children.name}</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        {properties.children.description}\r\n\r\n        <Data>\r\n          { renderProperties(properties.children.properties) }\r\n          { renderTransformations(properties.children.transformations) }\r\n        </Data>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n\r\nfunction renderProperties (properties : any[]) : ReactNode {\r\n  if (properties == null || properties.length === 0) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Data.Header>Propriétés</Data.Header>\r\n      <AlchemicPropertiesHeader />\r\n      {\r\n        properties.map(function (property : any, index : number) : ReactElement {\r\n          return <AlchemicProperty key={index}>{property}</AlchemicProperty>\r\n        })\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nfunction renderTransformations (transformations : any[]) : ReactNode {\r\n  if (transformations == null || transformations.length === 0) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Data.Header>Transformations</Data.Header>\r\n      <AlchemicTransformationList>{transformations}</AlchemicTransformationList>\r\n    </>\r\n  )\r\n}\r\n\r\nexport namespace AlchemicMaterialSubject {\r\n  export type Properties = {\r\n    children : AlchemicMaterial\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\n\r\nimport { AlchemicMaterial } from '../../typescript/alchemy/AlchemicMaterial'\r\n\r\nimport { AlchemicMaterialSubject } from './AlchemicMaterialSubject'\r\n\r\nfunction reduceToPairs <T> (base : T[][], next : T) : T[][] {\r\n  if (base.length <= 0) {\r\n    base.push([next])\r\n    return base\r\n  }\r\n\r\n  const last : T[] = base[base.length - 1]\r\n\r\n  if (last.length === 1) {\r\n    last.push(next)\r\n  } else {\r\n    base.push([next])\r\n  }\r\n\r\n  return base\r\n}\r\n\r\nexport function AlchemicMaterialSubjects (properties : AlchemicMaterialSubjects.Properties) : ReactElement {\r\n  return (\r\n    <>\r\n      {\r\n        properties.children.reduce(reduceToPairs, []).map(\r\n          function (pair : AlchemicMaterial[], index : number) : ReactElement {\r\n            return (\r\n              <div className='row justify-content-center' key={index}>\r\n                {\r\n                  pair.map(\r\n                    function (data : AlchemicMaterial, index : number) : ReactElement {\r\n                      return (\r\n                        <div className='col-xs-12 col-lg-6' key={index}>\r\n                          <AlchemicMaterialSubject>{ data }</AlchemicMaterialSubject>\r\n                        </div>\r\n                      )\r\n                    }\r\n                  )\r\n                }\r\n              </div>\r\n            )\r\n          }\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport namespace AlchemicMaterialSubjects {\r\n  export type Properties = {\r\n    children : AlchemicMaterial[]\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport { Data } from '../data/Data'\r\n\r\nexport function AlchemicPropertiesHeader (\r\n  properties : AlchemicPropertiesHeader.Properties\r\n) : ReactElement {\r\n  const className : string = classNames(\r\n    'data-alchemic-property-header',\r\n    properties.className\r\n  )\r\n\r\n  return (\r\n    <Data.List row header className={className}>\r\n      <Data.Element className='data-alchemic-property-effects'>\r\n        Effets\r\n      </Data.Element>\r\n      <Data.Element\r\n        static width='90px'\r\n        className='data-alchemic-property-duration text-center'\r\n      > Durée </Data.Element>\r\n      <Data.Element\r\n        static width='50px'\r\n        className='data-alchemic-property-cost text-center'\r\n      > Coût </Data.Element>\r\n    </Data.List>\r\n  )\r\n}\r\n\r\nexport namespace AlchemicPropertiesHeader {\r\n  export type Properties = {\r\n    className?: string\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport { Data } from '../data/Data'\r\n\r\nexport function AlchemicProperty (\r\n  properties : AlchemicProperty.Properties\r\n) : ReactElement {\r\n  const className : string = classNames(\r\n    'data-alchemic-property',\r\n    properties.className\r\n  )\r\n\r\n  return (\r\n    <Data.List row className={className}>\r\n      <Data.Element className='data-alchemic-property-effects'>\r\n        {properties.children.effects.map(function (effect : ReactNode, index : number) : ReactElement {\r\n          return (\r\n            <Data.Element key={index} className='data-alchemic-property-effect'>\r\n              {effect}\r\n            </Data.Element>\r\n          )\r\n        })}\r\n      </Data.Element>\r\n      <Data.Element static className='data-alchemic-property-duration text-center' width='120px'>\r\n        {properties.children.duration}\r\n      </Data.Element>\r\n      <Data.Element static className='data-alchemic-property-cost text-center' width='50px'>\r\n        {properties.children.cost}\r\n      </Data.Element>\r\n    </Data.List>\r\n  )\r\n}\r\n\r\nexport namespace AlchemicProperty {\r\n  export type Data = {\r\n    effects: ReactNode[],\r\n    duration: ReactNode,\r\n    cost: ReactNode\r\n  }\r\n\r\n  export type Properties = {\r\n    className?: string,\r\n    children: Data\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { capitalize } from 'lodash'\r\nimport classNames from 'classnames'\r\n\r\nimport { AlchemicTransformationEntry } from '../../typescript/alchemy/AlchemicTransformationEntry'\r\nimport { AlchemicTransformation } from '../../typescript/alchemy/AlchemicTransformation'\r\n\r\nimport { Data } from '../data/Data'\r\n\r\nexport function AlchemicTransformationList (\r\n  properties : AlchemicTransformationList.Properties\r\n) : ReactElement {\r\n  const className : string = classNames(\r\n    'data-alchemic-transformations',\r\n    properties.className\r\n  )\r\n\r\n  return (\r\n    <Data.List row className={className}>\r\n      <Data.List className='data-static'>\r\n        {\r\n          properties.children.map(function renderType (element : AlchemicTransformationEntry, index : number) : ReactElement {\r\n            return (\r\n              <a\r\n                key={index}\r\n                href={'#alchemy-material-' + element[1].identifier}\r\n                className='data-element data-alchemic-transformation-type'\r\n              >{capitalize(AlchemicTransformation.toFrench(element[0]))}</a>\r\n            )\r\n          })\r\n        }\r\n      </Data.List>\r\n      <Data.List>\r\n        {\r\n          properties.children.map(function renderArrow (element : AlchemicTransformationEntry, index : number) : ReactElement {\r\n            return (\r\n              <a\r\n                key={index}\r\n                href={'#alchemy-material-' + element[1].identifier}\r\n                className='data-element arrow right-arrow'\r\n              />\r\n            )\r\n          })\r\n        }\r\n      </Data.List>\r\n      <Data.List className='data-static'>\r\n        {\r\n          properties.children.map(function renderArrow (element : AlchemicTransformationEntry, index : number) : ReactElement {\r\n            return (\r\n              <a\r\n                key={index}\r\n                href={'#alchemy-material-' + element[1].identifier}\r\n                className='data-element data-alchemic-transformation-result'\r\n              >{element[1].name}</a>\r\n            )\r\n          })\r\n        }\r\n      </Data.List>\r\n    </Data.List>\r\n  )\r\n}\r\n\r\nexport namespace AlchemicTransformationList {\r\n  export type Properties = {\r\n    children?: AlchemicTransformationEntry[],\r\n    className?: string\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport { DataHeader } from './DataHeader'\r\nimport { DataElement } from './DataElement'\r\nimport { DataList } from './DataList'\r\n\r\nexport function Data (properties : Data.Properties) : ReactElement {\r\n  return (\r\n    <div className={classNames('data', properties.className)}>\r\n      { properties.children }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport namespace Data {\r\n  export type Properties = {\r\n    children?: ReactNode,\r\n    className?: string\r\n  }\r\n\r\n  export const Header = DataHeader\r\n  export const Element = DataElement\r\n  export const List = DataList\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nexport function DataElement (properties : DataElement.Properties) : ReactElement {\r\n  const className : string = classNames(\r\n    'data-element',\r\n    properties.className,\r\n    { 'data-static': properties.static }\r\n  )\r\n\r\n  const style : any = { }\r\n\r\n  if (properties.width) {\r\n    style.width = properties.width\r\n  }\r\n\r\n  return (\r\n    <div className={className} style={style}>{ properties.children }</div>\r\n  )\r\n}\r\n\r\nexport namespace DataElement {\r\n  export type Properties = {\r\n    children?: ReactNode,\r\n    className?: string,\r\n    width?: string,\r\n    static?: boolean\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nexport function DataHeader (properties : DataHeader.Properties) : ReactElement {\r\n  return (\r\n    <div className={classNames('data-header', properties.className)}>\r\n      <div className='data-header-content'>\r\n        { properties.children }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport namespace DataHeader {\r\n  export type Properties = {\r\n    children?: ReactNode,\r\n    className?: string\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nexport function DataList (properties : DataList.Properties) : ReactElement {\r\n  const className : string = classNames(\r\n    'data-list',\r\n    properties.className,\r\n    { 'data-list-row': properties.row },\r\n    { 'data-list-header': properties.header }\r\n  )\r\n\r\n  const style : any = { }\r\n\r\n  if (properties.width) {\r\n    style.width = properties.width\r\n  }\r\n\r\n  return (\r\n    <div className={className} style={style}>\r\n      { properties.children }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport namespace DataList {\r\n  export type Properties = {\r\n    children?: ReactNode,\r\n    className?: string,\r\n    width?: string,\r\n    row?: boolean,\r\n    header?: boolean\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { PureComponent } from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport { Subject as SubjectModel } from '../../typescript/redux/document/Subject'\r\nimport { Document as DocumentModel } from '../../typescript/redux/document/Document'\r\nimport { DocumentEvent } from '../../typescript/redux/document/DocumentEvent'\r\nimport { Document } from '../Document'\r\n\r\nexport class RawSubject extends PureComponent<RawSubject.Properties, Subject.State> {\r\n  /**\r\n  * @see PureComponent.constructor\r\n  */\r\n  public constructor (props : RawSubject.Properties, context : any) {\r\n    super(props, context)\r\n\r\n    this.state = {\r\n      subject: null\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @see PureComponent.render\r\n  */\r\n  public render () : ReactElement {\r\n    if (this.state.subject == null) {\r\n      return null\r\n    }\r\n\r\n    const className : string = classNames('subject', this.props.className)\r\n\r\n    if (this.state.subject.key == null) {\r\n      return (\r\n        <Subject.Provider value={this.state}>\r\n          <div className={className}>\r\n            { this.props.children }\r\n          </div>\r\n        </Subject.Provider>\r\n      )\r\n    } else {\r\n      return (\r\n        <Subject.Provider value={this.state}>\r\n          <div className={className} id={this.state.subject.key}>\r\n            { this.props.children }\r\n          </div>\r\n        </Subject.Provider>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n  * @see PureComponent.componentDidMount\r\n  */\r\n  public componentDidMount () : void {\r\n    let creation : DocumentEvent.SubjectCreationEvent\r\n\r\n    if (this.props.parent) {\r\n      creation = DocumentEvent.createSubject(this.props.parent.identifier)\r\n    } else {\r\n      creation = DocumentEvent.createSubject()\r\n    }\r\n\r\n    this.props.onDocumentChange(creation, () : void => {\r\n      this.setState({ subject: creation.payback })\r\n    })\r\n  }\r\n\r\n  /**\r\n  * @see PureComponent.componentDidUpdate\r\n  */\r\n  public componentDidUpdate (oldProperties : RawSubject.Properties, oldState : Subject.State) : void {\r\n    if (oldProperties.document !== this.props.document && this.state.subject) {\r\n      const oldSubject : SubjectModel = oldState.subject\r\n      const newSubject : SubjectModel = this.props.document.get(oldSubject.identifier)\r\n\r\n      if (newSubject !== oldSubject) {\r\n        this.setState({ subject: newSubject })\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @see PureComponent.componentWillUnmount\r\n  */\r\n  public componentWillUnmount () : void {\r\n    this.props.onDocumentChange(\r\n      DocumentEvent.deleteSubject(\r\n        this.state.subject.identifier\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nnamespace RawSubject {\r\n  export type Properties = {\r\n    document: DocumentModel,\r\n    onDocumentChange: Document.ChangeListener,\r\n    parent?: SubjectModel,\r\n    children?: ReactNode,\r\n    className?: string\r\n  }\r\n}\r\n\r\nexport function Subject (props : Subject.Properties) : ReactElement {\r\n  return (\r\n    <Subject.Consumer>{\r\n      (subjectState : Subject.State) => (\r\n        <Document.Consumer>{\r\n          (documentState : Document.State) => (\r\n            <RawSubject\r\n              parent={subjectState ? subjectState.subject : null}\r\n              document={documentState.document}\r\n              onDocumentChange={documentState.onChange}\r\n              {...props}\r\n            />\r\n          )\r\n        }</Document.Consumer>\r\n      )\r\n    }</Subject.Consumer>\r\n  )\r\n}\r\n\r\nexport namespace Subject {\r\n  export type Properties = {\r\n    children?: ReactNode,\r\n    className?: string\r\n  }\r\n\r\n  export type State = { subject: SubjectModel }\r\n\r\n  export const Context : React.Context<State> = React.createContext(null)\r\n  export const Provider : React.Provider<State> = Context.Provider\r\n  export const Consumer : React.Consumer<State> = Context.Consumer\r\n}\r\n","import React from 'react'\r\nimport { PureComponent } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport { ReactElement } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nexport class SubjectContent extends PureComponent<SubjectContent.Properties> {\r\n  public render () : ReactElement {\r\n    return (\r\n      <div className={classNames('subject-content', this.props.className)}>\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport namespace SubjectContent {\r\n  export type Properties = {\r\n    children: ReactNode,\r\n    className?: string\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { PureComponent } from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { Subject } from './Subject'\r\nimport { Document } from '../Document'\r\nimport { DocumentEvent } from '../../typescript/redux/document/DocumentEvent'\r\nimport { Subject as SubjectModel } from '../../typescript/redux/document/Subject'\r\nimport { Document as DocumentModel } from '../../typescript/redux/document/Document'\r\n\r\nclass RawSubjectIdentifier extends PureComponent<RawSubjectIdentifier.Properties> {\r\n  /**\r\n  * @see React.render\r\n  */\r\n  public render () : ReactElement {\r\n    return null\r\n  }\r\n\r\n  public componentDidMount () {\r\n    this.props.onDocumentChange(\r\n      DocumentEvent.defineKey(\r\n        this.props.subject.identifier,\r\n        this.props.children\r\n      )\r\n    )\r\n  }\r\n\r\n  public componentDidUpdate (oldProps : RawSubjectIdentifier.Properties) {\r\n    if (this.props.children !== oldProps.children) {\r\n      this.props.onDocumentChange(\r\n        DocumentEvent.updateKey(\r\n          this.props.subject.identifier,\r\n          this.props.children\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount () {\r\n    this.props.onDocumentChange(\r\n      DocumentEvent.deleteKey(this.props.subject.identifier)\r\n    )\r\n  }\r\n}\r\n\r\nnamespace RawSubjectIdentifier {\r\n  export type Properties = {\r\n    subject: SubjectModel,\r\n    document: DocumentModel,\r\n    onDocumentChange: Document.ChangeListener\r\n    children: string\r\n  }\r\n}\r\n\r\nexport function SubjectIdentifier (props : SubjectIdentifier.Properties) : ReactElement {\r\n  return (\r\n    <Subject.Consumer>{\r\n      (subjectState : Subject.State) => (\r\n        <Document.Consumer>{\r\n          (documentState : Document.State) => (\r\n            <RawSubjectIdentifier\r\n              subject={subjectState ? subjectState.subject : null}\r\n              document={documentState.document}\r\n              onDocumentChange={documentState.onChange}\r\n              {...props}\r\n            />\r\n          )\r\n        }</Document.Consumer>\r\n      )\r\n    }</Subject.Consumer>\r\n  )\r\n}\r\n\r\nexport namespace SubjectIdentifier {\r\n  export type Properties = {\r\n    children: string\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { PureComponent } from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { classNames } from 'classnames'\r\n\r\nexport class SubjectKeyword extends PureComponent<SubjectSummary.Properties> {\r\n  public render () : ReactElement {\r\n    return null\r\n  }\r\n}\r\n\r\nexport namespace SubjectSummary {\r\n  export type Properties = {\r\n    children: string\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { PureComponent } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { classNames } from 'classnames'\r\n\r\nexport class SubjectSummary extends PureComponent<SubjectSummary.Properties> {\r\n  public render () : ReactElement {\r\n    return null\r\n  }\r\n}\r\n\r\nexport namespace SubjectSummary {\r\n  export type Properties = {\r\n    children: ReactNode\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { PureComponent } from 'react'\r\nimport { ReactElement } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport { Subject } from './Subject'\r\nimport { Document } from '../Document'\r\nimport { DocumentEvent } from '../../typescript/redux/document/DocumentEvent'\r\nimport { Subject as SubjectModel } from '../../typescript/redux/document/Subject'\r\nimport { Document as DocumentModel } from '../../typescript/redux/document/Document'\r\n\r\nclass RawSubjectTitle extends PureComponent<RawSubjectTitle.Properties> {\r\n  /**\r\n  * Render the heading element of this title in accordance with this title\r\n  * related subject depth.\r\n  *\r\n  * @return The heading element of this title component.\r\n  */\r\n  public renderHeading () : ReactElement {\r\n    const depth : number = this.props.document.getDepth(this.props.subject)\r\n\r\n    const className : string = classNames(\r\n      'title',\r\n      'title-' + (depth + 1)\r\n    )\r\n\r\n    switch (depth) {\r\n      case 0: return <h1 className={className}>{this.props.children}</h1>\r\n      case 1: return <h2 className={className}>{this.props.children}</h2>\r\n      case 2: return <h3 className={className}>{this.props.children}</h3>\r\n      case 3: return <h4 className={className}>{this.props.children}</h4>\r\n      case 4: return <h5 className={className}>{this.props.children}</h5>\r\n      case 5: return <h6 className={className}>{this.props.children}</h6>\r\n      default: return <div className={className}>{this.props.children}</div>\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @see React.render\r\n  */\r\n  public render () : ReactElement {\r\n    const className : string = classNames(\r\n      'subject-title text-center',\r\n      this.props.className\r\n    )\r\n\r\n    if (this.props.subject.key) {\r\n      return (\r\n        <div className={className}>\r\n          <a href={'#' + this.props.subject.key}>\r\n            {this.renderHeading()}\r\n          </a>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className={className}>\r\n          {this.renderHeading()}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  public componentDidMount () {\r\n    this.props.onDocumentChange(\r\n      DocumentEvent.defineName(\r\n        this.props.subject.identifier,\r\n        this.props.children\r\n      )\r\n    )\r\n  }\r\n\r\n  public componentDidUpdate (oldProps : RawSubjectTitle.Properties) {\r\n    if (this.props.children !== oldProps.children) {\r\n      this.props.onDocumentChange(\r\n        DocumentEvent.updateName(\r\n          this.props.subject.identifier,\r\n          this.props.children\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount () {\r\n    this.props.onDocumentChange(\r\n      DocumentEvent.deleteName(this.props.subject.identifier)\r\n    )\r\n  }\r\n}\r\n\r\nnamespace RawSubjectTitle {\r\n  export type Properties = {\r\n    subject: SubjectModel,\r\n    document: DocumentModel,\r\n    onDocumentChange: Document.ChangeListener\r\n    children: string,\r\n    className?: string\r\n  }\r\n}\r\n\r\n\r\nexport function SubjectTitle (props : SubjectTitle.Properties) : ReactElement {\r\n  return (\r\n    <Subject.Consumer>{\r\n      (subjectState : Subject.State) => (\r\n        <Document.Consumer>{\r\n          (documentState : Document.State) => (\r\n            <RawSubjectTitle\r\n              subject={subjectState ? subjectState.subject : null}\r\n              document={documentState.document}\r\n              onDocumentChange={documentState.onChange}\r\n              {...props}\r\n            />\r\n          )\r\n        }</Document.Consumer>\r\n      )\r\n    }</Subject.Consumer>\r\n  )\r\n}\r\n\r\nexport namespace SubjectTitle {\r\n  export type Properties = {\r\n    children: string,\r\n    className?: string\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport { Component } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport { Table2DCell } from './Table2DCell'\r\nimport { Table2DRow } from './Table2DRow'\r\n\r\nexport class Table2D extends Component<Table2D.Properties, Table2D.State> {\r\n  private _rows : number\r\n  private _columns : number\r\n  private _handlers : (() => void)[]\r\n\r\n  /**\r\n  * @see Component.constructor\r\n  */\r\n  public constructor (props : Table2D.Properties) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      column: -1,\r\n      row: -1\r\n    }\r\n\r\n    this._rows = 0\r\n    this._columns = 0\r\n    this._handlers = []\r\n\r\n    this.computeCellSelectionHandlers(props.children)\r\n\r\n    this.handleDeselection = this.handleDeselection.bind(this)\r\n    this.renderRow = this.renderRow.bind(this)\r\n  }\r\n\r\n  /**\r\n  *\r\n  */\r\n  private computeCellSelectionHandlers (children : ReactNode) : void {\r\n    this._rows = React.Children.count(children)\r\n    this._columns = React.Children.map(\r\n      children,\r\n      (child : ReactElement<Table2DRow.Properties>) => React.Children.count(\r\n        child.props.children\r\n      )\r\n    ).reduce((a : number, b : number) => Math.max(a, b), 0)\r\n\r\n    this._handlers.length = 0\r\n\r\n    for (let row = 0; row < this._rows; ++row) {\r\n      for (let column = 0; column < this._columns; ++column) {\r\n        this._handlers.push(this.handleCellSelection.bind(this, column, row))\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n  *\r\n  */\r\n  public handleCellSelection (column : number, row : number) : void {\r\n    this.setState({ row, column })\r\n  }\r\n\r\n  /**\r\n  *\r\n  */\r\n  public handleDeselection () : void {\r\n    this.setState({ row: -1, column: -1 })\r\n  }\r\n\r\n  /**\r\n  * @param Component.shouldComponentUpdate\r\n  */\r\n  public shouldComponentUpdate (nextProps : Table2D.Properties) : boolean {\r\n    if (nextProps.children !== this.props.children) {\r\n      this.computeCellSelectionHandlers(nextProps.children)\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  /**\r\n  * @param Component.render\r\n  */\r\n  public render () : ReactElement {\r\n    const className : string = classNames('table-2d', this.props.className)\r\n\r\n    return (\r\n      <table className={className} onMouseOut={this.handleDeselection}>\r\n        <tbody>\r\n          { React.Children.map(this.props.children, this.renderRow) }\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n\r\n  /**\r\n  *\r\n  */\r\n  private renderRow (children : ReactElement<Table2DRow.Properties>, row : number) : ReactElement<Table2DRow.Properties> {\r\n    return React.cloneElement(\r\n      children, {},\r\n      React.Children.map(\r\n        children.props.children,\r\n        (cell : ReactElement<Table2DCell.Properties>, column : number) : ReactElement<Table2DCell.Properties> => React.cloneElement(\r\n          cell, {\r\n            onSelect: this._handlers[row * this._columns + column],\r\n            selected: (\r\n              this.state.row === this._rows - 1 && column === this.state.column ||\r\n              this.state.column === 0 && row === this.state.row  ||\r\n              this.state.row  !== this._rows - 1 && this.state.column !== 0 && (\r\n                column === this.state.column || row === this.state.row\r\n              )\r\n            )\r\n          }\r\n        )\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nexport namespace Table2D {\r\n  export const Cell = Table2DCell\r\n  export const Row = Table2DRow\r\n\r\n  export type Properties = {\r\n    className?: string,\r\n    children?: ReactNode\r\n  }\r\n\r\n  export type State = {\r\n    row: number,\r\n    column: number\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport { PureComponent } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nfunction nothing () : void { }\r\n\r\nexport class Table2DCell extends PureComponent<Table2DCell.Properties> {\r\n  /**\r\n  * @see PureComponent.defaultProps\r\n  */\r\n  public static defaultProps : Table2DCell.Properties = {\r\n    onSelect: nothing\r\n  }\r\n\r\n  /**\r\n  * @see PureComponent.constructor\r\n  */\r\n  public constructor (props : Table2DCell.Properties) {\r\n    super(props)\r\n\r\n    this.handleMouseOver = this.handleMouseOver.bind(this)\r\n  }\r\n\r\n  /**\r\n  *\r\n  */\r\n  public handleMouseOver () : void {\r\n    if (!this.props.selected) {\r\n      this.props.onSelect()\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @param PureComponent.render\r\n  */\r\n  public render () : ReactElement {\r\n    const className : string = classNames(\r\n      { 'is-selected': this.props.selected },\r\n      this.props.className\r\n    )\r\n\r\n    if (this.props.heading) {\r\n      return (\r\n        <th\r\n          className={className}\r\n          onMouseOver={this.handleMouseOver}\r\n          style={{ width: this.props.width }}\r\n        > {this.props.children} </th>\r\n      )\r\n    } else {\r\n      return (\r\n        <td\r\n          className={className}\r\n          onMouseOver={this.handleMouseOver}\r\n          style={{ width: this.props.width }}\r\n        > {this.props.children} </td>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport namespace Table2DCell {\r\n  export type Properties = {\r\n    children?: ReactNode,\r\n    className?: string,\r\n    heading?: boolean,\r\n    selected?: boolean,\r\n    width?: string,\r\n    onSelect?: () => void\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport { PureComponent } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nexport class Table2DRow extends PureComponent<Table2DRow.Properties> {\r\n  /**\r\n  * @param PureComponent.render\r\n  */\r\n  public render () : ReactElement {\r\n    return (\r\n      <tr className={this.props.className}>\r\n        { this.props.children }\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport namespace Table2DRow {\r\n  export type Properties = {\r\n    children?: ReactNode,\r\n    className?: string\r\n  }\r\n\r\n  export type Element = ReactElement<Properties>\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../components/subject/SubjectTitle'\r\nimport { SubjectIdentifier } from '../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../components/subject/Subject'\r\n\r\nimport { Characteristics } from './characteristics'\r\nimport { Masteries } from './masteries'\r\nimport { Knowledges } from './knowledges'\r\nimport { Summary } from './Summary'\r\nimport { Feats } from './feats'\r\nimport { CoreRules } from './rules/core'\r\nimport { FightRules } from './rules/fight'\r\nimport { Echoes } from './echoes'\r\nimport { Alchemy } from './alchemy'\r\n\r\nexport function Content () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules</SubjectIdentifier>\r\n      <SubjectTitle>Table des lois</SubjectTitle>\r\n      <SubjectSummary>\r\n        <p> Règles du jeu corvus </p>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <Summary />\r\n        <Characteristics />\r\n        <Masteries />\r\n        <Knowledges />\r\n        <Feats />\r\n        <CoreRules />\r\n        <FightRules />\r\n        <Echoes />\r\n        <Alchemy />\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../components/subject/Subject'\r\nimport { ParentSummary } from '../components/ParentSummary'\r\n\r\nexport function Summary () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>summary</SubjectIdentifier>\r\n      <SubjectTitle>Sommaire</SubjectTitle>\r\n      <SubjectKeyword>Sommaire</SubjectKeyword>\r\n      <SubjectSummary>\r\n        <p> Sommaire du document. </p>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <ParentSummary />\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\nimport { LocalSummary } from '../../components/LocalSummary'\r\n\r\nimport { Introduction } from './Introduction'\r\nimport { EtherPoisoning } from './EtherPoisoning'\r\nimport { Definitions } from './Definitions'\r\nimport { Transformations } from './transformations'\r\nimport { PrimitiveMaterials } from './PrimitiveMaterials'\r\nimport { ProcessedMaterials } from './ProcessedMaterials'\r\nimport { Solvents } from './solvents'\r\n\r\nexport function Alchemy () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectTitle>Alchimie</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <LocalSummary />\r\n\r\n        <Introduction />\r\n        <EtherPoisoning />\r\n        <Definitions />\r\n        <Transformations />\r\n        <PrimitiveMaterials />\r\n        <ProcessedMaterials />\r\n        <Solvents />\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Definitions () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-definitions</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectTitle>Définitions</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          L'alchimie est un domaine qui requiert une certaine rigueur pour\r\n          permettre à ses pratiquants, les alchimistes, de communiquer\r\n          fidèlement entre eux, et surtout pour eux-même, le résultat de leurs\r\n          travaux et recherches. Cette première partie propose de faire un tour\r\n          des définitions nécéssaires et suffisantes pour comprendre le domaine\r\n          passionant qu'est l'alchimie.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Transformation.</strong> On appelle transformation tout\r\n          procédé permettant d'obtenir une ou plusieure matières dites matières\r\n          produites en consomant une ou plusieurs matières dites matières\r\n          consommées. L'infusion, la décoction, la macération, le séchage, la\r\n          dilution, la concentration, le broyage et la distillation sont des\r\n          exemples de transformation.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Matière.</strong> On appelle matière alchimique tout élément\r\n          pouvant subir une transformation ou être consommé. Une plante, un gaz,\r\n          une roche, un os, une peau, une chair et un liquide sont des exemples\r\n          de matière.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Élément primitif.</strong> On appelle élément primitif toute\r\n          matière extraite de la nature. C'est à dire n'ayant pas subie de\r\n          transformation objet de la volonté d'un alchimiste. Une plante, un\r\n          gaz, un minéral, un os, une peau ou une chair sont des exemples\r\n          d'éléments primitifs.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Transformé.</strong> On appelle transformé toute matière\r\n          résultant d'une transformation objet de la volonté d'un alchimiste.\r\n          Une infusion de menthe, une décoction de café ou une poudre de germe\r\n          de blé sont des exemples de transformé.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Propriété alchimiques.</strong> On appelle propriété\r\n          alchimique d'une matière tout ensemble d'effet insécable dont elle\r\n          fait l'objet. L'augmentation d'une caractéristique, l'application d'un\r\n          statut et l'ajout d'une capacité sont des exemples de propriété\r\n          alchimique.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Essence.</strong> On dit d'une matière qu'elle est une essence\r\n          si elle ne possède qu'une unique propriété alchimique.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nfunction * range (count : number) : Iterable<number> {\r\n  for (let index = 0; index < count; ++index) {\r\n    yield index\r\n  }\r\n}\r\n\r\nfunction cost (intoxication : number) : number {\r\n  return intoxication * (intoxication + 1) / 2\r\n}\r\n\r\nexport function EtherPoisoning () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-ether-poisoning</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Éther</SubjectKeyword>\r\n      <SubjectKeyword>Poison</SubjectKeyword>\r\n      <SubjectTitle>Intoxication à l'éther</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          L'éther est une substance nocive résiduelle méconue conséquence de la\r\n          pratique de la magie, de la consomation de produits alchimiques ou de\r\n          l'usage d'enchantement. C'est un poison lent qui s'accumule dans le\r\n          corps et qui peut provoquer de nombreux problèmes comme des délires,\r\n          de la fièvre, des vertiges, des hémorragies, de la dépendance, des\r\n          mutations ou encore la mort. On parle alors d'intoxication à l'éther.\r\n        </p>\r\n\r\n        <p>\r\n          L'intoxication à l'éther est appréciée par un nombre naturel. Chaque\r\n          palier représente une certaine concentration d'éther dans le sang\r\n          ainsi que la durée nécessaire pour qu'une partie de la toxine soit\r\n          éliminée naturellement. Pour perdre un niveau d'intoxication il faut\r\n          attendre un nombre d'heure qui lui est équivalent. Ainsi, un\r\n          personnage ayant un niveau d'intoxication de 5 points mettra 5 heures\r\n          à réduire son intoxication à 4 points, 9 heures pour le réduire à 3\r\n          points et 15 heures au total pour retomber à zéro points.\r\n        </p>\r\n\r\n        <table className=\"table-1d\">\r\n          <tbody>\r\n            <tr>\r\n              <td style={{width: '120px'}} rowSpan={2}> Guérison </td>\r\n              {\r\n                [...range(20)].map(function renderCell (index : number) : ReactElement {\r\n                  return (\r\n                    <td style={{width: '40px'}} key={index + 1}>\r\n                      {(cost(index + 1) / 24).toFixed(1)}j\r\n                    </td>\r\n                  )\r\n                })\r\n              }\r\n            </tr>\r\n            <tr>\r\n              {\r\n                [...range(20)].map(function renderCell (index : number) : ReactElement {\r\n                  return (\r\n                    <td style={{width: '40px'}} key={index + 1}>\r\n                      {cost(index + 1)}h\r\n                    </td>\r\n                  )\r\n                })\r\n              }\r\n            </tr>\r\n            <tr>\r\n              <th> Intoxication </th>\r\n              {\r\n                [...range(20)].map(function renderCell (index : number) : ReactElement {\r\n                  return (\r\n                    <th key={index + 1}>{index + 1}</th>\r\n                  )\r\n                })\r\n              }\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Un personnage est toujours immunisé aux effets de l'intoxication à\r\n          l'éther à hauteur de la moitiée de ses points de constitution. Au\r\n          delà, il doit réussir un test d'opposition entre sa constitution et\r\n          son niveau d'empoisonement une fois par jour et à chaque fois que son\r\n          niveau d'intoxication augmente. Si le test est une réussite le joueur\r\n          ne fait l'objet d'aucun effet indésirable supplémentaire, si le test\r\n          échoue le joueur doit alors lancer un nombre de dé 6 équivalent au\r\n          tiers de son niveau d'intoxication retranché de la moitié de sa\r\n          constitution et subir les conséquences du résultat obtenu sur la table\r\n          des effets indésirables exposée ci-dessous.\r\n        </p>\r\n\r\n        <table className=\"table-1d table-vertical\">\r\n          <thead>\r\n            <tr>\r\n              <th style={{width: '100px'}}> Score </th>\r\n              <th style={{width: '300px'}}> Effet </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td> ≤ 3 </td>\r\n              <td>\r\n                Effet éclair sans impact notoire. <br/>\r\n                Hyper-sensibilité, douleur articulaire, fatigue passagère.\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td> 4 - 9 </td>\r\n              <td>\r\n                Épisodes nauséeux et vertiges passagers. <br />\r\n                Perte de deux points de dextérité pendant 1D4 jours. <br />\r\n                Les effets peuvent être divisé par deux avec la consomation\r\n                d'une drogue tonique de qualité 5+. <br />\r\n                Cet effet est cumulable. <br />\r\n                Cet effet disparrais si le niveau d'empoisonement\r\n                est inférieur à la moitiée de la constitution du personnage.\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td> 10 - 14 </td>\r\n              <td>\r\n                Fièvre et douleurs articulaires. <br />\r\n                Pendant 1D6 jours : <br />\r\n                <ul>\r\n                  <li>Perte de deux points de constitution.</li>\r\n                  <li>Perte de deux points de contrôle.</li>\r\n                </ul>\r\n                Cet effet est cumulable <br />\r\n                Cet effet peut être divisés par deux avec l'administration d'un\r\n                anti-douleur et d'une drogue tonique de qualité 10+. <br />\r\n                Cet effet disparrais si le niveau d'empoisonement\r\n                est inférieur à la moitiée de la constitution du\r\n                personnage + 3.\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td> 15 - 16 </td>\r\n              <td>\r\n                Épisode d'hypotermie. <br />\r\n                Perte de quatre points de constitution pendant 1D6 / 3 jours. <br />\r\n                Les effets peuvent être divisés par deux avec l'administration\r\n                d'une drogue tonique de qualité 20+. <br />\r\n                Cet effet est cumulable.\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td> 17 - 20 </td>\r\n              <td>\r\n                Hémoragie. <br />\r\n                Le personnage est sujet à une hémoragie temporaire et perd 1D4\r\n                points de vie. <br />\r\n                Pendant 1D6/2 jours : <br />\r\n                <ul>\r\n                  <li>Perte de deux points de constitution.</li>\r\n                  <li>Perte de deux points de force.</li>\r\n                  <li>Perte de deux points de contrôle.</li>\r\n                </ul>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td> 21 - 25 </td>\r\n              <td>\r\n                Mutation. <br />\r\n                Test opposé de constitution et de volonté contre le niveau\r\n                d'empoisonement, en cas d'échec le personnage gagne un trait de\r\n                d'adaptation à l'éther.\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td> 26 - 36 </td>\r\n              <td>\r\n                Test opposé de constitution et de volonté contre le niveau\r\n                d'empoisonement. Si le test échoue le personnage meurt. <br />\r\n                En cas de réussite, le même test est rejoué cette fois pour\r\n                déterminer si le personnage est l'objet d'une mutation, en cas\r\n                d'échec le personnage gagne un trait d'adaptation à l'éther.\r\n                <br />\r\n                Un personnage avec quatre mutation ou plus réalisant un score de\r\n                26 ou plus devient une abbération d'éther et n'est plus jouable.\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Introduction () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-introduction</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectTitle>Introduction</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          L'alchimie est l'art de produire des substances aux propriétés\r\n          ésotériques par la composition d'éléments intermédiaires chargés tant\r\n          en puissance qu'en symbolique, elle se distingue de la magie\r\n          principalement par l'absence d'évocation verbale ou écrite.\r\n          Contrairement à la magie, l'alchimie ne nécéssite aucune\r\n          prédisposition particulière pour être étudiée et exercée.\r\n        </p>\r\n\r\n        <p>\r\n          Pratiquer l'alchimie c'est d'abord accumuler des connaissances puis\r\n          ensuite trouver les moyens et le temps permettant de les mettres en\r\n          oeuvre. Le domaine se scinde en plusieurs sous-domaines spécialisés\r\n          dans la production de certains type de substances particulières comme\r\n          les drogues, les poisons, les solutions, les sels ou les gaz.\r\n        </p>\r\n\r\n        <p>\r\n          Bien que la discipline biomantique soit originairement une branche de\r\n          l'alchimie elle est considéré comme un domaine à part nécéssitant une\r\n          spécialisation complète, cette technique est l'objet d'un chapitre\r\n          complet de ce manuel.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\nimport { LocalSummary } from '../../components/LocalSummary'\r\n\r\nimport { AlchemicMaterialSubjects } from '../../components/alchemy/AlchemicMaterialSubjects'\r\nimport { AlchemicMaterial } from '../../typescript/alchemy/AlchemicMaterial'\r\n\r\nimport { ALL } from '../../typescript/data/alchemy/primitive'\r\n\r\nexport function PrimitiveMaterials () : ReactElement {\r\n  const all : AlchemicMaterial[] = [].concat(ALL)\r\n\r\n  all.sort(function (a : AlchemicMaterial, b : AlchemicMaterial) : number {\r\n    return a.name.localeCompare(b.name)\r\n  })\r\n\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-primitive-materials</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Matière</SubjectKeyword>\r\n      <SubjectKeyword>Élément primitif</SubjectKeyword>\r\n      <SubjectTitle>Éléments primitifs</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <LocalSummary />\r\n\r\n        <AlchemicMaterialSubjects>{ all }</AlchemicMaterialSubjects>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\nimport { LocalSummary } from '../../components/LocalSummary'\r\n\r\nimport { AlchemicMaterialSubjects } from '../../components/alchemy/AlchemicMaterialSubjects'\r\nimport { AlchemicMaterial } from '../../typescript/alchemy/AlchemicMaterial'\r\n\r\nimport { ALL } from '../../typescript/data/alchemy/processed'\r\n\r\nexport function ProcessedMaterials () : ReactElement {\r\n  const all : AlchemicMaterial[] = [].concat(ALL)\r\n\r\n  all.sort(function (a : AlchemicMaterial, b : AlchemicMaterial) : number {\r\n    return a.name.localeCompare(b.name)\r\n  })\r\n\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-processed-materials</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Matière</SubjectKeyword>\r\n      <SubjectKeyword>Transformé</SubjectKeyword>\r\n      <SubjectTitle>Transformés</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <LocalSummary />\r\n\r\n        <AlchemicMaterialSubjects>{ all }</AlchemicMaterialSubjects>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { Alchemy } from './Alchemy'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function Introduction () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-solvents-introduction</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Solvant</SubjectKeyword>\r\n      <SubjectKeyword>Introduction</SubjectKeyword>\r\n      <SubjectTitle>Introduction</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Les solvants sont des liquides ou des solides capablent de retenir les\r\n          propriétés alchimiques de matières alchimiques principalement utilisés\r\n          pour consommer ces propriétés. Les solvants sont principalement utiles\r\n          dans la transformation de dissolution. Tous les solvants ne sont pas\r\n          considérés comme stable, c'est-à-dire qu'utiliser un solvant plutôt\r\n          qu'un autre peut avoir des effets globaux sur chaque propriété\r\n          dissoutes dans celui-ci.\r\n        </p>\r\n\r\n        <p>\r\n          Les solvants liquides comme l'eau, l'alcool ou la liqueur de lys sont\r\n          utilisés pour produire des poisons ou potions liquides. Ces liquides\r\n          doivent être ingérés pour faire effet. Les potions faites d'eau,\r\n          d'alcool ou de liqueur de lys ne peuvent pas être seulement appliquées\r\n          localement pour fonctionner. Il est possible, avec l'outillage\r\n          adéquat, d'injecter de force un poison ou une liqueur dans un corps,\r\n          dans de telles situations le liquide est alors considéré comme ingéré.\r\n        </p>\r\n\r\n        <p>\r\n          Les solvants sous forme d'huiles végétales, animales ou minérales\r\n          peuvent altérer drastiquement les propriétés d'un produit mais ont le\r\n          mérite de pouvoir appliquer ceux-ci temporairement sur une surface.\r\n          Une huile appliquée sur un objet qui provoque une blessure légère peut\r\n          s'infiltrer dans le corps de la victime et provoquer des effets\r\n          désastreux. Les huiles peuvent être appliquées, entre-autres, sur la\r\n          peau, sur les fourrures, sur les armes, sur les griffes, ou sur les\r\n          crocs pour provoquer des effets dévastateurs, certaines applications\r\n          peuvent cependant provoquer des ingestions accidentelles.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function LightAlcohool () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-solvents-light-alcohool</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Solvant</SubjectKeyword>\r\n      <SubjectKeyword>Alcool</SubjectKeyword>\r\n      <SubjectKeyword>Alcool faible</SubjectKeyword>\r\n      <SubjectTitle>Alcools faibles</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Les alcools faibles sont la famille de solvant composés des boissons\r\n          ayant ayant un degré d'alcool inférieur à 15%. Ceux-ci incluent donc\r\n          une majeure partie des cidres, bières, hydromels et champagnes ainsi\r\n          que certains vins. Les boissons ayant un degré d'alcool entre 5% et\r\n          8% sont ceux les plus utilisées comprenant notamment la bière et le\r\n          cidre pour leur facilité d'accès et leur faible coût, mais cela\r\n          n'empêche pas certains hurluberlu de dissoudre dans du champagne ou\r\n          d'autres alcools plus \"nobles\" pour satisfaire les désirs des plus\r\n          riches.\r\n        </p>\r\n\r\n        <p>\r\n          Utiliser l'alcool comme solvant est une méthode permettant d'augmenter\r\n          la durée de conservation des produits bien que les premiers\r\n          alchimistes ait utilisé ce type de solvant d'abord pour le goût et\r\n          ses effets récréatifs. Une matière dissoute dans un alcool faible\r\n          perds 1 point de qualité toute les deux semaines. Il est possible de\r\n          considérer que la plupart des potions perdent de leur efficacité dans\r\n          un alcool faible entre 6 mois et 8 mois de conservation.\r\n        </p>\r\n\r\n        <p>\r\n          Il semblerait que les alcools faibles réduisent légèrement le\r\n          phénomène d'intoxication à l'éther. Tout produit alchimique dissolu\r\n          dans l'alcool est alors consommable en appliquant ses effets tels que\r\n          décrit pour le standard dans l'eau en réduisant la toxicité à l'éther\r\n          du produit d'un point. Un score d'intoxication ne peut jamais être\r\n          négatif.\r\n        </p>\r\n\r\n        <p>\r\n          Tout personnage consommant une potion comprenant un l'alcool faible\r\n          doit réussir un jet d'opposition entre son score de constitution et un\r\n          degré de difficulté de 5 points plus 2 points par alcool faible\r\n          consommé dans les dernières 24 heures et 4 points par alcool fort déjà\r\n          consommé dans les dernières 24 heures. Un jet échoué applique au\r\n          personnage le statut d'ivresse.\r\n        </p>\r\n\r\n        <p>\r\n          La dissolution dans un alcool faible est d'un degré de difficulté de\r\n          base de 4 points.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function Liquor () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-solvents-liquor</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Solvant</SubjectKeyword>\r\n      <SubjectKeyword>Alcool</SubjectKeyword>\r\n      <SubjectKeyword>Alcool fort</SubjectKeyword>\r\n      <SubjectTitle>Alcools forts</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Les alcools forts sont la famille de solvant composés des boissons\r\n          ayant ayant un degré d'alcool supérieur à 15%. Ceux-ci incluent donc\r\n          notamment le rhum, le whisky, le calvados, l'absinthe ainsi que de\r\n          nombreuses liqueurs de fruit. Les alcools fort sont d'abord utilisés\r\n          pour conserver des matières très concentrées et pour embellir des\r\n          produits de grande rareté ne trouvant pas prenneur dans les semaines\r\n          suivant la conception du produit.\r\n        </p>\r\n\r\n        <p>\r\n          Utiliser l'alcool comme solvant est une méthode permettant d'augmenter\r\n          la durée de conservation des produits bien que les premiers\r\n          alchimistes ait utilisé ce type de solvant d'abord pour le goût et\r\n          ses effets récréatifs. Une matière dissoute dans un alcool fort\r\n          perds 1 point de qualité toute les deux mois. Il est possible de\r\n          considérer que la plupart des potions perdent de leur efficacité dans\r\n          un alcool fort entre 2 ans et 3 ans de conservation.\r\n        </p>\r\n\r\n        <p>\r\n          Il semblerait que les alcools forts réduisent le phénomène\r\n          d'intoxication à l'éther et augmentent certaines propriétés. Tout\r\n          produit alchimique dissolu dans un l'alcool fort est alors\r\n          consommable en appliquant ses effets tels que décrit pour le standard\r\n          dans l'eau mais en augmentant les effets sur les maîtrises de 1 point\r\n          et les effets sur les caractéristiques de 1 point peut importe leur\r\n          concentration, l'alcool fort réduit aussi la toxicité à l'éther du\r\n          produit de deux points. Un score d'intoxication ne peut jamais être\r\n          négatif.\r\n        </p>\r\n\r\n        <p>\r\n          Tout personnage consommant une potion comprenant un alcool fort\r\n          doit réussir un jet d'opposition entre son score de constitution et un\r\n          degré de difficulté de 10 points plus 2 points par alcool faible\r\n          consommé dans les dernières 24 heures et 4 points par alcool fort déjà\r\n          consommé dans les dernières 24 heures. Un jet échoué applique au\r\n          personnage le statut d'ivresse.\r\n        </p>\r\n\r\n        <p>\r\n          La dissolution dans un alcool fort est d'un degré de difficulté de\r\n          base de 8 points.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function NobleBlood () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-solvents-noble-blood</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Solvant</SubjectKeyword>\r\n      <SubjectKeyword>Alcool</SubjectKeyword>\r\n      <SubjectKeyword>Liqueur de lys</SubjectKeyword>\r\n      <SubjectTitle>Liqueur de lys</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          La liqueur de lys, ou sang des rois, est une liqueur fabriqué en\r\n          concentrant et en laissant reposé du lys azurée pendant plusieurs\r\n          mois. C'est le solvant liquide le plus noble. On dit que son goût\r\n          s'adapte à la personnalité de celui qui le consume en lui donnant une\r\n          sensation de libertée inégalée. La liqueur de lys est un liquide bleu\r\n          azurée pur légèrement luminescent.\r\n        </p>\r\n\r\n        <p>\r\n          Utiliser la liqueur de lys comme solvant est une méthode permettant de\r\n          conserver des matières alchimiques ad vitam eternam. La liqueur de lys\r\n          est un produit qui ne bouge pas et qui conserve parfaitement les\r\n          propriétés des effets qui y sont dissous.\r\n        </p>\r\n\r\n        <p>\r\n          Tout produit alchimique dissolu dans la liqueur de lys voit ses\r\n          effets multipliés par 3, si les effets ne sont pas des bonus mais des\r\n          status leur durée est multipliée par 3. La consommation d'un produit\r\n          dans la liqueur de lys provoque une intoxication doublée à laquelle\r\n          s'ajoute une intoxication de base de 2 points. Certaines matières\r\n          peuvent provoquer des effets supplémentaires dans la liqueur de lys,\r\n          ces effets ne subissent aucune modification.\r\n        </p>\r\n\r\n        <p>\r\n          La dissolution dans la liqueur de lys est d'un degré de difficulté de\r\n          base de 12 points.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function Oil () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-solvents-oil</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Solvant</SubjectKeyword>\r\n      <SubjectKeyword>Huîle végétale</SubjectKeyword>\r\n      <SubjectTitle>Huîles végétales</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Les huîles végétales comme l'huîle d'olive sont des solvants neutre\r\n          communs permettant d'appliquer des effets sur des surfaces.\r\n        </p>\r\n\r\n        <p>\r\n          Une matière alchimique dissolue dans une huîle végétale perd de sa\r\n          qualité à hauteur d'un point de qualité tous les mois. Il est possible\r\n          de considérer que la plupart des potions perdent de leur efficacité\r\n          dans l'huîle entre 1 an et 1 an et demie de conservation.\r\n        </p>\r\n\r\n        <p>\r\n          Tout produit alchimique dissolu dans l'huîle est appliquable sur des\r\n          surfaces en suivant les effets décrit. Les effets ne pouvant être\r\n          appliqués à des objets peuvent être tout de même appliqués à une\r\n          tierce personne lorsque celle-ci subit une blessure.\r\n        </p>\r\n\r\n        <p>\r\n          Quand un individu est exposé aux effets d'une huile par une blessure\r\n          il peut alors réaliser un test d'opposition entre sa constitution et\r\n          un degré de difficulté équivalent à 5 points additionné de la qualité\r\n          moyenne de l'huile. Si le test échoue, l'individu subit alors\r\n          l'ensemble des effets de l'huile et l'intoxication à l'éther qui va\r\n          avec.\r\n        </p>\r\n\r\n        <p>\r\n          La dissolution dans l'huile est d'un degré de difficulté de base de 8\r\n          points.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\nimport { LocalSummary } from '../../../components/LocalSummary'\r\n\r\nimport { Introduction } from './Introduction'\r\nimport { Water } from './Water'\r\nimport { LightAlcohool } from './LightAlcohool'\r\nimport { Liquor } from './Liquor'\r\nimport { NobleBlood } from './NobleBlood'\r\nimport { Oil } from './Oil'\r\n\r\nexport function Solvents () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-solvents</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Solvant</SubjectKeyword>\r\n      <SubjectTitle>Solvants</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <LocalSummary />\r\n\r\n        <Introduction />\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <LightAlcohool />\r\n          </div>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <Liquor />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <NobleBlood />\r\n          </div>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <Oil />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row justify-content-center'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <Water />\r\n          </div>\r\n        </div>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function Water () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-solvents-water</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Solvant</SubjectKeyword>\r\n      <SubjectKeyword>Eau</SubjectKeyword>\r\n      <SubjectTitle>Eau</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          L'eau est un solvant neutre très commun et c'est bien par ce qu'il\r\n          n'altère aucunement les propriété des matières dissoutes en son sein\r\n          que les alchimistes l'utilisent si abondamment pour travailler les\r\n          matières qu'ils possèdent avant d'en faire des produits finis.\r\n        </p>\r\n\r\n        <p>\r\n          Une matière alchimique dissolue dans l'eau perd de sa qualité à\r\n          hauteur d'un point de qualité tous les trois jours. L'eau est donc un\r\n          excelent outil de travail mais plutôt un mauvais solvant pour\r\n          conserver des produits dans le temps. Il est possible de considérer\r\n          que la plupart des potions perdent de leur efficacité dans l'eau entre\r\n          1 mois et demie et 2 mois de conservation.\r\n        </p>\r\n\r\n        <p>\r\n          Tout produit alchimique dissolu dans l'eau est consommable en\r\n          appliquant ses effets tels que décrit.\r\n        </p>\r\n\r\n        <p>\r\n          La dissolution dans l'eau est d'un degré de difficulté de base nul.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { Solvents } from './Solvents'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nfunction range (count : number) : number[] {\r\n  const result : number[] = []\r\n\r\n  for (let index = 0; index < count; ++index) {\r\n    result.push(index)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport function Concentration () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-transformation-concentration</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Transformation</SubjectKeyword>\r\n      <SubjectKeyword>Concentration</SubjectKeyword>\r\n      <SubjectTitle>Concentration</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          La concentration est une transformation qui permet de sommer les\r\n          effets de deux matière liquide ayant les mêmes propriétés alchimiques.\r\n          La qualité d'une concentration est la moyenne des qualités des\r\n          produits concentrés arrondie à l'inférieur. La concentration de deux\r\n          produits somme aussi le niveau d'intoxication de ceux-ci. Pour\r\n          concentrer il faut uniquement une téhière et une source de chaleur\r\n          suffisante pour réduire la quantité de solvant total.\r\n        </p>\r\n\r\n        <p>\r\n          La concentration de deux produits nécéssite un test d'opposition\r\n          entre la connaissance de la concentration de son utilisateur et un\r\n          degré de difficulté équivalent à 4 fois la concentration actuelle.\r\n        </p>\r\n\r\n        <table className='table-1d'>\r\n          <tbody>\r\n            <tr>\r\n              <td> Degré de difficulté</td>\r\n              {\r\n                range(10).map(function renderCell (index : number) : ReactElement {\r\n                  return (\r\n                    <td key={index}>\r\n                      {(index + 1) * 5}\r\n                    </td>\r\n                  )\r\n                })\r\n              }\r\n            </tr>\r\n            <tr>\r\n              <th style={{width: '200px'}}> Degré de concentration</th>\r\n              {\r\n                range(10).map(function renderCell (index : number) : ReactElement {\r\n                  return (\r\n                    <th key={index} style={{width: '35px'}}>\r\n                      {(index + 1)}\r\n                    </th>\r\n                  )\r\n                })\r\n              }\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function Decoction () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-transformation-decoction</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Transformation</SubjectKeyword>\r\n      <SubjectKeyword>Décoction</SubjectKeyword>\r\n      <SubjectTitle>Décoction</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          La décoction est une transformation qui permet d'extraire des\r\n          propriétés alchimiques en disolvant de la matière dans l'eau. C'est\r\n          une transformation un peut plus complexe que l'infusion qui nécéssite\r\n          un kit d'alchimiste comprenant mortier et pilon afin de pré-traiter la\r\n          matière à transformer. La décoction se réalise dans un chaudron et\r\n          requiert de laisser la matière se dissoudre complètement avant de\r\n          laisser le résultat refroidir. Le résultat d'une décoction peut\r\n          nécéssiter l'utilisation de certains substrats supplémentaire afin\r\n          d'éviter une sédimentation des particules de matière entraînant ainsi\r\n          la perte du substrat obtenu. Le résultat d'une décoction est par\r\n          métonymie une décoction.\r\n        </p>\r\n\r\n        <p>\r\n          Pour réaliser une décoction il faut réaliser un test d'auto-résolution\r\n          en utilisant son niveau de connaissance de la décoction. La qualité\r\n          d'une décoction équivaut à la moyenne entre la qualité de la matière\r\n          première utilisée et la qualité de la décoction elle même.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function Dilution () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-transformation-dilution</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Transformation</SubjectKeyword>\r\n      <SubjectKeyword>Dilution</SubjectKeyword>\r\n      <SubjectTitle>Dilution</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          La dilution est une transformation qui permet de réduire les effets\r\n          d'une matière liquide. La qualité d'une dilution est équivalente à la\r\n          qualité du produit dilué. Il n'est pas possible de diluer un produit à\r\n          un degré tel qu'on ne puisse diviser chacune de ses propriétés\r\n          alchimiques par le degré de dilution choisi. Pour diluer il faut\r\n          uniquement un contenant libre et du solvant. La dilution ne\r\n          nécéssite aucune connaissance particulière.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nfunction range (count : number) : number[] {\r\n  const result : number[] = []\r\n\r\n  for (let index = 0; index < count; ++index) {\r\n    result.push(index)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport function Dissolution () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-transformation-dissolution</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Transformation</SubjectKeyword>\r\n      <SubjectKeyword>Dissolution</SubjectKeyword>\r\n      <SubjectTitle>Dissolution</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          La dissolution est une transformation qui permet de produire un\r\n          produit alchimique sous forme de liquide en mélangeant une matière\r\n          dans un solvant. Le résultat d'une dissolution est, en fonction de la\r\n          matière et du solvant soit une potion, soit un poison ou soit une\r\n          huile.\r\n        </p>\r\n\r\n        <p>\r\n          Pour dissoudre de la matière alchimique il faut réussir un test\r\n          d'opposition entre la connaissance de la dissolution de l'alchimiste\r\n          et un degré de difficulté égal au degré de difficulté de base du\r\n          solvant additionné au degré de difficulté lié au nombre de propriétés\r\n          que l'on tente de dissoudre.\r\n        </p>\r\n\r\n        <p>\r\n          Pour le degré de difficulté des solvants prière de se reporter à la\r\n          <a href='#alchemy-solvents'>section de ce chapitre traitant des\r\n          solvants.</a>\r\n        </p>\r\n\r\n        <table className='table-1d'>\r\n          <tbody>\r\n            <tr>\r\n              <td>Degré de difficulté</td>\r\n              {\r\n                range(10).map(function renderCell (index : number) : ReactElement {\r\n                  return (\r\n                    <td key={index}>\r\n                      {(index + 1) * (index + 2) / 2}\r\n                    </td>\r\n                  )\r\n                })\r\n              }\r\n            </tr>\r\n            <tr>\r\n              <th style={{width: '200px'}}>Nombre de propriétés</th>\r\n              {\r\n                range(10).map(function renderCell (index : number) : ReactElement {\r\n                  return (\r\n                    <th key={index} style={{width: '35px'}}>\r\n                      {(index + 1)}\r\n                    </th>\r\n                  )\r\n                })\r\n              }\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function Distillation () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-transformation-distillation</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Transformation</SubjectKeyword>\r\n      <SubjectKeyword>Distillation</SubjectKeyword>\r\n      <SubjectTitle>Distillation</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          La distillation est une transformation qui permet de séparer les\r\n          propriétés alchimiques d'une matière liquide en utilisant\r\n          l'évaporation et la condensation. C'est une opération qui nécéssite\r\n          l'accès à un laboratoire d'alchimie équipé d'un alambic, d'une source\r\n          de chaleur et d'un système de refroidissement fonctionnel. Pour\r\n          distiller il faut faire bouillir la matière à transformer à une\r\n          température précise puis faire en sorte que le gaz formé puisse se\r\n          condenser de nouveau pour former un nouveau liquide plus pur. Ce\r\n          procédé peut prendre plusieurs heures. Le résultat d'une distillation\r\n          est un distillat.\r\n        </p>\r\n\r\n        <p>\r\n          Pour réaliser une distillation il faut réaliser un test d'opposition\r\n          entre la connaissance de la distillation de l'alchimiste et le nombre\r\n          et la qualité des produits à séparés.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function Infusion () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-transformation-infusion</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Transformation</SubjectKeyword>\r\n      <SubjectKeyword>Infusion</SubjectKeyword>\r\n      <SubjectTitle>Infusion</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          L'infusion est une transformation lente qui permet d'extraire des\r\n          propriétés alchimiques d'éléments primitifs dans de l'eau. C'est une\r\n          transformation simple qui nécéssite seulement une téhière en étain.\r\n          Pour infuser il suffit de monter de l'eau à ébulition puis de laisser\r\n          reposer les éléments primitifs à transformer dans le liquide pendant\r\n          qu'il refroidit. Les résiduts de l'infusion doivent être jetés après\r\n          opération. Par métonymie le résultat d'un processus d'infusion est une\r\n          infusion.\r\n        </p>\r\n\r\n        <p>\r\n          Pour infuser une matière il faut réaliser un test d'auto-résolution\r\n          en utilisant son niveau de connaissance de l'infusion.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function Maceration () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-transformation-maceration</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Transformation</SubjectKeyword>\r\n      <SubjectKeyword>Macération</SubjectKeyword>\r\n      <SubjectTitle>Macération</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          La macération est une transformation lente qui permet d'extraire des\r\n          propriétés alchimiques en laissant se décomposer de la matière dans un\r\n          solvant. C'est une opération qui nécéssite surtout d'avoir du temps et\r\n          un espace clos relativement sécuritaire afin d'éviter toute\r\n          contamination extérieure. La macération se réalise dans un chaudron et\r\n          requiert de laisser la matière se décomposer dans un solvant à\r\n          température ambiante. Ce procédé peut prendre entre un et plusieurs\r\n          jours. Le résultat d'une macération est un macérat.\r\n        </p>\r\n\r\n        <p>\r\n          Pour réaliser une macération il faut réaliser un test\r\n          d'auto-résolution en utilisant son niveau de connaissance de la\r\n          macération.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function Percolation () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-transformation-percolation</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Transformation</SubjectKeyword>\r\n      <SubjectKeyword>Percolation</SubjectKeyword>\r\n      <SubjectTitle>Percolation</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          La percolation est une transformation lente qui permet d'extraire des\r\n          propriétés alchimiques en faisant traverser un liquide dans une\r\n          couche de matière perméable à une certaine pression. C'est\r\n          une transformation complexe qui nécéssite l'accès à un laboratoire\r\n          comprenant un système de percolation. Le résultat d'une percolation\r\n          est un filtrat.\r\n        </p>\r\n\r\n        <p>\r\n          Pour réaliser une percolation il faut réaliser un test\r\n          d'auto-résolution en utilisant son niveau de connaissance de la\r\n          percolation.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function Reduction () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-transformation-reduction</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Transformation</SubjectKeyword>\r\n      <SubjectKeyword>Réduction</SubjectKeyword>\r\n      <SubjectTitle>Réduction</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          La réduction est une forme dégénérée de distillation qui consiste à\r\n          éliminer les propriétés d'une matière qui bouilleront en premier. Soit\r\n          à dépiler des propriétés de la liste de propriétés d'une matière.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\nimport { LocalSummary } from '../../../components/LocalSummary'\r\n\r\nimport { Concentration } from './Concentration'\r\nimport { Decoction } from './Decoction'\r\nimport { Dilution } from './Dilution'\r\nimport { Dissolution } from './Dissolution'\r\nimport { Distillation } from './Distillation'\r\nimport { Infusion } from './Infusion'\r\nimport { Maceration } from './Maceration'\r\nimport { Percolation } from './Percolation'\r\nimport { Reduction } from './Reduction'\r\n\r\nexport function Transformations () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-transformations</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Transformation</SubjectKeyword>\r\n      <SubjectTitle>Transformations</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <LocalSummary />\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <Concentration />\r\n          </div>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <Decoction />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <Dilution />\r\n          </div>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <Dissolution />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <Distillation />\r\n          </div>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <Infusion />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <Maceration />\r\n          </div>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <Percolation />\r\n          </div>\r\n        </div>\r\n        <div className='row justify-content-center'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <Reduction />\r\n          </div>\r\n        </div>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { Transformations } from './Transformations'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\nimport { LocalSummary } from '../../components/LocalSummary'\r\n\r\nimport { Constitution } from './Constitution'\r\nimport { Control } from './Control'\r\nimport { Dexterity } from './Dexterity'\r\nimport { Luck } from './Luck'\r\nimport { Power } from './Power'\r\nimport { Strength } from './Strength'\r\n\r\nexport function Characteristics () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>characteristics</SubjectIdentifier>\r\n      <SubjectKeyword>Caractéristique</SubjectKeyword>\r\n      <SubjectTitle>Charactéristiques</SubjectTitle>\r\n      <SubjectSummary>\r\n        <p>\r\n          Les caractéristiques dépeignent les capacités innées d'un personnage et\r\n          influencent de nombreuses ressources connexes. Chaque caractéristique\r\n          est appréciée par un entier relatif.\r\n        </p>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='row'>\r\n          <div className='col'>\r\n            <LocalSummary />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col'>\r\n            <p>\r\n              Les caractéristiques dépeignent les capacités innées d'un\r\n              personnage et influencent de nombreuses ressources connexes.\r\n              Chaque caractéristique est appréciée par un entier relatif. Les\r\n              caractéristiques d'un personnage humain sont initialement évaluées\r\n              à -9 et il est possible d'y répartir un total de 62 points. Une\r\n              caractéristique humaine ne peut pas être supérieure à 10 points.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <Luck />\r\n          </div>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <Constitution />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <Control />\r\n          </div>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <Dexterity />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <Strength />\r\n          </div>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <Power />\r\n          </div>\r\n        </div>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Constitution () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>characteristics-constitution</SubjectIdentifier>\r\n      <SubjectKeyword>Caractéristique</SubjectKeyword>\r\n      <SubjectKeyword>Constitution</SubjectKeyword>\r\n      <SubjectTitle>Constitution</SubjectTitle>\r\n      <SubjectSummary>\r\n        <p>\r\n          La constitution est la caractéristique qui représente la résistance\r\n          physique du corps. Cette caractéristique mesure notamment le nombre de\r\n          point de vie d'un personnage.\r\n        </p>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p className='text-center'>\r\n          <img src='./images/characteristics/constitution.svg' width='200' />\r\n        </p>\r\n\r\n        <p>\r\n          La constitution représente la résistance physique du corps, elle mesure\r\n          notamment le nombre de point de vie. Un bon niveau de constitution permet\r\n          d'encaisser plus de coups, de supporter des climats difficiles,\r\n          de résister aux maladies et de fournir des efforts sur de plus longues\r\n          périodes.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Control () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>characteristics-control</SubjectIdentifier>\r\n      <SubjectKeyword>Caractéristique</SubjectKeyword>\r\n      <SubjectKeyword>Contrôle</SubjectKeyword>\r\n      <SubjectTitle>Contrôle</SubjectTitle>\r\n      <SubjectSummary>\r\n        <p>\r\n          Le contrôle est la caractéristique qui représente la maîtrise consciente\r\n          de soi et le recul vis-à-vis de ses sentiments. Cette caractéristique\r\n          mesure notamment la volonté d'un personnage.\r\n        </p>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p className='text-center'>\r\n          <img src='./images/characteristics/control.svg' width='200' />\r\n        </p>\r\n\r\n        <p>\r\n          Le contrôle représente la maîtrise consciente de soi et le recul vis-à-vis\r\n          de ses sentiments, elle mesure aussi la volonté d'un personnage. Un bon\r\n          niveau de contrôle permet de résister aux manipulations mentales et de\r\n          garder son sang froid dans les situations difficiles.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Dexterity () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>characteristics-dexterity</SubjectIdentifier>\r\n      <SubjectKeyword>Caractéristique</SubjectKeyword>\r\n      <SubjectKeyword>Dextérité</SubjectKeyword>\r\n      <SubjectTitle>Dextérité</SubjectTitle>\r\n      <SubjectSummary>\r\n        <p>\r\n          Le dextérité est la caractéristique qui représente la précision des sens\r\n          d'un personnage. Cette caractéristique mesure notamment l'initiative\r\n          d'un personnage en combat.\r\n        </p>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p className='text-center'>\r\n          <img src='./images/characteristics/dexterity.svg' width='200' />\r\n        </p>\r\n\r\n        <p>\r\n          La dextérité représente la précision des sens, elle mesure aussi\r\n          l'initiative d'un personnage en combat. Un bon niveau de dextérité\r\n          permet d'agir le premier, de se mouvoir sans faire de bruit, d'esquiver\r\n          et de maîtriser les armes de jet et les armes légères.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Luck () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>characteristics-luck</SubjectIdentifier>\r\n      <SubjectKeyword>Caractéristique</SubjectKeyword>\r\n      <SubjectKeyword>Chance</SubjectKeyword>\r\n      <SubjectTitle>Chance</SubjectTitle>\r\n      <SubjectSummary>\r\n        <p>\r\n          Le chance est la caractéristique qui représente la capacité d'un\r\n          personnage à se créer des opportunités. Cette caractéristique\r\n          mesure notamment le nombre de point de destin du personnage.\r\n        </p>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p className='text-center'>\r\n          <img src='./images/characteristics/luck.svg' width='200' />\r\n        </p>\r\n\r\n        <p>\r\n          La chance représente la capacité à se créer des opportunités, elle\r\n          mesure aussi le nombre de point de destin du personnage. Un bon niveau\r\n          de chance permet de trouver plus facilement des biens précieux et de\r\n          créer des situations bénéfiques aux allures de deus ex machina.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Power () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>characteristics-power</SubjectIdentifier>\r\n      <SubjectKeyword>Caractéristique</SubjectKeyword>\r\n      <SubjectKeyword>Pouvoir</SubjectKeyword>\r\n      <SubjectTitle>Pouvoir</SubjectTitle>\r\n      <SubjectSummary>\r\n        <p>\r\n          Le pouvoir est la caractéristique qui représente la capacité d'un\r\n          personnage à plier la réalité à sa volonté en usant de prouesses\r\n          mentales. Cette caractéristique mesure notamment l'affinité à la magie.\r\n        </p>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p className='text-center'>\r\n          <img src='./images/characteristics/power.svg' width='200' />\r\n        </p>\r\n\r\n        <p>\r\n          Le pouvoir représente la capacité à plier la réalité à sa volonté en\r\n          usant de prouesses mentales, il mesure aussi l'affinité à la magie. Un\r\n          bon niveau de pouvoir permet de résister aux effets magiques et de\r\n          lancer des sorts plus puissant.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Strength () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>characteristics-strength</SubjectIdentifier>\r\n      <SubjectKeyword>Caractéristique</SubjectKeyword>\r\n      <SubjectKeyword>Force</SubjectKeyword>\r\n      <SubjectTitle>Force</SubjectTitle>\r\n      <SubjectSummary>\r\n        <p>\r\n          La force est la caractéristique qui représente la capacité d'un\r\n          personnage à altérer le réel par l'usage de moyens physiques. Cette\r\n          caractéristique mesure notamment la capacité de charge.\r\n        </p>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p className='text-center'>\r\n          <img src='./images/characteristics/strength.svg' width='200' />\r\n        </p>\r\n\r\n        <p>\r\n          La force représente la capacité à altérer le réel par l'usage\r\n          de moyens physiques, elle mesure aussi la capacité de charge. Un bon\r\n          niveau de force permet d'équiper plus de matériel, de maîtriser les\r\n          armures et armes lourdes et de faire plus de dégât physique.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { Characteristics } from './Characteristics'\r\nexport { Constitution } from './Constitution'\r\nexport { Control } from './Control'\r\nexport { Dexterity } from './Dexterity'\r\nexport { Luck } from './Luck'\r\nexport { Power } from './Power'\r\nexport { Strength } from './Strength'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Affinity () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>echoes-affinity</SubjectIdentifier>\r\n      <SubjectKeyword>Écho</SubjectKeyword>\r\n      <SubjectKeyword>Affinité</SubjectKeyword>\r\n      <SubjectTitle>Affinité</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          L'affinité est une mesure de la cohésion entre l'hôte et son echo. Elle\r\n          est appréciée sur une échelle de 1 à 100 et connue uniquement du maître du\r\n          jeu. Une affinité ne peut pas être négative ou nulle et une affinité ne\r\n          peut pas avoir une valeur supérieure à 100. L'affinité entre un hôte et un\r\n          Écho influence l'efficacité des atouts de celui-ci, son obéissance et les\r\n          chances d'en augmenter la maîtrise.\r\n        </p>\r\n\r\n        <p>\r\n          L'affinité de départ de tout hôte est égale à 1 et plusieurs types\r\n          d'évènement peuvent influencer ce score. Certains évènements impliqueront\r\n          une augmentation ou une réduction immédiate de l'affinité entre l'hôte et\r\n          son Écho, d'autres nécéssiteront de réaliser un test d'affinité négatif\r\n          ou positif pour déterminer l'impact exact de l'évènement.\r\n        </p>\r\n\r\n        <p>\r\n          Lors d'un test d'affinité négatif l'hôte doit lancer un dé 100 et faire un\r\n          score inférieur ou égal à un degré de difficulté équivalent à son score\r\n          d'affinité actuel additionné de son score de contrôle multipliée par 5. Si\r\n          l'hôte réussi son jet alors son affinité subira un malus d'1D10 points.\r\n          Bien entendu toute perte d'affinité s'accompagne d'une réaction adéquate\r\n          de l'Écho.\r\n        </p>\r\n\r\n        <p>\r\n          Lors d'un test d'affinité positif l'hôte doit lancer un dé 100 et faire un\r\n          score strictement supérieur à un degré de difficulté équivalent à score\r\n          d'affinité actuel retranché de son score de contrôle multipliée par 5. Si\r\n          l'hôte réussi son jet alors son affinité obtiendra un bonus d'1D10 points.\r\n          Bien entendu tout gain d'affinité s'accompagne d'une réaction adéquate de\r\n          l'Écho.\r\n        </p>\r\n\r\n        <p>\r\n          Le résultat d'un test d'affinité ne peut pas déboucher sur un score\r\n          supérieur à 100 ou sur un score inférieur à 1. Si le résultat d'un jet\r\n          provoque un dépassement d'une des deux limites, alors le score est\r\n          considéré comme égal à la limite ainsi dépassée. Tous les tests sont\r\n          réalisés à l'aveugle sur demande du maître du jeu, les joueurs ne peuvent\r\n          se baser que sur le comportement de leur Écho pour avoir une idée de leur\r\n          score d'affinité actuel.\r\n        </p>\r\n\r\n        <p>\r\n          Les tests d'affinités sont plus évident à faire jouer pour les hôtes\r\n          ayant un Écho qui se manifeste régulièrement. Pour les hôtes ayant un\r\n          Écho ad nihil les tests d'affinités sont joués en fonction de leur\r\n          comportement. Les hôtes suivant une morale stricte ont plus de chance\r\n          d'augmenter leur affinité avec leur Écho que les hôtes ayant un\r\n          comportement plus ératiques, moins prédictible. Les hôtes ad nihil ayant\r\n          un score de contrôle négatif augmentent naturellement leur affinité à\r\n          chaque fois qu'ils réalisent un haut-fait.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Categories () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>echoes-categories</SubjectIdentifier>\r\n      <SubjectKeyword>Écho</SubjectKeyword>\r\n      <SubjectKeyword>Catégorie</SubjectKeyword>\r\n      <SubjectTitle>Catégories</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Il est difficile de se représenter la société des Échos car celle-ci\r\n          évolue dans un univers libéré de la matière et du temps. Il semble\r\n          cependant évident que leurs intérêts ne convergent pas vers un but\r\n          commun et que les Échos s'opposent les uns aux autres constamment.\r\n        </p>\r\n\r\n        <p>\r\n          Considérer que la relation entre Échos soit proche du chaos total est\r\n          cependant une simplification extrême de la réalité. Dans les faits il\r\n          existe une forme de hiérarchie des Échos principalement basé sur leur\r\n          rôle au sein du jeu politique constant qui est le leur. Ainsi, certains\r\n          Échos, par ce qu'ils sont plus anciens, plus intelligents ou plus\r\n          puissants que les autres ont une capacité plus importante à imposer leur\r\n          volonté à leurs congénères.\r\n        </p>\r\n\r\n        <p>\r\n          La catégorie d'Écho dont un personnage est hôte impacte les effets de\r\n          celui-ci en fonction du type de manifestation. Les Échos les plus\r\n          puissants peuvent prodiguer de prodigieux pouvoirs en contrepartie d'un\r\n          contrôle bien plus difficile, et d'une vie bien plus mouvementée. Certains\r\n          Écho peuvent évoluer d'une catégorie à l'autre, aux prix de difficiles\r\n          épreuves.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les apostats</em>, environ 1% de la masse connue des Échos sont des\r\n          irrégularités qui ne jouent pas le jeu politique de leurs frères et\r\n          soeurs. La course au pouvoir ne les motives pas et ils vivent leur propre\r\n          vie relégué aux marges de la civilisation. Bien qu'ils soit considérés\r\n          comme particulièrement faibles certains des Échos les plus puissants\r\n          seraient bien en fait des apostats et non des primitifs. Il est assez\r\n          difficile de dessiner le portrait d'une catégorie si hétérogène.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les satellites</em> représentent 50%, soit une certaine forme de\r\n          majorité des Échos. Ce sont des faibles sans grandes ambitions qui jouent\r\n          tout de même à leur échelle le jeu de leur plan. Quand un satellite ce\r\n          fait remarqué, par ces faits ou sa puissance, il a de forte chance de se\r\n          faire des contacts et de devenir nobles. Ils sont donc en compétition\r\n          constante les uns vis-à-vis des autres dans une certaine forme de chaos\r\n          contrôlé par des Échos plus intelligents.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les nobles</em> représentent 25% des Échos, ce sont des exécutants\r\n          à la loyauté douteuse dont le seul objectif est d'accumuler suffisamment\r\n          de pouvoir pour gravir l'échelon suppérieur. Ils sont assez libre de faire\r\n          ce qu'ils veulent, et bien qu'ils répondent le plus clair de leur temps à\r\n          des tâches confiés par des princes ils aiment tout de même parachever des\r\n          petits complots visant à saper le pouvoir accumulé par leurs congénères.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les princes</em>, environ 14% des Échos, appartiennent à\r\n          des cours formées autour de primitifs cherchant à obtenir les faveurs d'un\r\n          puissant pour devenir à leur tour des ainés. Ils sont cependant bien plus\r\n          libres que les Échos appartenant à la catégorie qu'ils visent et peuvent\r\n          changer d'obédience sans grandes conséquences sur leur statut bien que le\r\n          manque de fidelité ne soit pas la première qualité recherchée pour un\r\n          ainé. La rude compétition qui a lieue entre les princes représente le\r\n          principal danger de rétrogradation auxquels ils sont confrontés car leur\r\n          statut est avant tout liée à leur influence sur les nobles. En général,\r\n          les princes sont des superviseurs chargés de déleguer les tâches qui leur\r\n          sont confiées pas les ainés.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les ainés</em>, environ 7% des Échos, sont les conseilliers\r\n          directs des primitifs. Bien que suffisamment puissant pour se tenir en\r\n          dehors de la mêlée génerale de leur plan, ils ne sont pas assez légitimes\r\n          pour être indépendants des primitif qu'ils servent aveuglément. Certains,\r\n          rares, peuvent parfois fomanter avec succès un complot pour ce isser au\r\n          sommet du pouvoir, mais échouer une telle entreprise n'est pas sans\r\n          conséquences. Les ainés vivent une vie assez paisible dans l'ensemble et\r\n          laissent court à leur nature profonde tout en tentant de glanner le\r\n          maximum d'information et de moyen possible pour aider le primitif qu'ils\r\n          servent.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les primitifs</em> représente environ 3% des Échos. Ce sont des\r\n          intriguants passés maîtres incontestés du jeu politique de leur plan.\r\n          Ils ont une volonté de fer et un pouvoir quasiment sans limite mais ce\r\n          sont des Échos qui préfèrent les conflits indirects plutôt que les\r\n          confrontations musclées. De par leur rareté les primitifs se connaissent\r\n          tous les uns-les autres, ils semblent former une sorte de conseil d'Échos\r\n          et décident des grandes règles qui ont cours sur leur plan. Comme tout\r\n          conseil d'individus surpuissant, tous les primitifs aimeraient bien\r\n          défaire leurs congénère pour n'être plus que les seuls maîtres à bord de\r\n          leur vaisseau.\r\n        </p>\r\n\r\n        <table className='table-1d' style={{ width: '100%'}}>\r\n          <tbody>\r\n            <tr>\r\n              <td> Jet </td>\r\n              <td style={{ width: '150px'}}> ≤ 3% </td>\r\n              <td style={{ width: '150px'}}> ≤ 10% </td>\r\n              <td style={{ width: '150px'}}> ≤ 24% </td>\r\n              <td style={{ width: '150px'}}> ≤ 49% </td>\r\n              <td style={{ width: '150px'}}> ≤ 99% </td>\r\n              <td style={{ width: '150px'}}> = 100% </td>\r\n            </tr>\r\n            <tr>\r\n              <th> Catégorie de l'Écho </th>\r\n              <th> Primitifs </th>\r\n              <th> Ainés </th>\r\n              <th> Princes </th>\r\n              <th> Nobles </th>\r\n              <th> Satellites </th>\r\n              <th> Apostats </th>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\nimport { LocalSummary } from '../../components/LocalSummary'\r\n\r\nimport { Introduction } from './Introduction'\r\nimport { Affinity } from './Affinity'\r\nimport { Categories } from './Categories'\r\nimport { Manifestations } from './Manifestations'\r\nimport { Mastery } from './Mastery'\r\n\r\nexport function Echoes () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>echoes</SubjectIdentifier>\r\n      <SubjectKeyword>Écho</SubjectKeyword>\r\n      <SubjectTitle>Échos</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <LocalSummary />\r\n        \r\n        <Introduction />\r\n        <Manifestations />\r\n        <Categories />\r\n        <Affinity />\r\n        <Mastery />\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Introduction () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>echoes-introduction</SubjectIdentifier>\r\n      <SubjectKeyword>Écho</SubjectKeyword>\r\n      <SubjectTitle>Introduction</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Les <strong>Échos</strong> sont la plus naturelle des formes d'ésotérisme. Un\r\n          Écho est une créature consciente et indépendante de forme inconnue qui\r\n          représente une idée, un concept, un évènement ou une personnalité dans sa plus\r\n          cristalline des formes. Il existe une quantité infinie d'Échos catégorisés\r\n          par leur rôle dans la géopolitique particulière de leur société.\r\n        </p>\r\n\r\n        <p>\r\n          Chaque individu faisant preuve de libre arbitre est forcément lié à un Écho\r\n          à la naissance, on dit alors de la créature qu'elle est <strong>hôte</strong>\r\n          de son Écho. La nature de la relation entre un hôte et un Écho est appelé\r\n          une <strong>manifestation</strong>. Bien que le phénomène soit excessivement\r\n          commun, rares sont les individus ayant une connaissance pointue de la nature\r\n          profonde des Échos. Aussi, les individus ayant la capacité de manifester leur\r\n          Écho, même dans la plus simple des formes, sont largement minoritaires.\r\n        </p>\r\n\r\n        <p>\r\n          Les Échos sont un moyen unique d'avoir un accès illimité à une forme\r\n          primitive de magie. Contrairement à l'arcane, utiliser une magie Écho ne\r\n          requiert aucune prédisposition biologique et n'implique aucune forme\r\n          d'empoisonnement à l'éther. Cependant abuser d'un tel pouvoir n'est pas sans\r\n          conséquences sur le long terme.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Manifestations () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>echoes-manifestations</SubjectIdentifier>\r\n      <SubjectKeyword>Écho</SubjectKeyword>\r\n      <SubjectKeyword>Manifestation</SubjectKeyword>\r\n      <SubjectTitle>Manifestations</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          La nature de la relation entre un <strong>hôte</strong> et son\r\n          <strong>Écho</strong> est communément appelé une\r\n          <strong>manifestation</strong>. Le type de manifestation d'un Écho dépend\r\n          de l'affinité entre celui-ci et son hôte. La manifestation d'un Écho peut\r\n          apporter divers bonus comme malus.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Ad nihil.</em> C'est la manifestation la plus répandue, elle relève\r\n          d'une situation où l'hôte et l'Écho ne communiquent pas. Bien que\r\n          pour le profane cette situation puisse être assimilée à l'absence pure et\r\n          simple d'Écho il ne faut pas se tromper : l'Écho est tout de même\r\n          bien présent bien que rien ne le motive à s'ingérer dans les affaires de\r\n          son hôte. Un Écho ad nihil n'apporte aucun avantage ni inconvénient.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Ad mentis.</em> Cette manifestation se résume principalement en un\r\n          dialogue interne plus ou moins constant entre l'hôte et l'Écho. Les\r\n          Échos profitent de ce type de situation pour orienter leur hôte pour\r\n          qu'ils exécutent leurs plans à moyen - long terme. Cependant dans cet état\r\n          les Échos sont incapable de communiquer simplement, ils peuvent parler du\r\n          présent, du futur, du passé ou de sujets qui n'ont aucun rapport avec le\r\n          plan de l'hôte. Sous cette forme seulement le joueur reçoit gratuitement\r\n          l'atout <strong>Écho oracle</strong>.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Ad naturam.</em> Ce type de manifestation consiste essentiellement en\r\n          la matérialisation de l'Écho sous une forme quelconque. En fonction de\r\n          l'Écho cette manifestation peut débloquer un <strong>atout d'Écho\r\n          ad naturam</strong>. Un Écho matérialisé perd entièrement sa capacité\r\n          d'omniscience entrainant la perte de l'atout\r\n          <strong>Écho oracle</strong>. Bien que la forme matérielle de l'Écho\r\n          puisse se battre et réaliser des tâches simples elles restent des\r\n          incarnations complètement indépendantes de leur hôte et peuvent donc ne\r\n          pas répondre aux ordres donnés si ceux-ci ne leur conviennent pas.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Ad commutationem</em> Dans cette situation l'hôte peut prendre le\r\n          contrôle de l'incarnation de l'Écho. Celui-ci est aussi plus enclin à\r\n          suivre les ordres qui lui sont donnés et peut prendre le contrôle du corps\r\n          de l'hôte tant que celui-ci l'y autorise. Cette situation peut entraîner\r\n          un bonus de caractéristique mentale, ainsi que l'ajout d'un <strong>atout\r\n          d'Écho ad commutationem</strong>. Cette situation permet de plus\r\n          d'accéder à tous les atouts <strong>ad commutationem</strong> génériques\r\n          comme le <strong>sommeil du guetteur</strong>.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Ad hominem.</em> C'est la situation la plus instable de manifestation,\r\n          l'hôte peut manifester un certain nombre de mutations mineures. Cette\r\n          situation entraîne l'apparition d'un bonus de caractéristique physique,\r\n          mais aussi l'ajout d'un <strong>atout d'Écho ad hominem</strong>. Dans\r\n          cette situation la démarcation entre Écho et hôte est extrêmement floue\r\n          et l'hôte peut perdre le contrôle de son corps si son score de contrôle\r\n          est trop faible.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Ad fusionem.</em> La manifestation ad fusionem est la forme la plus\r\n          forte de manifestation et consiste en la destruction complète de la\r\n          personnalité et de la volonté de l'hôte qui laisse entièrement place à\r\n          l'Écho. L'Écho peut toujours contrôler sa manifestation matérielle qui\r\n          n'est alors plus qu'une coquille vide. Un état de fusion est équivalent à\r\n          une mort définitive pour tout personnage joueur.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Mastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>echoes-mastery</SubjectIdentifier>\r\n      <SubjectKeyword>Écho</SubjectKeyword>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectTitle>Maîtrise</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { Echoes } from './Echoes'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function AcrobaticDodgingFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-accrobatic-dodging</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Esquive</SubjectKeyword>\r\n      <SubjectKeyword>Esquive acrobatique</SubjectKeyword>\r\n      <SubjectTitle>Esquive acrobatique</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Acrobatie</td>\r\n              <td>5+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le personnage gagne une esquive acrobatique supplémentaire par round, une\r\n          esquive acrobatique est résolue comme une acrobatie dont le succès aboutit\r\n          aux effets d'une esquive standard. Lors d'une esquive acrobatique le\r\n          personnage subit un malus de 20% sur sa tentative d'esquive.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Acrobatie</td>\r\n              <td>10+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Esquive</td>\r\n              <td>5+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le personnage gagne deux esquives acrobatiques supplémentaires par round,\r\n          une esquive acrobatique est résolue comme une acrobatie dont le succès\r\n          aboutit aux effets d'une esquive standard. Lors d'une esquive acrobatique\r\n          le personnage subit un malus de 20% sur sa tentative d'esquive.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function AcrobaticParryFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-accrobatic-parry</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Parade</SubjectKeyword>\r\n      <SubjectKeyword>Parade acrobatique</SubjectKeyword>\r\n      <SubjectTitle>Parade acrobatique</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Acrobatie</td>\r\n              <td>15+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le personnage gagne une parade supplémentaire par round, cette parade est\r\n          résolue comme une acrobatie dont le succès aboutit aux effets d'une parade\r\n          standard avec l'arme choisie. Lors d'une parade acrobatique le personnage\r\n          subit un malus de 20% sur sa tentative.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function AtlasBurdenFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-atlas-burden</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Fardeau d'Atlas</SubjectKeyword>\r\n      <SubjectTitle>Fardeau d'Atlas</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Constitution</td>\r\n              <td>14+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Gagnez 1 point de charge supplémentaire tous les 4 point de charge\r\n          effectif.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Constitution</td>\r\n              <td>18+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Fardeau d'Atlas</td>\r\n              <td>I</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Gagnez 1 point de charge supplémentaire tous les 2 point de charge\r\n          effectif.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function BloodBathFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-blood-bath</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Bain de sang</SubjectKeyword>\r\n      <SubjectTitle>Bain de sang (!)</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Haches ou Dagues</td>\r\n              <td>8+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Contrôle</td>\r\n              <td>14-</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Infligez 1 point de dégât supplémentaire tous les 4 points de vie\r\n          perdus.\r\n        </p>\r\n\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Haches ou Dagues</td>\r\n              <td>16+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Contrôle</td>\r\n              <td>10-</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Bain de sang</td>\r\n              <td>I</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Infligez 1 point de dégât supplémentaire tous les 2 points de vie\r\n          perdus.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function BloodThirstFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-blood-thirst</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Soif de sang</SubjectKeyword>\r\n      <SubjectTitle>Soif de sang (!)</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Constitution</td>\r\n              <td>14+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Contrôle</td>\r\n              <td>14-</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Gagnez 1 point d'initiative supplémentaire tous les 4 points de vie\r\n          perdus.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Constitution</td>\r\n              <td>18+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Contrôle</td>\r\n              <td>10-</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Soif de sang</td>\r\n              <td>I</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Gagnez 1 point d'initiative supplémentaire tous les 2 points de vie\r\n          perdus.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function BullChargeFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-bull-charge</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Charge</SubjectKeyword>\r\n      <SubjectKeyword>Charge du taureau</SubjectKeyword>\r\n      <SubjectTitle>Charge du taureau</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Force</td>\r\n              <td>12+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Armures lourdes</td>\r\n              <td>5+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Lors d'une charge, ajouter autant de dégât physique que la totalité des\r\n          points de charge utilisé divisé par 4.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Force</td>\r\n              <td>14+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Armures lourdes</td>\r\n              <td>10+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Charge du taureau</td>\r\n              <td>I</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Lors d'une charge, ajouter autant de dégât physique que la totalité des\r\n          points de charge utilisé divisé par 2.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            III\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Force</td>\r\n              <td>18+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Armures lourdes</td>\r\n              <td>18+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Charge du taureau</td>\r\n              <td>II</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Lors d'une charge, ajouter autant de dégât physique que la totalité des\r\n          points de charge utilisé.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function CatGraceFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-cat-grace</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Vol contrôlé</SubjectKeyword>\r\n      <SubjectTitle>Vol contrôlé</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Dextérité</td>\r\n              <td>14+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Acrobatie</td>\r\n              <td>15+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Si une acrobatie visant un autre personnage échoue alors l'acteur de\r\n          l'acrobatie peut tenter de se rattraper in-extremis en passant un test\r\n          d'acrobatie de difficulté 18 afin d'annuler tous les effets de la parade\r\n          ou de l'esquive de sa victime. Si l'acteur réussi son jet, la parade ou\r\n          l'esquive de sa victime est annulée et décomptée de la quantité de parade\r\n          ou d'esquive de son tour.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function ChainAttackFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-chain-attack</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Attaque en chaîne</SubjectKeyword>\r\n      <SubjectTitle>Attaque en chaîne</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Épées courtes ou Épées batardes</td>\r\n              <td>5+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Peut échanger lors d'une attaque à outrance une parade à l'épée courte ou\r\n          à l'épée batarde contre une attaque supplémentaire. Les attaques\r\n          supplémentaires se résolvent comme des attaques standards avec un malus de\r\n          10% par attaque déjà portée.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Épées courtes</td>\r\n              <td>10+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Attaque en chaîne</td>\r\n              <td>I</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Peut échanger lors d'une attaque à outrance jusqu'à deux parades à l'épée\r\n          courte contre une attaque supplémentaire. Les attaques supplémentaires se\r\n          résolvent comme des attaques standards avec un malus de 10% par attaque\r\n          déjà portée. Il est toujours possible d'échanger une seule parade à l'épée\r\n          batarde contre une attaque supplémentaire.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            III\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Épées courtes</td>\r\n              <td>15+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Dextérité</td>\r\n              <td>12+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Attaque en chaîne</td>\r\n              <td>II</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Peut échanger lors d'une attaque à outrance jusqu'à trois parades à l'épée\r\n          courte contre une attaque supplémentaire. Les attaques supplémentaires se\r\n          résolvent comme des attaques standard avec un malus de 10% par attaque\r\n          déjà portée. Il est toujours possible d'échanger une seule parade à l'épée\r\n          batarde contre une attaque supplémentaire.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            IV\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Épées courtes</td>\r\n              <td>20+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Dextérité</td>\r\n              <td>20+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Attaque en chaîne</td>\r\n              <td>III</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Peut échanger lors d'une attaque à outrance jusqu'à quatre parades à l'épée\r\n          courte contre une attaque supplémentaire. Les attaques supplémentaires se\r\n          résolvent comme des attaques standard avec un malus de 10% par attaque\r\n          déjà portée. Il est toujours possible d'échanger une seule parade à l'épée\r\n          batarde contre une attaque supplémentaire.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function ChainDodgeFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-chain-dodge</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Esquive</SubjectKeyword>\r\n      <SubjectKeyword>Esquive en chaîne</SubjectKeyword>\r\n      <SubjectTitle>Esquive en chaîne</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Esquive</td>\r\n              <td>8+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le personnage gagne une esquive supplémentaire par round, chaque esquive\r\n          supplémentaire jouée durant un round se voit attribuée un malus de 10%\r\n          cumulatif.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Esquive</td>\r\n              <td>12+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le personnage gagne deux esquives supplémentaires par round, chaque\r\n          esquive supplémentaire jouée durant un round se voit attribuée un malus de\r\n          10% cumulatif.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            III\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Esquive</td>\r\n              <td>16+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Dextérité</td>\r\n              <td>16+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le personnage gagne trois esquives supplémentaire par round, chaque\r\n          esquive supplémentaire jouée durant un round se voit attribuée un malus de\r\n          10% cumulatif.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function CounterAttackFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-counter-attack</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Contre attaque</SubjectKeyword>\r\n      <SubjectTitle>Contre attaque</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Maîtrise d'arme légère</td>\r\n              <td>6+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Une fois par round, un personnage équipé d'une arme légère possédant cet\r\n          atout et venant de parer un coup peut toujours choisir de contre attaquer\r\n          gratuitement. Les rôles du défenseur et de l'attaquant sont alors inversé.\r\n        </p>\r\n\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Maîtrise d'arme légère</td>\r\n              <td>12+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Contre attaque</td>\r\n              <td>I</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Deux fois par round, un personnage équipé d'une arme légère possédant cet\r\n          atout et venant de parer un coup peut toujours choisir de contre attaquer\r\n          gratuitement. Les rôles du défenseur et de l'attaquant sont alors inversé.\r\n        </p>\r\n\r\n\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            III\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Maîtrise d'arme légère</td>\r\n              <td>20+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Contre attaque</td>\r\n              <td>II</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Trois fois par round, un personnage équipé d'une arme légère possédant cet\r\n          atout et venant de parer un coup peut toujours choisir de contre attaquer\r\n          gratuitement. Les rôles du défenseur et de l'attaquant sont alors inversé.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function DefensiveStyleFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-defensive-style</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Style défensif</SubjectKeyword>\r\n      <SubjectTitle>Style défensif</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Épées courtes</td>\r\n              <td>5+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Gagne une parade supplémentaire à l'épée courte par round.\r\n        </p>\r\n\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Épées courtes</td>\r\n              <td>10+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Style défensif</td>\r\n              <td>I</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Gagne deux parades supplémentaires à l'épée courte par round.\r\n        </p>\r\n\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            III\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Épées courtes</td>\r\n              <td>17+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Dextérité</td>\r\n              <td>12+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Style défensif</td>\r\n              <td>II</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Gagne trois parades supplémentaires à l'épée courte par round.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function DiehardFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-diehard</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Dur à cuir</SubjectKeyword>\r\n      <SubjectTitle>Dur à cuir</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Constitution</td>\r\n              <td>14+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Gagnez 1 point de vie supplémentaire tous les 4 points de vie effectif.\r\n          Vous mourrez toujours si vous accumulez plus de 150% de votre\r\n          <strong>constitution</strong> en dégât.\r\n        </p>\r\n\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Constitution</td>\r\n              <td>18+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Dur à cuir</td>\r\n              <td>I</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Gagnez 1 point de vie supplémentaire tous les 2 points de vie effectif.\r\n          Vous mourrez toujours si vous accumulez plus de 150% de votre\r\n          <strong>constitution</strong> en dégât.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function DoubleSkinFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-double-skin</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Seconde peau</SubjectKeyword>\r\n      <SubjectTitle>Seconde peau</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Armures légères</td>\r\n              <td>8+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Toutes les armures légères voient leur malus de charge réduit de 1 point.\r\n        </p>\r\n\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Armures légères</td>\r\n              <td>16+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Seconde peau</td>\r\n              <td>I</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Toutes les armures légères voient leur malus de charge réduit de 2 point.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function EagleChargeFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-eagle-charge</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Charge</SubjectKeyword>\r\n      <SubjectKeyword>Charge de l'aigle</SubjectKeyword>\r\n      <SubjectTitle>Charge de l'aigle</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Épées courtes</td>\r\n              <td>10+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Lors d'une charge un personnage possédant cet atout peut toujours choisir\r\n          d'échanger une parade à l'épée courte contre une attaque supplémentaire.\r\n          Les attaques supplémentaires se résolvent comme des attaques standard avec\r\n          un malus de 10% par attaque déjà portée. Les bénefices de la charge\r\n          s'appliquent à l'ensemble des coups portés.\r\n        </p>\r\n\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Épées courtes</td>\r\n              <td>20+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Dextérité</td>\r\n              <td>14+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Lors d'une charge un personnage possédant cet atout peut toujours choisir\r\n          d'échanger jusqu'à deux parades à l'épée courte contre une attaque\r\n          supplémentaire. Les attaques supplémentaires se résolvent comme des\r\n          attaques standard avec un malus de 10% par attaque déjà portée. Les\r\n          bénefices de la charge s'appliquent à l'ensemble des coups portés.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\nimport { LocalSummary } from '../../components/LocalSummary'\r\n\r\nimport { AcrobaticDodgingFeat } from './AcrobaticDodgingFeat'\r\nimport { AcrobaticParryFeat } from './AcrobaticParryFeat'\r\nimport { AtlasBurdenFeat } from './AtlasBurdenFeat'\r\nimport { BloodBathFeat } from './BloodBathFeat'\r\nimport { BloodThirstFeat } from './BloodThirstFeat'\r\nimport { BullChargeFeat } from './BullChargeFeat'\r\nimport { CatGraceFeat } from './CatGraceFeat'\r\nimport { ChainAttackFeat } from './ChainAttackFeat'\r\nimport { ChainDodgeFeat } from './ChainDodgeFeat'\r\nimport { CounterAttackFeat } from './CounterAttackFeat'\r\nimport { DefensiveStyleFeat } from './DefensiveStyleFeat'\r\nimport { DiehardFeat } from './DiehardFeat'\r\nimport { DoubleSkinFeat } from './DoubleSkinFeat'\r\nimport { EagleChargeFeat } from './EagleChargeFeat'\r\nimport { FlashDodgeFeat } from './FlashDodgeFeat'\r\nimport { FullDodgeFeat } from './FullDodgeFeat'\r\nimport { HackerFeat } from './HackerFeat'\r\nimport { TwistedFeat } from './TwistedFeat'\r\nimport { VulcanStrikeFeat } from './VulcanStrikeFeat'\r\nimport { WindDanceFeat } from './WindDanceFeat'\r\n\r\nexport function Feats () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectTitle>Atouts</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <LocalSummary />\r\n        \r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <CatGraceFeat />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <AcrobaticParryFeat />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <AcrobaticDodgingFeat />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <AtlasBurdenFeat />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <BullChargeFeat />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <DiehardFeat />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <FullDodgeFeat />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <ChainDodgeFeat />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <WindDanceFeat />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <FlashDodgeFeat />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <BloodBathFeat />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <BloodThirstFeat />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <DefensiveStyleFeat />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <ChainAttackFeat />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <DoubleSkinFeat />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <TwistedFeat />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <CounterAttackFeat />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <EagleChargeFeat />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <HackerFeat />\r\n          </div>\r\n        </div>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function FlashDodgeFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-flash-dodge</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Esquive</SubjectKeyword>\r\n      <SubjectKeyword>Esquive instinctive</SubjectKeyword>\r\n      <SubjectTitle>Esquive instinctive</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Esquive</td>\r\n              <td>14+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Contrôle</td>\r\n              <td>12-</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le personnage peut tenter d'esquiver les flèches moyennant un malus de 30%\r\n          sur son jet d'esquive.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function FullDodgeFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-full-dodge</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Esquive</SubjectKeyword>\r\n      <SubjectKeyword>Esquive totale</SubjectKeyword>\r\n      <SubjectTitle>Esquive totale</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Esquive</td>\r\n              <td>5+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Au prix d'une action de mouvement, le personnage peut toujours choisir de\r\n          jouer en dernier et de gagner une esquive supplémentaire lors du round en\r\n          cours.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function HackerFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-hacker</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Hacker</SubjectKeyword>\r\n      <SubjectTitle>Hacker (!)</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Maîtrise de la dague</td>\r\n              <td>10+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Un fois par round, en guise d'attaque à outrance, un personnage armé\r\n          d'une dague peut toujours choisir d'ignorer tout ou partie de l'armure de\r\n          son adversaire. A cette fin le personnage doit réussir une attaque normale\r\n          plus un jet d'opposition entre sa maîtrise de la dague et le nombre de\r\n          point d'armure à ignorer multiplié par quatre. Si le second jet réussi\r\n          l'assassin porte alors un coup ignorant tout ou partie de l'armure de son\r\n          adversaire.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Maîtrise de la dague</td>\r\n              <td>20+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Dextérité</td>\r\n              <td>14+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Un fois par round, en guise d'attaque à outrance, un personnage armé\r\n          d'une dague peut toujours choisir d'ignorer tout ou partie de l'armure de\r\n          son adversaire. A cette fin le personnage doit réussir une attaque normale\r\n          plus un jet d'opposition entre sa maîtrise de la dague et le nombre de\r\n          point d'armure à ignorer multiplié par deux. Si le second jet réussi\r\n          l'assassin porte alors un coup ignorant tout ou partie de l'armure de son\r\n          adversaire.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function TwistedFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-twisted</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Coup retord</SubjectKeyword>\r\n      <SubjectTitle>Coup retord</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Maîtrise d'arme</td>\r\n              <td>15+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Une fois par round quand le personnage échoue une tentative d'attaque il\r\n          peut retenter sa chance moyennant un malus supplémentaire de 40% sur le\r\n          jet de touche. Si le second coup porte les dégâts sont divisés par deux et\r\n          arrondi à l'entier inférieur, minimum un point de dégât de chaque type\r\n          proposé par l'arme.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Maîtrise d'arme</td>\r\n              <td>20+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Dextérité</td>\r\n              <td>16+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Coup retord</td>\r\n              <td>I</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Deux fois par round quand le personnage échoue une tentative d'attaque il\r\n          peut retenter sa chance moyennant un malus supplémentaire de 40% sur le\r\n          jet de touche. Si le second coup porte les dégâts sont divisés par deux et\r\n          arrondi à l'entier inférieur, minimum un point de dégât de chaque type\r\n          proposé par l'arme.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function WindDanceFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-wind-dance</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Danse des vents</SubjectKeyword>\r\n      <SubjectTitle>Danse des vents</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Esquive</td>\r\n              <td>20+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Avec cet atout le malus attribué à un enchaînement d'esquive durant un\r\n          round est réduit à 5% cumulatif.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { Feats } from './Feats'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\nimport { LocalSummary } from '../../components/LocalSummary'\r\n\r\nexport function Knowledges () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>knowledges</SubjectIdentifier>\r\n      <SubjectKeyword>Connaissance</SubjectKeyword>\r\n      <SubjectTitle>Connaissances</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <LocalSummary />\r\n\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { Knowledges } from './Knowledges'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Introduction () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-introduction</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectTitle>Introduction</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Les maîtrises sont des champs disciplinaires appréciés sur une échelle\r\n          relative divisé en deux modificateurs : un modificateur inné et un\r\n          modificateur acquis.\r\n        </p>\r\n\r\n        {/*<Math\r\n          value={\r\n            '$$\\\\text{Niveau de maîtrise} = \\\\text{Modificateur inné} + ' +\r\n            ' \\\\text{Modificateur acquis}$$'\r\n          }\r\n        />*/}\r\n\r\n        <p>\r\n          Le <strong>modificateur d'acquis</strong> d'une maîtrise dépend du total de\r\n          point d'expérience investit dans celle-ci. Les 5 premiers points d'acquis\r\n          coûtent 1 point d'expérience, les 5 suivants 3 points d'expérience, les 5\r\n          encore suivant 6 points d'expérience et les 5 derniers 10 points\r\n          d'expérience. Il faut un total de 100 points d'expérience pour acquérir les\r\n          20 premiers point d'acquis d'une maîtrise.\r\n        </p>\r\n\r\n        <table className=\"table-1d\">\r\n          <tbody>\r\n            <tr>\r\n              <td style={{width: '120px'}}> Expérience </td>\r\n              <td style={{width: '35px'}}>   0 </td>\r\n              <td style={{width: '35px'}}>   1 </td>\r\n              <td style={{width: '35px'}}>   2 </td>\r\n              <td style={{width: '35px'}}>   3 </td>\r\n              <td style={{width: '35px'}}>   4 </td>\r\n              <td style={{width: '35px'}}>   5 </td>\r\n              <td style={{width: '35px'}}>   8 </td>\r\n              <td style={{width: '35px'}}>  11 </td>\r\n              <td style={{width: '35px'}}>  14 </td>\r\n              <td style={{width: '35px'}}>  17 </td>\r\n              <td style={{width: '35px'}}>  20 </td>\r\n              <td style={{width: '35px'}}>  26 </td>\r\n              <td style={{width: '35px'}}>  32 </td>\r\n              <td style={{width: '35px'}}>  38 </td>\r\n              <td style={{width: '35px'}}>  44 </td>\r\n              <td style={{width: '35px'}}>  50 </td>\r\n              <td style={{width: '35px'}}>  60 </td>\r\n              <td style={{width: '35px'}}>  70 </td>\r\n              <td style={{width: '35px'}}>  80 </td>\r\n              <td style={{width: '35px'}}>  90 </td>\r\n              <td style={{width: '35px'}}> 100 </td>\r\n            </tr>\r\n            <tr>\r\n              <th> Points d'acquis </th>\r\n              <th>  0 </th>\r\n              <th>  1 </th>\r\n              <th>  2 </th>\r\n              <th>  3 </th>\r\n              <th>  4 </th>\r\n              <th>  5 </th>\r\n              <th>  6 </th>\r\n              <th>  7 </th>\r\n              <th>  8 </th>\r\n              <th>  9 </th>\r\n              <th> 10 </th>\r\n              <th> 11 </th>\r\n              <th> 12 </th>\r\n              <th> 13 </th>\r\n              <th> 14 </th>\r\n              <th> 15 </th>\r\n              <th> 16 </th>\r\n              <th> 17 </th>\r\n              <th> 18 </th>\r\n              <th> 19 </th>\r\n              <th> 20 </th>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Au-delà de 20 points d'acquis le coût de chaque groupe de 5 points consécutif\r\n          continue de suivre une croissance triangulaire.\r\n        </p>\r\n\r\n        { /* <Math\r\n          value={\r\n            '$$\\\\forall n \\\\in \\\\mathbb{N}, \\\\text{Coût}(n) = \\\\frac{' +\r\n              '\\\\left \\\\lceil{\\\\frac{n}{5}}\\\\right \\\\rceil \\\\times \\\\left ( ' +\r\n                '\\\\left \\\\lceil{\\\\frac{n}{5}}\\\\right \\\\rceil + 1 ' +\r\n              '\\\\right )' +\r\n            '}{2}$$'\r\n          }\r\n        /> */ }\r\n\r\n        <p>\r\n          Le <strong>modificateur d'inné</strong> dépend des caractéristiques et\r\n          varie de -5 points à 5 points. Un modificateur d'inné est égal à la valeur de\r\n          la caractéristique qui lui est  associé divisé par 2, arrondie à l'entier\r\n          inférieur. Si le modificateur est associé à deux caractéristiques la\r\n          caractéristique dite majeure peut impacter le personnage jusqu'à 3 points\r\n          maximum et la caractéristique secondaire peut impacter le personnage jusqu'à\r\n          2 points maximum.\r\n        </p>\r\n\r\n        <table className=\"table-1d\">\r\n          <tbody>\r\n            <tr>\r\n              <td colSpan={2} style={{borderRightColor: 'transparent'}}></td>\r\n              <td colSpan={7} style={{borderLeftColor: 'transparent'}}></td>\r\n              <td colSpan={1} style={{borderLeftColor: 'transparent'}}>&larr;</td>\r\n              <td colSpan={4} style={{borderLeftColor: 'transparent'}}>Influence totale</td>\r\n              <td colSpan={1} style={{borderLeftColor: 'transparent'}}>&rarr;</td>\r\n              <td colSpan={2} style={{borderLeftColor: 'transparent'}}></td>\r\n              <td colSpan={2} style={{borderLeftColor: 'transparent'}}></td>\r\n              <td colSpan={3} style={{borderLeftColor: 'transparent'}}></td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan={5} style={{borderTopColor: 'transparent'}}></td>\r\n              <td colSpan={4}></td>\r\n              <td colSpan={1} style={{borderLeftColor: 'transparent'}}>&larr;</td>\r\n              <td colSpan={4} style={{borderLeftColor: 'transparent'}}>Influence majeure </td>\r\n              <td colSpan={1} style={{borderLeftColor: 'transparent'}}>&rarr;</td>\r\n              <td colSpan={2} style={{borderLeftColor: 'transparent'}}></td>\r\n              <td colSpan={2} style={{borderLeftColor: 'transparent'}}></td>\r\n              <td colSpan={3} style={{borderTopColor: 'transparent'}}></td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan={5} style={{borderTopColor: 'transparent'}}></td>\r\n              <td colSpan={2} style={{borderTopColor: 'transparent'}}></td>\r\n              <td colSpan={2}></td>\r\n              <td colSpan={1} style={{borderLeftColor: 'transparent'}}>&larr;</td>\r\n              <td colSpan={4} style={{borderLeftColor: 'transparent'}}>Influence mineure</td>\r\n              <td colSpan={1} style={{borderLeftColor: 'transparent'}}>&rarr;</td>\r\n              <td colSpan={2} style={{borderLeftColor: 'transparent'}}></td>\r\n              <td colSpan={2} style={{borderTopColor: 'transparent'}}></td>\r\n              <td colSpan={3} style={{borderTopColor: 'transparent'}}></td>\r\n            </tr>\r\n            <tr>\r\n              <td style={{width: '120px'}}> Caractéristique </td>\r\n              <td style={{width: '35px'}}> -10 </td>\r\n              <td style={{width: '35px'}}>  -9 </td>\r\n              <td style={{width: '35px'}}>  -8 </td>\r\n              <td style={{width: '35px'}}>  -7 </td>\r\n              <td style={{width: '35px'}}>  -6 </td>\r\n              <td style={{width: '35px'}}>  -5 </td>\r\n              <td style={{width: '35px'}}>  -4 </td>\r\n              <td style={{width: '35px'}}>  -3 </td>\r\n              <td style={{width: '35px'}}>  -2 </td>\r\n              <td style={{width: '35px'}}>  -1 </td>\r\n              <td style={{width: '35px'}}>   0 </td>\r\n              <td style={{width: '35px'}}>   1 </td>\r\n              <td style={{width: '35px'}}>   2 </td>\r\n              <td style={{width: '35px'}}>   3 </td>\r\n              <td style={{width: '35px'}}>   4 </td>\r\n              <td style={{width: '35px'}}>   5 </td>\r\n              <td style={{width: '35px'}}>   6 </td>\r\n              <td style={{width: '35px'}}>   7 </td>\r\n              <td style={{width: '35px'}}>   8 </td>\r\n              <td style={{width: '35px'}}>   9 </td>\r\n              <td style={{width: '35px'}}>  10 </td>\r\n            </tr>\r\n            <tr>\r\n              <th> Points d'inné </th>\r\n              <th> -5 </th>\r\n              <th> -5 </th>\r\n              <th> -4 </th>\r\n              <th> -4 </th>\r\n              <th> -3 </th>\r\n              <th> -3 </th>\r\n              <th> -2 </th>\r\n              <th> -2 </th>\r\n              <th> -1 </th>\r\n              <th> -1 </th>\r\n              <th> +0 </th>\r\n              <th> +0 </th>\r\n              <th> +1 </th>\r\n              <th> +1 </th>\r\n              <th> +2 </th>\r\n              <th> +2 </th>\r\n              <th> +3 </th>\r\n              <th> +3 </th>\r\n              <th> +4 </th>\r\n              <th> +4 </th>\r\n              <th> +5 </th>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Une maîtrise permet de résoudre des actions aux conséquences incertaines par\r\n          des <strong>résolutions par opposition</strong> ou des <strong>tests\r\n          d'auto-résolution</strong>. Certaines maîtrises ont des effets supplémentaires\r\n          en fonction de leur niveau, dans ce cas la nature des effets sont spécifiés\r\n          dans la description de chaque maîtrise.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\nimport { LocalSummary } from '../../components/LocalSummary'\r\n\r\nimport { Introduction } from './Introduction'\r\nimport { WeaponMasteries } from './weaponMasteries'\r\nimport { MartialStyleMasteries } from './martialStyleMasteries'\r\nimport { ArmorMasteries } from './armorMasteries'\r\nimport { SupportMasteries } from './supportMasteries'\r\n\r\nexport function Masteries () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectTitle>Maîtrises</SubjectTitle>\r\n      <SubjectSummary>\r\n        <p>\r\n          Les caractéristiques dépeignent les capacités innées d'un personnage\r\n          et influencent de nombreuses ressources connexes. Chaque\r\n          caractéristique est appréciée par un entier relatif.\r\n        </p>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <LocalSummary />\r\n\r\n        <Introduction />\r\n        <WeaponMasteries />\r\n        <MartialStyleMasteries />\r\n        <ArmorMasteries />\r\n        <SupportMasteries />\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nimport { HeavyArmorMastery } from './HeavyArmorMastery'\r\nimport { LightArmorMastery } from './LightArmorMastery'\r\nimport { MediumArmorMastery } from './MediumArmorMastery'\r\n\r\nexport function ArmorMasteries () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-armor</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Armure</SubjectKeyword>\r\n      <SubjectTitle>Maîtrises d'armure</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='row'>\r\n          <div className='col'>\r\n            <p>\r\n              Une maîtrise d'armure apprécie l'aisance d'un personnage vis-à-vis\r\n              d'une certaine classe d'armure ainsi que des manoeuvres qui lui sont\r\n              associé. Tous les 5 points investi dans la maîtrise d'une certaine\r\n              classe d'armure permet de profiter d'un bonus d'un point d'armure\r\n              supplémentaire quand une armure du type considéré est équipée par le\r\n              personnage.\r\n            </p>\r\n\r\n            <p>\r\n              En outre, une bonne spécialisation est essentielle pour débloquer des\r\n              effets uniques liés au style martial associé à la classe d'armure que\r\n              la maîtrise représente.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <MediumArmorMastery />\r\n          </div>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <LightArmorMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row justify-content-center'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <HeavyArmorMastery />\r\n          </div>\r\n        </div>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function HeavyArmorMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-armor-heavy-armor</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Armure</SubjectKeyword>\r\n      <SubjectKeyword>Armure lourde</SubjectKeyword>\r\n      <SubjectTitle>Armures lourdes</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Cette maîtrise apprécie l'aisance d'un personnage vis-à-vis d'une certaine\r\n          classe d'armure ainsi que des manoeuvres qui lui sont associé. Tous les 5\r\n          points investi dans la maîtrise d'une certaine classe d'armure permet de\r\n          profiter d'un bonus d'un point d'armure supplémentaire quand une armure du\r\n          type considéré est équipée par le personnage.\r\n        </p>\r\n\r\n        <p>\r\n          En outre, une bonne spécialisation est essentielle pour débloquer des\r\n          effets uniques liés au style martial associé à la classe d'armure que la\r\n          maîtrise représente.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function LightArmorMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-armor-light-armor</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Armure</SubjectKeyword>\r\n      <SubjectKeyword>Armure légère</SubjectKeyword>\r\n      <SubjectTitle>Armures légères</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Cette maîtrise apprécie l'aisance d'un personnage vis-à-vis d'une certaine\r\n          classe d'armure ainsi que des manoeuvres qui lui sont associé. Tous les 5\r\n          points investi dans la maîtrise d'une certaine classe d'armure permet de\r\n          profiter d'un bonus d'un point d'armure supplémentaire quand une armure du\r\n          type considéré est équipée par le personnage.\r\n        </p>\r\n\r\n        <p>\r\n          En outre, une bonne spécialisation est essentielle pour débloquer des\r\n          effets uniques liés au style martial associé à la classe d'armure que la\r\n          maîtrise représente.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function MediumArmorMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-armor-medium-armor</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Armure</SubjectKeyword>\r\n      <SubjectKeyword>Armure intermédiaire</SubjectKeyword>\r\n      <SubjectTitle>Armures intermédiaires</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg'/></td>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Cette maîtrise apprécie l'aisance d'un personnage vis-à-vis d'une certaine\r\n          classe d'armure ainsi que des manoeuvres qui lui sont associé. Tous les 5\r\n          points investi dans la maîtrise d'une certaine classe d'armure permet de\r\n          profiter d'un bonus d'un point d'armure supplémentaire quand une armure du\r\n          type considéré est équipée par le personnage.\r\n        </p>\r\n\r\n        <p>\r\n          En outre, une bonne spécialisation est essentielle pour débloquer des\r\n          effets uniques liés au style martial associé à la classe d'armure que la\r\n          maîtrise représente.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { ArmorMasteries } from './ArmorMasteries'\r\n","export { Masteries } from './Masteries'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nimport { OneHandedWeaponFightingMastery } from './OneHandedWeaponFightingMastery'\r\nimport { TwoHandedWeaponFightingMastery } from './TwoHandedWeaponFightingMastery'\r\nimport { TwoWeaponFightingMastery } from './TwoWeaponFightingMastery'\r\nimport { UnarmedFightingMastery } from './UnarmedFightingMastery'\r\nimport { WeaponAndShieldFightingMastery } from './WeaponAndShieldFightingMastery'\r\n\r\nexport function MartialStyleMasteries () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-martial-style</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Style martial</SubjectKeyword>\r\n      <SubjectTitle>Maîtrises de style martial</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='row'>\r\n          <div className='col'>\r\n            <p>\r\n              Les maîtrises de style martial apprécient la capacité d'un personnage à ce\r\n              battre en combinant des classes d'arme spécifiques. Ce sont des maîtrises qui\r\n              permettent d'améliorer les chances de touche d'une famille d'arme au complet,\r\n              cependant, a contrario des maîtrises d'arme l'augmentation des chances est\r\n              bien moins importante.\r\n            </p>\r\n\r\n            <p>\r\n              Une maîtrise de style martial peut toujours remplacer la maîtrise d'une\r\n              certaine arme en combat lors d'un test par opposition d'attaque, dans ce cas\r\n              le niveau de maîtrise de l'arme de l'attaquant est égal à sa maîtrise du style\r\n              martial considéré divisé par 2.\r\n            </p>\r\n\r\n            <p>\r\n              La seule exception concerne la maîtrise du combat à mains nues qui se comporte\r\n              comme une maîtrise d'arme standard.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <TwoHandedWeaponFightingMastery />\r\n          </div>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <OneHandedWeaponFightingMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <WeaponAndShieldFightingMastery />\r\n          </div>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <TwoWeaponFightingMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row justify-content-center'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <UnarmedFightingMastery />\r\n          </div>\r\n        </div>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function OneHandedWeaponFightingMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-martial-style-one-handed-weapon-fighting</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Style martial</SubjectKeyword>\r\n      <SubjectKeyword>Combat à l'arme à une main</SubjectKeyword>\r\n      <SubjectTitle>Combat à l'arme à une main</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function TwoHandedWeaponFightingMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-martial-style-two-handed-weapon-fighting</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Style martial</SubjectKeyword>\r\n      <SubjectKeyword>Combat à l'arme à deux mains</SubjectKeyword>\r\n      <SubjectTitle>Combat à l'arme à deux mains</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function TwoWeaponFightingMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-martial-style-two-weapon-fighting</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Style martial</SubjectKeyword>\r\n      <SubjectKeyword>Combat à deux armes</SubjectKeyword>\r\n      <SubjectTitle>Combat à deux armes</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function UnarmedFightingMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-martial-style-unarmed-combat</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Style martial</SubjectKeyword>\r\n      <SubjectKeyword>Combat à mains nues</SubjectKeyword>\r\n      <SubjectTitle>Combat à mains nues</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n              <td><img src='./images/characteristics/strength.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function WeaponAndShieldFightingMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-martial-style-weapon-and-shield-fighting</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Style martial</SubjectKeyword>\r\n      <SubjectKeyword>Combat à l'arme et au bouclier</SubjectKeyword>\r\n      <SubjectTitle>Combat à l'arme et au bouclier</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n              <td><img src='./images/characteristics/strength.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { MartialStyleMasteries } from './MartialStyleMasteries'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function AcrobaticsMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc-acrobatic</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectKeyword>Acrobatie</SubjectKeyword>\r\n      <SubjectTitle>Acrobatie</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg' /></td>\r\n              <td><img src='./images/characteristics/strength.svg' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La maîtrise de l'acrobatie apprécie la capacité à utiliser son corps de\r\n          manière ingénieuse pour s'extirper d'une situation délicate. Sauter en\r\n          travers d'un ravin, passer sous les jambes d'un adversaire ou courrir en\r\n          terrain difficile sont des exemples de situation où un test d'acrobatie\r\n          est nécéssaire.\r\n        </p>\r\n\r\n        <p>\r\n          La maîtrise de l'acrobatie est complémentaire à la maîtrise de l'esquive\r\n          et permet d'augmenter le nombre d'esquive disponible par round grâce aux\r\n          atouts qui lui sont associés.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function ClimbingMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc-climbing</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectKeyword>Escalade</SubjectKeyword>\r\n      <SubjectTitle>Escalade</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n              <td><img src='./images/characteristics/strength.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function DiscretionMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc-discretion</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectKeyword>Discrétion</SubjectKeyword>\r\n      <SubjectTitle>Discrétion</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg' width='100' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La maîtrise de la discrétion apprécie la capacité d'un personnage à ne\r\n          pas se faire voir ni entendre. Un jet de discrétion se fait toujours\r\n          en opposition avec la perception des éventuels adversaires. Un test de\r\n          discrétion n'est joué que dans le cas où l'individu cherchant à ce faire\r\n          discret est observable, aussi, si la vision de l'observateur est obstruée\r\n          ou que son audition est extrêmement mauvaise aucun jet de perception ne\r\n          peut être opposé à une tentative de discrétion.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function DodgeMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc-dodge</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectKeyword>Esquive</SubjectKeyword>\r\n      <SubjectTitle>Esquive</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg' width='100' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La maîtrise de l'esquive apprécie la capacité d'un personnage à se mouvoir\r\n          dans l'objectif d'échapper à une menace. L'esquive est une maîtrise\r\n          importante pour les combats car elle permet d'éviter un coup par tour tout\r\n          en se repositionnant. Elle est aussi la seule compétence permettant\r\n          d'échapper à certains pièges ou sortilèges.\r\n        </p>\r\n\r\n        <p>\r\n          L'esquive se joue toujours en opposition avec le degré de difficulté de la\r\n          menace. Esquiver une attaque influera les chances de succès de l'attaquant\r\n          vis-à-vis de sa propre maîtrise de son arme. Esquiver un sort ou un piège\r\n          influera ses chances de succès vis-à-vis de son propre degré de\r\n          difficulté. Le succès d'une esquive peut être mitigé dans certaines\r\n          situations.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n\r\n\r\n\r\n/**\r\n    <table class='table'>\r\n      <thead>\r\n        <tr>\r\n          <th colspan='2'>Atouts</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td><strong>Esquive totale</strong></td>\r\n          <td>Esquive: 4+</td>\r\n        </tr>\r\n        <tr>\r\n          <td colspan='2'>\r\n            Le personnage peut toujours choisir de jouer en dernier et de gagner une\r\n            esquive supplémentaire lors du round en cours en échange d'une action\r\n            de mouvement.\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td><strong>Esquive en chaîne I</strong></td>\r\n          <td>Esquive: 8+</td>\r\n        </tr>\r\n        <tr>\r\n          <td colspan='2'>\r\n            Le personnage gagne une esquive supplémentaire par round, chaque esquive\r\n            supplémentaire jouée durant un round se voit attribuée un malus de 10%\r\n            cumulatif.\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td><strong>Esquive en chaîne II</strong></td>\r\n          <td>Esquive: 12+</td>\r\n        </tr>\r\n        <tr>\r\n          <td colspan='2'>\r\n            Le personnage gagne une esquive supplémentaire par round, chaque esquive\r\n            supplémentaire jouée durant un round se voit attribuée un malus de 10%\r\n            cumulatif.\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td><strong>Esquive instinctive</strong></td>\r\n          <td>Esquive: 14+</td>\r\n        </tr>\r\n        <tr>\r\n          <td colspan='2'>\r\n            Le personnage peut tenter d'esquiver les flèches avec un malus de 25%\r\n            sur son jet d'esquive.\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td><strong>Danse des vents</strong></td>\r\n          <td>Esquive: 16+</td>\r\n        </tr>\r\n        <tr>\r\n          <td colspan='2'>\r\n            Le personnage gagne une esquive supplémentaire par round. Avec cet atout\r\n            le malus attribué à un enchaînement d'esquive durant un round est réduit\r\n            à 5% cumulatif.\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n*/\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function HorseRidingMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc-horse-riding</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectKeyword>Équitation</SubjectKeyword>\r\n      <SubjectTitle>Équitation</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg' width='100' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function LockPickingMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc-lock-picking</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectKeyword>Crochetage</SubjectKeyword>\r\n      <SubjectTitle>Crochetage</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg' /></td>\r\n              <td><img src='./images/characteristics/luck.svg' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La compétence crochetage évalue la capacité d'un personnage à\r\n          se jouer de toutes sortes de serrures et de mécanismes. Tenter\r\n          d'ouvrir une porte ou un coffre sans sa clef, de désactiver une\r\n          éventuelle alarme ou désamorcer un piège sont des exemples de\r\n          situations ou un test de crochetage est nécéssaire.\r\n        </p>\r\n\r\n        <p>\r\n          Une tentative de crochetage se joue toujours en opposition avec le\r\n          niveau de difficulté du mécanisme à forcer.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function PerceptionMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc-perception</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectKeyword>Perception</SubjectKeyword>\r\n      <SubjectTitle>Perception</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg' width='100' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La perception représente la capacité d'un personnage à utiliser ses\r\n          sens pour analyser son environnement. Tenter d'écouter des\r\n          conversations lointaines, de trouver un autre personnage cherchant\r\n          à se faire discret ou chercher des mécanismes cachés dans le sol et\r\n          les murs sont des actions nécéssitant un jet de perception.\r\n        </p>\r\n\r\n        <p>\r\n          Si la perception se fait à l'encontre d'un autre personnage elle se\r\n          joue contre la compétence qu'il utilise au moment où la perception\r\n          est joué. Un test de perception contre discrétion est un cas\r\n          d'école. Dans le cas où la perception se joue contre l'environnement\r\n          elle se fera contre son degré de difficulté.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function SearchMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc-search</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectKeyword>Fouille</SubjectKeyword>\r\n      <SubjectTitle>Fouille</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/luck.svg' width='100' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La compétence fouille évalue la capacité d'un personnage à trouver\r\n          ce qu'il cherche dans un environnement étranger. Un personnage avec\r\n          une bonne compétence fouille est donc capable d'estimer précisément\r\n          si un document est présent dans une pièce qu'il vient de forcer, de\r\n          délester un cadavre de ses biens de valeur en un temps record ou de\r\n          rechercher d'éventuels passages secrets et pièges.\r\n        </p>\r\n\r\n        <p>\r\n          La compétence fouille se joue toujours en opposition du degré de\r\n          difficulté de l'objet ou du sujet recherché. Si le sujet de la\r\n          fouille à été intentionellement dissimulé la fouille se joue contre\r\n          le degré de succès de la tentative de dissimulation. Quand aux\r\n          éléments en évidence ils doivnet toujours être portées à la\r\n          connaissance du joueur.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function SleightOfHandMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc-sleight-of-hand</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectKeyword>Vol à la tire</SubjectKeyword>\r\n      <SubjectTitle>Vol à la tire</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg' /></td>\r\n              <td><img src='./images/characteristics/luck.svg' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La compétence vol à la tire évalue la capacité d'un personnage\r\n          à subtiliser les biens d'un portées par un autre sans éveiller son\r\n          attention. Une tentative de vol à la tire s'effectue toujours en\r\n          opposition avec la compétence de perception de la victime. Tout\r\n          comme la compétence discrétion, un test de vol à la tire n'a lieu\r\n          que si la victime est capable de percevoir le voleur d'une\r\n          quelconque manière.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nimport { AcrobaticsMastery } from './AcrobaticsMastery'\r\nimport { ClimbingMastery } from './ClimbingMastery'\r\nimport { DiscretionMastery } from './DiscretionMastery'\r\nimport { DodgeMastery } from './DodgeMastery'\r\nimport { HorseRidingMastery } from './HorseRidingMastery'\r\nimport { LockPickingMastery } from './LockPickingMastery'\r\nimport { PerceptionMastery } from './PerceptionMastery'\r\nimport { SearchMastery } from './SearchMastery'\r\nimport { SleightOfHandMastery } from './SleightOfHandMastery'\r\nimport { SwimingMastery } from './SwimingMastery'\r\n\r\nexport function SupportMasteries () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectTitle>Maîtrises utilitaires</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <p>\r\n              Les maîtrises utilitaires sont divers champs disciplinaire permettant de\r\n              garantir le succès d'action spécifique en jeu comme l'escalade d'une muraille\r\n              ou une tentative de larcin. Ce sont principalement des maîtrises visant à être\r\n              l'objet de résolution par opposition ou pour certaines de test\r\n              d'auto-résolution.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-lg-6\">\r\n            <AcrobaticsMastery />\r\n          </div>\r\n          <div className=\"col-xs-12 col-lg-6\">\r\n            <LockPickingMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xs-12 col-lg-6\">\r\n            <DiscretionMastery />\r\n          </div>\r\n          <div className=\"col-xs-12 col-lg-6\">\r\n            <HorseRidingMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xs-12 col-lg-6\">\r\n            <ClimbingMastery />\r\n          </div>\r\n          <div className=\"col-xs-12 col-lg-6\">\r\n            <DodgeMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xs-12 col-lg-6\">\r\n            <SearchMastery />\r\n          </div>\r\n          <div className=\"col-xs-12 col-lg-6\">\r\n            <SwimingMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xs-12 col-lg-6\">\r\n            <PerceptionMastery />\r\n          </div>\r\n          <div className=\"col-xs-12 col-lg-6\">\r\n            <SleightOfHandMastery />\r\n          </div>\r\n        </div>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function SwimingMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc-swiming</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectKeyword>Natation</SubjectKeyword>\r\n      <SubjectTitle>Natation</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg' /></td>\r\n              <td><img src='./images/characteristics/constitution.svg' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { SupportMasteries } from './SupportMasteries'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function AxeMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-axe</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Hache</SubjectKeyword>\r\n      <SubjectTitle>Haches</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg' /></td>\r\n              <td><img src='./images/characteristics/dexterity.svg' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La hache est une arme à une main légère parfaite pour découper les armures\r\n          et les boucliers des adversaire tout en affligeant des blessures\r\n          dangereuse. C'est une arme associé à un style agressif visant d'abord à\r\n          réduire la présence des blindés sur le champ de bataille.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function BastardSwordMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-bastard-sword</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Épée</SubjectKeyword>\r\n      <SubjectKeyword>Épée bâtarde</SubjectKeyword>\r\n      <SubjectTitle>Épées bâtardes</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg' /></td>\r\n              <td><img src='./images/characteristics/dexterity.svg' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          L'épée bâtarde, ou épée à une main et demie est une arme hybride située\r\n          entre l'épée courte et l'épée longue pouvant donc être manié aussi bien à\r\n          une main qu'à deux. C'est une arme associé à un style hybride de petits\r\n          enchainement d'attaque suivi de coups plus lent mais plus puissant.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function DaggerMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-dagger</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Dague</SubjectKeyword>\r\n      <SubjectTitle>Dagues</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La dague est une arme au corps à corps très précise mais souffrant d'une\r\n          alonge faible et de dégâts réduit. Cette arme est associé à un style\r\n          agressif dont l'objectif principal est d'aller chercher les points faibles\r\n          de son adversaire pour infliger un maximum de dégât. La dague permet de\r\n          bonifier les coups critiques et de se spécialiser dans l'application\r\n          d'effets négatifs via des frappes chirugicales.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function HammerMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-hammer</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Marteau</SubjectKeyword>\r\n      <SubjectTitle>Marteau</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg' /></td>\r\n              <td><img src='./images/characteristics/dexterity.svg' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le marteau est une arme à une main légère parfaite pour infliger des\r\n          dégâts contondant ignorant l'armure, c'est cependant une arme très vite\r\n          limitée en présence d'un bouclier pour la parrer.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function HeavyCrossbowMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-heavy-crossbow</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Arbalète</SubjectKeyword>\r\n      <SubjectKeyword>Arbalète lourde</SubjectKeyword>\r\n      <SubjectTitle>Arbalètes lourdes</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n              <td><img src='./images/characteristics/strength.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          L'arbalète lourde est une arme à distance précise infligeant de lourds\r\n          dégâts avec une excelente pénétration des armures mais elle souffre\r\n          cependant d'une cadence de tir très faible. C'est une arme associée à un\r\n          style martial permettant d'éliminer des cibles importantes à très bonne\r\n          distance.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function LightCrossbowMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-light-crossbow</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Arbalète</SubjectKeyword>\r\n      <SubjectKeyword>Arbalète légère</SubjectKeyword>\r\n      <SubjectTitle>Arbalètes légères</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          L'arbalète légère est une arme à distance à la cadence de tir lente mais\r\n          infligeant de bon dégâts avec une capacité de pénétration des armures.\r\n          C'est une arme exotique associé à un style martial hybride de combat au\r\n          corps à corps et à distance bien que sa recharge puisse rapidement poser\r\n          un problème aux individus les moins préparés.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function LongBowMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-long-bow</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Arc long</SubjectKeyword>\r\n      <SubjectKeyword>Arc</SubjectKeyword>\r\n      <SubjectTitle>Arcs longs</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg'/></td>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          L'arc long est une arme à distance à moyenne et longue portée avec une\r\n          recharge rapide. C'est une arme parfaite pour les personnage d'arrière\r\n          ligne souhaitant appliquer une pression constante sur l'infanterie légère\r\n          et intermédiaire. Malheureusement les arcs rencontrent rapidement leurs\r\n          limite face aux armures les plus lourdes et leur épaisse couche d'acier.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function LongSwordMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-long-sword</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Épée longue</SubjectKeyword>\r\n      <SubjectKeyword>Épée</SubjectKeyword>\r\n      <SubjectTitle>Épées longues</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          L'épée longue, ou épée à deux main est une arme au corps à corps\r\n          dévastatrice permettant d'appliquer de gros dégâts de zone au détriment\r\n          du nombre de coup porté par round. C'est une arme associé à un style\r\n          martial de première ligne particulièrement dangereux pour l'infanterie\r\n          légère.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function RodMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-rod</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Bâton</SubjectKeyword>\r\n      <SubjectTitle>Bâtons</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le bâton est une arme exotique à deux main permettant un excelent contrôle\r\n          des foules grâce à son allonge.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function ShieldMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-shield</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Bouclier</SubjectKeyword>\r\n      <SubjectTitle>Boucliers</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le bouclier est un outil parfait arrêter les projectiles, parrer les coups\r\n          et réduire la pression exercée par les armes contondentes. C'est aussi en\r\n          soit une arme capable de faire de gros dégât quand elle est projetée sur\r\n          ses adversaire lors d'une charge. Le bouclier est l'outil parfait pour\r\n          dessiner et maintenir une ligne de front sur le long terme.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function ShortBowMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-short-bow</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Arc court</SubjectKeyword>\r\n      <SubjectKeyword>Arc</SubjectKeyword>\r\n      <SubjectTitle>Arcs courts</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function ShortSwordMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-short-sword</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Épée courte</SubjectKeyword>\r\n      <SubjectKeyword>Épée</SubjectKeyword>\r\n      <SubjectTitle>Épées courtes</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n              <td><img src='./images/characteristics/strength.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          L'épée courte est une arme légère de corp à corp manipulable à une\r\n          main. C'est une arme permettant à la fois d'enchaîner rapidement les\r\n          coups ou les parades. Contrairement à sa version lourde, l'épée courte\r\n          est l'outil parfait pour les amateurs d'un style martial mobile\r\n          permettant d'éxécuter rapidement les cibles les plus vulnérables.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function SpearMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-spear</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Lance</SubjectKeyword>\r\n      <SubjectTitle>Lances</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La lance est une arme à une main mortelle avec une excelente allonge\r\n          permettant un très bon contrôle du champ de bataille. Cette arme est\r\n          associé à un style martial plutôt statique permettant d'imposer une\r\n          présence constante sur un champ de bataille en réduisant grandement la\r\n          mobilité des autres personnages.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function WarAxeMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-war-axe</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Hache de guerre</SubjectKeyword>\r\n      <SubjectKeyword>Hache</SubjectKeyword>\r\n      <SubjectTitle>Haches de guerre</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La hache de guerre est une arme lourde à deux main dévastatrice pour\r\n          l'équipement adverse. C'est une arme associé à un style extrêmement\r\n          agressif visant d'abord à réduire la présence des blindés sur le champ\r\n          de bataille.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function WarHammerMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-war-hammer</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Marteau de guerre</SubjectKeyword>\r\n      <SubjectKeyword>Marteau</SubjectKeyword>\r\n      <SubjectTitle>Marteaux de guerre</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le marteau de guerre est une arme lourde de corps à corps manipulable \r\n          à deux main. C'est une arme extrêmement lente mais parfaite pour\r\n          nullifier les parades par l'utilisation d'un effet de levier\r\n          dévastateur. Le marteau de guerre n'offre pas d'option défensive et\r\n          est associé a un style de combat blindé de première ligne visant à\r\n          fracasser l'infanterie en appliquant de gros dégâts bruts.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nimport { AxeMastery } from './AxeMastery'\r\nimport { BastardSwordMastery } from './BastardSwordMastery'\r\nimport { DaggerMastery } from './DaggerMastery'\r\nimport { HammerMastery } from './HammerMastery'\r\nimport { HeavyCrossbowMastery } from './HeavyCrossbowMastery'\r\nimport { LightCrossbowMastery } from './LightCrossbowMastery'\r\nimport { LongBowMastery } from './LongBowMastery'\r\nimport { LongSwordMastery } from './LongSwordMastery'\r\nimport { RodMastery } from './RodMastery'\r\nimport { ShieldMastery } from './ShieldMastery'\r\nimport { ShortBowMastery } from './ShortBowMastery'\r\nimport { ShortSwordMastery } from './ShortSwordMastery'\r\nimport { SpearMastery } from './SpearMastery'\r\nimport { WarAxeMastery } from './WarAxeMastery'\r\nimport { WarHammerMastery } from './WarHammerMastery'\r\n\r\nexport function WeaponMasteries () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Arme</SubjectKeyword>\r\n      <SubjectTitle>Maîtrises d'arme</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='row'>\r\n          <div className='col'>\r\n            <p>\r\n              Les maîtrises d'arme apprécient l'aisance avec laquelle un\r\n              personnage manie une arme particulière ainsi que l'étendue de sa\r\n              connaissance de l'art martial qui lui est associé. Ce type de\r\n              maîtrise est utilisé par l'attaquant dans ses tests d'opposition\r\n              pour toucher et par le défenseur dans ses tests d'opposition pour\r\n              parer. Toutes les armes sont associées à un ou plusieurs styles de\r\n              combat, et une bonne spécialisation est essentielle pour débloquer\r\n              des effets uniques liés à l'arme que la maîtrise représente.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <LightCrossbowMastery />\r\n          </div>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <HeavyCrossbowMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <ShortBowMastery />\r\n          </div>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <LongBowMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <RodMastery />\r\n          </div>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <ShieldMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <DaggerMastery />\r\n          </div>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <BastardSwordMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <ShortSwordMastery />\r\n          </div>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <LongSwordMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <AxeMastery />\r\n          </div>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <WarAxeMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <SpearMastery />\r\n          </div>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <HammerMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row justify-content-center'>\r\n          <div className='col-xs-12 col-lg-6'>\r\n            <WarHammerMastery />\r\n          </div>\r\n        </div>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { AxeMastery } from './AxeMastery'\r\nexport { BastardSwordMastery } from './BastardSwordMastery'\r\nexport { DaggerMastery } from './DaggerMastery'\r\nexport { HammerMastery } from './HammerMastery'\r\nexport { HeavyCrossbowMastery } from './HeavyCrossbowMastery'\r\nexport { LightCrossbowMastery } from './LightCrossbowMastery'\r\nexport { LongBowMastery } from './LongBowMastery'\r\nexport { LongSwordMastery } from './LongSwordMastery'\r\nexport { RodMastery } from './RodMastery'\r\nexport { ShieldMastery } from './ShieldMastery'\r\nexport { ShortBowMastery } from './ShortBowMastery'\r\nexport { ShortSwordMastery } from './ShortSwordMastery'\r\nexport { SpearMastery } from './SpearMastery'\r\nexport { WarAxeMastery } from './WarAxeMastery'\r\nexport { WarHammerMastery } from './WarHammerMastery'\r\nexport { WeaponMasteries } from './WeaponMasteries'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\nimport { Table2D } from '../../../components/table/Table2D'\r\n\r\nfunction range (value : number) : number[] {\r\n  const result : number[] = []\r\n\r\n  for (let index = 0; index <= value; ++index) {\r\n    result.push(index)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport function AdversialTestRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-core-adversial-test</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle principale</SubjectKeyword>\r\n      <SubjectKeyword>Résolution</SubjectKeyword>\r\n      <SubjectKeyword>Résolution par opposition</SubjectKeyword>\r\n      <SubjectTitle>Résolution par opposition</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          La résolution par opposition décide de l'issue d'une confrontation entre\r\n          deux éléments du récit. C'est le test type pour résoudre le succès des\r\n          attaques d'un épéiste ou la résistance d'une serrure à une tentative de\r\n          crochetage.\r\n        </p>\r\n\r\n        <p>\r\n          Le joueur qui lance les dés est dit acteur de la résolution et c'est de\r\n          son point de vue que les chances de succès sont calculées. Le joueur qui\r\n          subit le test est dit opposant à la résolution. Un joueur est toujours\r\n          acteur de la résolution lorsqu'il se confronte à un élément du récit. Dans\r\n          le cas où deux joueurs se confrontent, l'acteur est décidé d'un commun\r\n          accord ou à pile ou face. Finalement, si deux éléments du récit\r\n          interagissent entre-eux, c'est au maître du jeu de répartir les rôles.\r\n        </p>\r\n\r\n        <p>\r\n          Une résolution par opposition compare une compétence de l'acteur appelée\r\n          compétence offensive à une compétence de l'opposant dite compétence\r\n          défensive. Pour que l'issue du test soit favorable pour l'acteur celui-ci\r\n          doit obtenir un score inférieur ou égal à son seuil de succès sur un dé\r\n          100. Le seuil de succès est la différence entre la compétence offensive et\r\n          la compétence défensive multipliée par 5 et ajoutée à une constante de 50.\r\n          Par exemple un personnage avec une compétence de 10 en discrétion tentant\r\n          de se faire discret en escaladant une muraille surveillée par un garde\r\n          ayant une compétence de 12 en perception aura un seuil de succès de 40%.\r\n          Et ce sera toujours au joueur de résoudre le test.\r\n        </p>\r\n\r\n        <table className='table-1d'>\r\n          <tbody>\r\n            <tr>\r\n              <td style={{width: '35px'}}>  5<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}>  5<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 10<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 15<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 20<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 25<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 30<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 35<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 40<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 45<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 50<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 55<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 60<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 65<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 70<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 75<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 80<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 85<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 90<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 95<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 95<span className='percent'>%</span> </td>\r\n            </tr>\r\n            <tr>\r\n              <th> -∞ </th>\r\n              <th> -9 </th>\r\n              <th> -8 </th>\r\n              <th> -7 </th>\r\n              <th> -6 </th>\r\n              <th> -5 </th>\r\n              <th> -4 </th>\r\n              <th> -3 </th>\r\n              <th> -2 </th>\r\n              <th> -1 </th>\r\n              <th>  0 </th>\r\n              <th> +1 </th>\r\n              <th> +2 </th>\r\n              <th> +3 </th>\r\n              <th> +4 </th>\r\n              <th> +5 </th>\r\n              <th> +6 </th>\r\n              <th> +7 </th>\r\n              <th> +8 </th>\r\n              <th> +9 </th>\r\n              <th> +∞ </th>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <Table2D className='text-center'>\r\n          {\r\n            range(20).map(function renderRow (index : number) : ReactNode {\r\n              return (\r\n                <Table2D.Row key={index}>\r\n                  <Table2D.Cell heading>{index}</Table2D.Cell>\r\n                  {\r\n                    range(20).map((other : number) : ReactNode => (\r\n                      <Table2D.Cell key={other}>\r\n                        {Math.min(Math.max(index - other, -9), +9) * 5 + 50}\r\n                        <span className='percent'>%</span>\r\n                      </Table2D.Cell>\r\n                    ))\r\n                  }\r\n                </Table2D.Row>\r\n              )\r\n            }).reverse()\r\n          }\r\n          <Table2D.Row>\r\n            <Table2D.Cell heading width='35px' />\r\n            {\r\n              range(20).map((index : number) : ReactNode => (\r\n                <Table2D.Cell key={index} heading width='35px'>\r\n                  {index}\r\n                </Table2D.Cell>\r\n              ))\r\n            }\r\n          </Table2D.Row>\r\n        </Table2D>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","\r\nimport React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function CooperationRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-core-cooperation</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle principale</SubjectKeyword>\r\n      <SubjectKeyword>Coopération</SubjectKeyword>\r\n      <SubjectTitle>Coopération</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Lors d'une auto-résolution ou d'un test d'opposition l'autorisant une\r\n          entitée peut se faire aider par une ou plusieurs entitée tierce. Cette\r\n          situation est alors appellée une résolution en coopération. En cas\r\n          de coopération il y a toujours une entitée maître choisie au préalable\r\n          qui sera chargée de résoudre le test et d'organiser les opérations,\r\n          toute entitée voulant coopérer à la réussite de l'entitée maître peut\r\n          alors lui faire profiter d'un bonus dégressif en fonction de son\r\n          expertise propre.\r\n        </p>\r\n\r\n        <p>\r\n          L'organisation de la coopération ce fait par étape, à chaque étape,\r\n          une nouvelle entitée peut proposer son aide au groupe déjà préparé.\r\n          Pour ce faire l'entitée souhaitant coopérer doit avoir une expertise\r\n          au moins équivalente à la moitiée de l'expertise du groupe. Si une\r\n          entitée peut rejoindre le groupe, l'expertise de celui-ci devient\r\n          équivalente à l'expertise de l'entitée maître, plus le quart de\r\n          l'expertise de la première entitée ayant rejoint le groupe, plus le\r\n          sixième de l'expertise de la seconde entitée ayant rejointe le groupe,\r\n          plus le huitième de la troisième entitée ayant rejointe le groupe, et\r\n          ainsi de suite.\r\n        </p>\r\n\r\n        <p>\r\n          Dans certaines situations la coopération peut avoir des effets\r\n          supplémantaires comme une réduction du temps nécéssaire à la\r\n          production d'une arme par exemple. Dans ce cas précis, l'action doit\r\n          préciser les bonus résultant d'une coopération dans sa description.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\nimport { LocalSummary } from '../../../components/LocalSummary'\r\n\r\nimport { AdversialTestRule } from './AdversialTestRule'\r\nimport { CooperationRule } from './CooperationRule'\r\nimport { CriticalHitRule } from './CriticalHitRule'\r\nimport { RerollRule } from './RerollRule'\r\nimport { SelfResolutionRule } from './SelfResolutionRule'\r\nimport { SituationalDiceRule } from './SituationalDiceRule'\r\n\r\nexport function CoreRules () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-core</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle principale</SubjectKeyword>\r\n      <SubjectTitle>Règles principales</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <LocalSummary />\r\n\r\n        <AdversialTestRule />\r\n        <SelfResolutionRule />\r\n        <CooperationRule />\r\n        <CriticalHitRule />\r\n        <RerollRule />\r\n        <SituationalDiceRule />\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","\r\nimport React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function CriticalHitRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-core-critical-hit</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle principale</SubjectKeyword>\r\n      <SubjectKeyword>Critique</SubjectKeyword>\r\n      <SubjectTitle>Critiques</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Lors d'un test, un score supérieur à 95% est un échec critique aux\r\n          répercussions désastreuses. À l'inverse, un score inférieur ou égal à\r\n          5% est un succès critique aux conséquences bénéfiques. Les critiques\r\n          priment sur les chances de succès réelles d'un personnage. Ainsi, un\r\n          personnage qui devrait réussir systématiquement une action à toujours\r\n          5% de chance de l'échouer, et un personnage qui devrait échouer\r\n          systématiquement une action à toujours 5% de chance de la réussir.\r\n        </p>\r\n\r\n        <p>\r\n          Les conséquences d'un critique sont déterminées par le maître du\r\n          jeu et peuvent avoir lieu immédiatement comme dans un avenir proche.\r\n          Certaines règles supplémentaires peuvent s'appliquer. Les conséquences\r\n          d'un critique lors d'un test d'auto-résolution sont laissés à la\r\n          discrétion du maître du jeu.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","\r\nimport React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function RerollRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-core-reroll</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle principale</SubjectKeyword>\r\n      <SubjectKeyword>Pousser le test</SubjectKeyword>\r\n      <SubjectTitle>Pousser le test</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Lors d'un échec qui n'est pas un échec critique et moyennant une\r\n          justification acceptée par le maître du jeu, un personnage peut tenter de\r\n          repasser un test qu'il vient juste d'échouer. Si celui-ci réussi la\r\n          seconde tentative alors le test est passé, s'il échoue une seconde fois\r\n          alors le joueur est sujet à un échec critique.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\nimport { Table2D } from '../../../components/table/Table2D'\r\n\r\nfunction range (value : number) : number[] {\r\n  const result : number[] = []\r\n\r\n  for (let index = 0; index <= value; ++index) {\r\n    result.push(index)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport function SelfResolutionRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-core-self-resolution</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle principale</SubjectKeyword>\r\n      <SubjectKeyword>Résolution</SubjectKeyword>\r\n      <SubjectKeyword>Auto-résolution</SubjectKeyword>\r\n      <SubjectTitle>Auto-résolution</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          L'auto-résolution permet de mesurer la qualité de la réussite d'une action\r\n          en fonction des capacités seules d'un personnage. C'est le test pour\r\n          mesurer la dangerosité d'un piège installé, la fiabilité d'une serrure ou\r\n          la qualité d'une production d'alchimie. L'auto-résolution produit donc un\r\n          degré de difficulté ou une qualité dépendamment que la production soit\r\n          une épreuve ou un objet.\r\n        </p>\r\n\r\n        <table className='table-1d'>\r\n          <tbody>\r\n            <tr>\r\n              <td style={{width: '35px'}}> +3</td>\r\n              <td style={{width: '35px'}}> +2</td>\r\n              <td style={{width: '35px'}}> +2</td>\r\n              <td style={{width: '35px'}}> +1</td>\r\n              <td style={{width: '35px'}}> +1</td>\r\n              <td style={{width: '35px'}}> +1</td>\r\n              <td style={{width: '35px'}}> +0</td>\r\n              <td style={{width: '35px'}}> +0</td>\r\n              <td style={{width: '35px'}}> +0</td>\r\n              <td style={{width: '35px'}}> +0</td>\r\n              <td style={{width: '35px'}}> +0</td>\r\n              <td style={{width: '35px'}}> +0</td>\r\n              <td style={{width: '35px'}}> -1</td>\r\n              <td style={{width: '35px'}}> -1 </td>\r\n              <td style={{width: '35px'}}> -2 </td>\r\n              <td style={{width: '35px'}}> -2 </td>\r\n              <td style={{width: '35px'}}> &lfloor;&divide;3&rfloor; </td>\r\n              <td style={{width: '35px'}}> &lfloor;&divide;3&rfloor; </td>\r\n              <td style={{width: '35px'}}> &lfloor;&divide;4&rfloor; </td>\r\n              <td style={{width: '35px'}}> &lfloor;&divide;5&rfloor; </td>\r\n            </tr>\r\n            <tr>\r\n              {\r\n                range(19).map(function renderRow (index : number) : ReactNode {\r\n                  return (\r\n                    <th key={index} style={{width: '35px'}}>\r\n                      {(index + 1) * 5}<span className='percent'>%</span>\r\n                    </th>\r\n                  )\r\n                })\r\n              }\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <Table2D className='text-center'>\r\n            {\r\n              range(18).map(function renderRow (index : number) : ReactNode {\r\n                return (\r\n                  <Table2D.Row key={index}>\r\n                    <Table2D.Cell heading>{index}</Table2D.Cell>\r\n                    <Table2D.Cell>{index + 3}</Table2D.Cell>\r\n                    <Table2D.Cell>{index + 2}</Table2D.Cell>\r\n                    <Table2D.Cell>{index + 2}</Table2D.Cell>\r\n                    <Table2D.Cell>{index + 1}</Table2D.Cell>\r\n                    <Table2D.Cell>{index + 1}</Table2D.Cell>\r\n                    <Table2D.Cell>{index + 1}</Table2D.Cell>\r\n                    <Table2D.Cell>{index}</Table2D.Cell>\r\n                    <Table2D.Cell>{index}</Table2D.Cell>\r\n                    <Table2D.Cell>{index}</Table2D.Cell>\r\n                    <Table2D.Cell>{index}</Table2D.Cell>\r\n                    <Table2D.Cell>{index}</Table2D.Cell>\r\n                    <Table2D.Cell>{index}</Table2D.Cell>\r\n                    <Table2D.Cell>{Math.max(index - 1, 0)}</Table2D.Cell>\r\n                    <Table2D.Cell>{Math.max(index - 1, 0)}</Table2D.Cell>\r\n                    <Table2D.Cell>{Math.max(index - 2, 0)}</Table2D.Cell>\r\n                    <Table2D.Cell>{Math.max(index - 2, 0)}</Table2D.Cell>\r\n                    <Table2D.Cell>{Math.floor(index / 3)}</Table2D.Cell>\r\n                    <Table2D.Cell>{Math.floor(index / 3)}</Table2D.Cell>\r\n                    <Table2D.Cell>{Math.floor(index / 4)}</Table2D.Cell>\r\n                    <Table2D.Cell>{Math.floor(index / 5)}</Table2D.Cell>\r\n                  </Table2D.Row>\r\n                )\r\n              }).reverse()\r\n            }\r\n            <Table2D.Row>\r\n              <th style={{width: '35px'}}></th>\r\n              {\r\n                range(19).map(function renderRow (index : number) : ReactNode {\r\n                  return (\r\n                    <Table2D.Cell heading key={index} width='35px'>\r\n                      {(index + 1) * 5}<span className='percent'>%</span>\r\n                    </Table2D.Cell>\r\n                  )\r\n                })\r\n              }\r\n            </Table2D.Row>\r\n        </Table2D>\r\n\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","\r\nimport React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function SituationalDiceRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-core-situationnal-dice</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle principale</SubjectKeyword>\r\n      <SubjectKeyword>Résolution</SubjectKeyword>\r\n      <SubjectKeyword>Bonus et malus situationnel</SubjectKeyword>\r\n      <SubjectTitle>Bonus et malus situationnel</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Quand une action intentée est bien argumentée, l'acteur peut se voir\r\n          attribuer un ou plusieurs dés de bonus situationnel. L'acteur lance alors\r\n          des dés de dizaines supplémentaires et garde la dizaine la plus basse\r\n          quand il calcule son score. De la même manière quand une action intentée\r\n          est douteuse ou mal argumentée, l'acteur peut se voir attribuer un ou\r\n          plusieurs dés de malus situationnel. L'acteur lance alors des dés de\r\n          dizaines supplémentaires et garde la dizaine la plus haute quand il\r\n          calcule son score.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { CoreRules } from './CoreRules'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function ArmorRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight-armor</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectKeyword>Armure</SubjectKeyword>\r\n      <SubjectTitle>Armure</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Toute entitée possède un score d'armure physique et un score d'armure\r\n          magique. L'armure physique diminue le nombre de dégâts physiques reçus\r\n          mais s'avère inefficace contre les dégâts magiques. L'armure magique\r\n          diminue le nombre de dégâts magiques reçus mais s'avère inefficace\r\n          contre les dégâts physique. Un score d'armure peut, comme les points\r\n          de vie d'une entitée, faire l'objet de dégâts. Quand un score d'armure\r\n          est supérieur aux dégâts pris, l'entité ne prends aucun dégâts.\r\n        </p>\r\n\r\n        <p>\r\n          Une entitée peut s'équiper de trois types d'armure en même temps, une\r\n          armure légère, une armure intermédiaire et une armure lourde. Si elle\r\n          équipe plusieurs couche d'armure elle somme alors l'ensemble des\r\n          effets de celles-ci, y compris les effets négatifs. Certaines armures\r\n          peuvent interdire l'utilisation d'autres pièces d'armure, comme\r\n          l'utilisation d'une plaque seule, interdisant l'armure de plaque\r\n          complète.\r\n        </p>\r\n\r\n        <p>\r\n          Si une pièce d'armure accumule plus de dégâts d'armure qu'elle n'offre\r\n          de points elle est alors détruite. C'est toujours la couche d'armure\r\n          la plus à l'extérieure qui prends les dégâts en premier. Pour qu'une\r\n          pièce d'armure récupère les points d'armure perdus en combat elle doit\r\n          être réparée.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function AttackRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight-attack</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectKeyword>Attaque</SubjectKeyword>\r\n      <SubjectTitle>Attaque</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Une attaque est une action simple qui nécéssite d'être à porté de sa\r\n          cible. Les attaques ne peuvent pas faire l'objet d'une quelconque\r\n          coopération mais leur succès peuvent être influencé par l'environnement.\r\n          Une attaque se déroule toujours en deux temps : la touche et la\r\n          résolution des dégâts.\r\n        </p>\r\n\r\n        <p>\r\n          Lors de la phase de touche, le défenseur peut s'il en a la capacité\r\n          choisir d'esquiver, de parer ou de ne rien faire. La touche est un test\r\n          d'opposition standard entre la maîtrise de l'arme de l'attaquant et la\r\n          maîtrise choisie par le défenseur. Si le défenseur ne fait rien ou ne peut\r\n          ni esquiver le coup ni le parer, l'attaquant touche automatiquement.\r\n        </p>\r\n\r\n        <p>\r\n          Une entitée à le droit à une esquive par tour. Lors d'une esquive, le\r\n          défenseur oppose sa maîtrise de l'esquive à la maîtrise de l'arme de\r\n          l'attaquant et choisi une direction dans laquelle esquiver. Si l'esquive\r\n          est réussie, le défenseur peut alors réaliser un pas de placement dans la\r\n          direction qu'il a choisie et l'attaquant échoue son action. Le nombre\r\n          d'esquive par tour peut varier en fonction des atouts et autres effets. Le\r\n          défenseur doit toujours equiver dans une direction qui est libre d'accès.\r\n        </p>\r\n\r\n        <p>\r\n          Une entitée à le droit à une parade par tour. Lors d'une parade, le\r\n          défenseur oppose la maîtrise de sa propre arme, ou de son bouclier à la\r\n          maîtrise de l'attaquant. Si la parade réussie, l'attaquant échoue son\r\n          action. Le nombre de parade par tour peut varier en fonction des atouts et\r\n          des effets.\r\n        </p>\r\n\r\n        <p>\r\n          Certaines situations sont à l'avantage de l'attaquant. Si le défenseur\r\n          esquive pour sortir de la zone de contrôle de son adversaire il se voit\r\n          alors attribuer un malus de 2 points sur sa maîtrise de l'esquive. Pour\r\n          chaque entitée hostile autour de lui dont le défenseur est l'objet de\r\n          l'attention, le défenseur se voit en plus attribuer un malus de 2 points\r\n          supplémentaire sur la maîtrise qu'il utilise pour se défendre.\r\n        </p>\r\n\r\n        <p>\r\n          Certaines situations sont à l'avantage du défenseur. Pour chaque entitée\r\n          hostile autour de lui dont l'attaquant est l'objet de l'attention, le\r\n          défenseur se voit en plus attribuer un bonus de 2 points supplémtaire sur\r\n          la maîtrise qu'il utilise pour se défendre. Si l'attaquant doit réaliser\r\n          un pas de placement pour attaquer le défenseur, celui-ci gagne 2 points\r\n          supplémentaire sur la maîtrise qu'il utilise pour se défendre.\r\n        </p>\r\n\r\n        <p>\r\n          Certaines règles supplémentaire peuvent encore modifier le niveau de\r\n          maîtrise de l'attaquant ou du défenseur en fonction du type d'action\r\n          entrepris ou des effets actifs.\r\n        </p>\r\n\r\n        <p>\r\n          Si l'attaquant réussi sa touche, il peut alors calculer les dégâts qu'il\r\n          va infliger au défenseur.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function ComaRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight-coma</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectKeyword>Coma</SubjectKeyword>\r\n      <SubjectTitle>Coma</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Quand un personnage accumule autant de dégâts qu'il possède de points de\r\n          vie il tombe alors immédiatement dans le coma. Un personnage qui tombe\r\n          dans le coma des suites d'une attaque est automatiquement affligé d'une\r\n          blessure grave liée à l'arme responsable du coup final.\r\n        </p>\r\n\r\n        <p>\r\n          Le coma est un statut intermédiaire entre la vie et la mort qui peut aussi\r\n          être la conséquence d'un sort ou de certains poisons. Le coma est un état\r\n          critique impliquant une perte de conaissance associée à une aggravation de\r\n          certains statuts. Un personnage dans le coma tombe à terre, ne peut plus\r\n          effectuer d'actions et est considéré sans défense et peut donc faire\r\n          l'objet d'une tentative d'exécution.\r\n        </p>\r\n\r\n        <p>\r\n          Tout coma est associé à un degré de difficulté calculé en fonction de\r\n          l'état général du personnage commateux. Le degré de difficulté d'un coma\r\n          est calculé de la manière suivante :\r\n        </p>\r\n\r\n        <ul>\r\n          <li>\r\n            Les paires de points de dégât ajoutent chacune 1 point de difficulté.\r\n          </li>\r\n          <li>\r\n            Les blessures légères ajoutent chacune 2 points de difficulté.\r\n          </li>\r\n          <li>\r\n            Les blessures graves ajoutent chacune 5 points de difficulté.\r\n          </li>\r\n          <li>\r\n            Certaines causes de coma ainsi que certains status peuvent aussi ajouter\r\n            des points de difficulté, dans ce cas le nombre de point à ajouter doit\r\n            apparaitre dans la description du sort, du poison ou de l'état.\r\n          </li>\r\n        </ul>\r\n\r\n        <p>\r\n          Un personnage peut sortir de l'état de coma après un certain temps de\r\n          repos équivalent au degré de difficulté du coma retranché\r\n          du bonus de constitution du personnage le tout multiplié par 4. Certains\r\n          status comme l'empoisonement ou le saignement interdisent à un personnage\r\n          commateux de se rétablir seul et requiert qu'une tierce personne le\r\n          stabilise au préalable.\r\n        </p>\r\n\r\n        <p>\r\n          Stabiliser un personnage commateux est une action complexe nécéssitant un\r\n          calme relatif, des connaissances précises en premiers soins et un bon\r\n          quart d'heure de travail. Un personnage effectuant une tentative de\r\n          stabilisation doit réussir un test d'opposition entre ses connaissances en\r\n          premiers soins et le degré de difficulté du coma. En cas de succès le\r\n          processus naturel de guérison du coma reprend et la durée nécéssaire pour\r\n          perdre naturellement le status est divisé par deux.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function DamageRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight-coma</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectKeyword>Dégât</SubjectKeyword>\r\n      <SubjectTitle>Dégâts</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Il existe plusieurs types de dégâts : les dégâts physiques, les dégâts\r\n          magiques, les dégâts bruts, les dégâts de rupture et les dégâts mystiques.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les dégâts physiques</em> affectent les points de vie de la cible, ils\r\n          ignorent l'armure magique mais sont retranchés de l'armure physique de la\r\n          cible.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les dégâts magiques</em> affectent les points de vie de la cible, ils\r\n          ignorent l'armure physique mais sont retranchés de l'armure magique de la\r\n          cible.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les dégâts bruts</em> affectent les points de vie de la cible et\r\n          ignorent tout type d'armure.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les dégâts de rupture</em> affectent l'armure physique de la cible.\r\n          Si la cible ne possède plus d'armure les dégâts sont convertis en dégâts\r\n          physiques.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les dégâts mystiques</em> affectent l'armure magique de la cible.\r\n          Si la cible ne possède plus d'armure les dégâts sont convertis en dégâts\r\n          magiques.\r\n        </p>\r\n\r\n        <p>\r\n          Ces grands types de dégâts peuvent être raffinés en y ajoutant des trais\r\n          complémentaires comme pour les dégâts élémentaires de feu, de glace,\r\n          de terre ou d'électricité. Ces traits sont cependant complémentaires, et\r\n          les dégâts se comporteront comme ce comportent tous les dégâts de leur\r\n          catégorie.\r\n        </p>\r\n\r\n        <p>\r\n          Toute attaque peut porter une certaine quantité de dégâts exprimé en dés.\r\n          Pour résoudre le nombre de dégâts affligés par une attaque il faut alors\r\n          lancer autant de dés six que de points de dégâts infligeable. Tous les dés\r\n          pairs sont alors considéré comme un point de dégât infligé. Le défenseur\r\n          peut alors déduire ceux-ci de ses points de vie ou de son armure en\r\n          fonction du type de dégât. Les dégâts visant l'armure sont toujours\r\n          appliqués après les dégâts visant les points de vie.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function DeathRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight-death</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectKeyword>Mort</SubjectKeyword>\r\n      <SubjectTitle>Mort</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Quand un personnage accumule plus de 150% du nombre de ses points de vie\r\n          en dégâts est alors considéré comme mort. Le décès est immédiat et le\r\n          personnage n'est alors plus jouable.\r\n        </p>\r\n\r\n        <p className='text-center'>\r\n          La mort est définitive, mais rassurez-vous, le deuil ne l'est pas.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\nimport { LocalSummary } from '../../../components/LocalSummary'\r\n\r\nimport { ArmorRule } from './ArmorRule'\r\nimport { AttackRule } from './AttackRule'\r\nimport { ComaRule } from './ComaRule'\r\nimport { DamageRule } from './DamageRule'\r\nimport { DeathRule } from './DeathRule'\r\nimport { HealthPointRule } from './HealthPointRule'\r\nimport { InitiativeRule } from './InitiativeRule'\r\nimport { Introduction } from './Introduction'\r\nimport { WeigthPointRule } from './WeigthPointRule'\r\nimport { WoundsRule } from './WoundsRule'\r\n\r\nexport function FightRules () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectTitle>Règles de combat</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <LocalSummary />\r\n\r\n        <Introduction />\r\n        <InitiativeRule />\r\n        <HealthPointRule />\r\n        <ComaRule />\r\n        <WoundsRule />\r\n        <WeigthPointRule />\r\n        <AttackRule />\r\n        <DamageRule />\r\n        <ArmorRule />\r\n        <DeathRule />\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function HealthPointRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight-health-point</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectKeyword>Point de vie</SubjectKeyword>\r\n      <SubjectTitle>Points de vie</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Les points de vie bruts d'un personnage sont égaux à 10 plus son nombre de\r\n          points de constitution. Si un personnage accumule autant de dégât qu'il a\r\n          de points de vie il tombe dans le coma et ne peut plus agir. Si les dégâts\r\n          subis viennent à dépasser 150% de ses points de vie bruts il meurt.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function InitiativeRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight-initiative</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectKeyword>Initiative</SubjectKeyword>\r\n      <SubjectTitle>Initiative</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          <em>Score d'initiative.</em> Le score d'initiative est une quantité\r\n          relative qui mesure la capacité d'action d'une entité. Ce score\r\n          représente à la fois la priorité d'une entité sur les autres et la\r\n          quantité d'action qu'elle peut effectuer lors d'une manche. L'initiative\r\n          d'une entité est égale à la valeur de la caractéristique de dextérité de\r\n          celle-ci augmentée de dix points.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Déclarer un tour.</em> Au début d'une manche, une entité peut\r\n          déclarer un tour par tranche de 20 points d'initiative qu'elle possède.\r\n          Une entité doit toujours déclarer au moins un tour lors d'une manche mais\r\n          elle peut ne pas déclarer tous les tours auxquels elle a droit. Une entité\r\n          doit répartir l'entièreté de ses points d'initiative parmi l'ensemble des\r\n          tours qu'elle a déclaré vouloir jouer.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Ordonnancement des tours.</em> Une fois déclarés les tours sont joués\r\n          en commençant par ceux ayant le plus de point d'initiative et la manche\r\n          se termine par les tours ayant le moins de points. Si plusieurs tours ont\r\n          un nombre de point d'initiative équivalent c'est l'initiative des joueurs\r\n          qui prime pour décider du joueur qui joue le premier. En cas d'égalité\r\n          stricte l'ordonnancement est décidé à pile ou face.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Initiative négative.</em> Si une entité joue avec une initiative\r\n          négative pour quelque raison que ce soit toutes les entités de la\r\n          partie se voient attribuer 20 points d'initiative supplémentaire jusqu'à\r\n          ce que l'entité en question ait un score positif. La déclaration des\r\n          tours s'effectue alors normalement.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Modification d'initiative.</em> Si une entité perd des points\r\n          d'initiative durant une manche, son tour le plus tardif est pénalisé\r\n          du nombre de points perdu. Si le tour le plus tardif atteint 0 point\r\n          d'initiative il est alors annulé et le reste des points a pénalisés sont\r\n          reportés sur le tour qui le précède. Si une entité gagne des points\r\n          d'initiative lors d'un round son tour le plus récent gagne l'ensemble des\r\n          points bonus.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Dextérité nulle.</em> Une entité avec une dextérité nulle est\r\n          considéré hors-combat et ne peut plus jouer de tour tant que son score\r\n          n'est pas remonté d'au moins un point. Même avec une initiative positive,\r\n          une entité avec une dextérité nulle ne peut agir. Une initiative négative\r\n          permet de continuer à jouer tant que la dextérité n'est pas nulle.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function Introduction () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight-introduction</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectKeyword>Introduction</SubjectKeyword>\r\n      <SubjectTitle>Introduction</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Les scènes à interaction forte nécessitant des prises de décision simultanées\r\n          sont résolues au tour par tour. Tout élément du récit pouvant\r\n          agir de son propre chef lors d'une telle situation est appelé <strong>\r\n          entité</strong>. Chaque <strong>tour</strong> ne concerne qu'une\r\n          unique entité qui peut entreprendre un nombre limité d'<strong>actions\r\n          </strong> avant de passer son tour à l'entité suivante.\r\n        </p>\r\n\r\n        <p>\r\n          L'ensemble des tours nécessaires pour que toutes des entités d'une scène\r\n          puissent agir est appelé une <strong>manche</strong>. Il peut arriver qu'une\r\n          entité ait le droit de jouer plusieurs tours lors d'une manche. La quantité\r\n          de tour joué pendant une manche et leur ordonnancement dépend des scores\r\n          d'initiative de chaque entité.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function WeigthPointRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight-weigth-point</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectKeyword>Point de charge</SubjectKeyword>\r\n      <SubjectTitle>Points de charge</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Une entitée possède autant de points de charge qu'elle à de points de\r\n          force. Les points de charge représente la quantité d'objets que peut\r\n          équiper et transporter l'entité avant de se voir attribuer des malus.\r\n          Tous les deux points de charge non utilisé, l'entité peut rajouter un\r\n          point de dégât supplémentaire à toute ses attaques au corps à corps et à\r\n          son initiative. Tous les points de charge au dessus de la limite de\r\n          l'entité implique la perte d'un point de dégât à toutes les attaques au\r\n          corps à corps et la perte d'un point à son initiative.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function WoundsRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight-wounds</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectKeyword>Blessure</SubjectKeyword>\r\n      <SubjectTitle>Blessures</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Un personnage perdant un important nombre de points de vie d'un coup ou\r\n          subissant les conséquences de certaines techniques peut se voir infliger\r\n          des blessures. Les blessures sont des effets permanents qui ne peuvent\r\n          être soignés qu'avec le temps et des soins minutieux, elles sont classés\r\n          en deux catégories : les blessures légères et les blessures graves.\r\n        </p>\r\n\r\n        <p>\r\n          Toutes les armes peuvent provoquer des types de blessures légères ou\r\n          graves différentes. Pour qu'une blessure soit infligée il faut que le\r\n          nombre de dégâts effectués par l'arme d'une seule traite soit supérieur\r\n          à son seuil de blessure légère ou à son seuil de blessure grave.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { FightRules } from './FightRules'\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","module.exports = require(\"regenerator-runtime\");\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@cedric-demongivert/gl-tool-collection\"] = factory();\n\telse\n\t\troot[\"@cedric-demongivert/gl-tool-collection\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/Size.ts\nvar Size;\r\n(function (Size) {\r\n    /**\r\n    * Value that describe an infinity quantity of element.\r\n    */\r\n    Size.INFINITY = 0x7fffffff;\r\n    /**\r\n    * Return a string representation of the given size.\r\n    *\r\n    * @param size - A size to stringify.\r\n    *\r\n    * @return A string representation of the given size.\r\n    */\r\n    function toString(size) {\r\n        switch (size) {\r\n            case Size.INFINITY: return 'infinity';\r\n            default: return size.toString();\r\n        }\r\n    }\r\n    Size.toString = toString;\r\n})(Size || (Size = {}));\r\n\n// CONCATENATED MODULE: ./src/Collection.ts\n\r\nvar Collection_Collection;\r\n(function (Collection) {\r\n    /**\r\n    * Return true if the given collection contains a non-finite number of element.\r\n    *\r\n    * @param collection - A collection to assert.\r\n    *\r\n    * @return True if the given collection contains a non-finite number of element.\r\n    */\r\n    function isInfinite(collection) {\r\n        return collection.size !== Size.INFINITY;\r\n    }\r\n    Collection.isInfinite = isInfinite;\r\n    /**\r\n    * Return true if the given collection contains a finite number of element.\r\n    *\r\n    * @param collection - A collection to assert.\r\n    *\r\n    * @return True if the given collection contains a finite number of element.\r\n    */\r\n    function isFinite(collection) {\r\n        return collection.size !== Size.INFINITY;\r\n    }\r\n    Collection.isFinite = isFinite;\r\n    /**\r\n    * Return a shallow copy of the given collection.\r\n    *\r\n    * A shallow-copy *b* of a collection *a* is an instance that follow both\r\n    * properties :\r\n    *  - b !== a\r\n    *  - b.equals(a)\r\n    *\r\n    * @param toCopy - A collection to copy.\r\n    *\r\n    * @return A shallow copy of the given collection.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy.clone();\r\n    }\r\n    Collection.copy = copy;\r\n})(Collection_Collection || (Collection_Collection = {}));\r\n\n// CONCATENATED MODULE: ./src/SequenceIterator.ts\nclass SequenceIterator {\r\n    /**\r\n    * Instantiate a new random access iterator instance.\r\n    */\r\n    constructor() {\r\n        this.sequence = null;\r\n        this.index = 0;\r\n    }\r\n    /**\r\n    * @see Iterator#collection\r\n    */\r\n    collection() {\r\n        return this.sequence;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.hasNext\r\n    */\r\n    hasNext() {\r\n        return this.sequence && (this.sequence.lastIndex === undefined ||\r\n            this.index < this.sequence.lastIndex);\r\n    }\r\n    /**\r\n    * @see BidirectionalIterator.go\r\n    */\r\n    go(index) {\r\n        this.index = index;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.next\r\n    */\r\n    next() {\r\n        this.index += 1;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.forward\r\n    */\r\n    forward(count) {\r\n        this.index += count;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.end\r\n    */\r\n    end() {\r\n        if (this.sequence && this.sequence.lastIndex !== undefined) {\r\n            this.index = this.sequence.lastIndex;\r\n        }\r\n        else {\r\n            throw new Error('Trying to access the first element of an infinite or ' +\r\n                'semi-finite sequence that does not have an ending element.');\r\n        }\r\n    }\r\n    /**\r\n    * @see BackwardIterator.hasPrevious\r\n    */\r\n    hasPrevious() {\r\n        return this.sequence && (this.sequence.firstIndex === undefined ||\r\n            this.index > this.sequence.firstIndex);\r\n    }\r\n    /**\r\n    * @see BackwardIterator.previous\r\n    */\r\n    previous() {\r\n        this.index -= 1;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.backward\r\n    */\r\n    backward(count) {\r\n        this.index -= count;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.start\r\n    */\r\n    start() {\r\n        if (this.sequence && this.sequence.firstIndex !== undefined) {\r\n            this.index = this.sequence.firstIndex;\r\n        }\r\n        else {\r\n            throw new Error('Trying to access the first element of an infinite or ' +\r\n                'semi-finite sequence that does not have a starting element.');\r\n        }\r\n    }\r\n    /**\r\n    * @see Iterator.get\r\n    */\r\n    get() {\r\n        return this.sequence.get(this.index);\r\n    }\r\n    /**\r\n    * @see Iterator.move\r\n    */\r\n    move(iterator) {\r\n        if (iterator instanceof SequenceIterator) {\r\n            this.sequence = iterator.sequence;\r\n            this.index = iterator.index;\r\n        }\r\n        else {\r\n            throw new Error('Trying to move to a location described by an unsupported type of ' +\r\n                'iterator');\r\n        }\r\n    }\r\n    /**\r\n    * Shallow-copy the given instance.\r\n    *\r\n    * @param toCopy - An instance to shallow copy.\r\n    */\r\n    copy(toCopy) {\r\n        this.sequence = toCopy.sequence;\r\n        this.index = toCopy.index;\r\n    }\r\n    /**\r\n    * @see Iterator.clone\r\n    */\r\n    clone() {\r\n        const copy = new SequenceIterator();\r\n        copy.copy(this);\r\n        return copy;\r\n    }\r\n    /**\r\n    * @see Iterator.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof SequenceIterator) {\r\n            return other.sequence === this.sequence &&\r\n                other.index === this.index;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (SequenceIterator) {\r\n    /**\r\n    * Return a shallow copy of the given iterator.\r\n    *\r\n    * A shallow-copy *b* of an iterator *a* is an instance that follow both\r\n    * properties :\r\n    *  - b !== a\r\n    *  - b.equals(a)\r\n    *\r\n    * @param toCopy - An iterator to copy.\r\n    *\r\n    * @return A shallow copy of the given iterator.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy.clone();\r\n    }\r\n    SequenceIterator.copy = copy;\r\n})(SequenceIterator || (SequenceIterator = {}));\r\n\n// CONCATENATED MODULE: ./src/sequence/EmptySequence.ts\n\r\nclass EmptySequence_EmptySequence {\r\n    /**\r\n    * @see Sequence.size\r\n    */\r\n    get size() {\r\n        return 0;\r\n    }\r\n    /**\r\n    * @see Sequence.get\r\n    */\r\n    get(index) {\r\n        return undefined;\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get last() {\r\n        return undefined;\r\n    }\r\n    /**\r\n    * @see Sequence.lastIndex\r\n    */\r\n    get lastIndex() {\r\n        return 0;\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get first() {\r\n        return undefined;\r\n    }\r\n    /**\r\n    * @see Sequence.firstIndex\r\n    */\r\n    get firstIndex() {\r\n        return 0;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOf\r\n    */\r\n    indexOf(element) {\r\n        return -1;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOfInSubsequence\r\n    */\r\n    indexOfInSubsequence(element, offset, size) {\r\n        return -1;\r\n    }\r\n    /**\r\n    * @see Sequence.has\r\n    */\r\n    has(element) {\r\n        return false;\r\n    }\r\n    /**\r\n    * @see Sequence.hasInSubsequence\r\n    */\r\n    hasInSubsequence(element, offset, size) {\r\n        return false;\r\n    }\r\n    /**\r\n    * @see Sequence.clone\r\n    */\r\n    clone() {\r\n        return this;\r\n    }\r\n    /**\r\n    * @see Sequence.view\r\n    */\r\n    view() {\r\n        return this;\r\n    }\r\n    /**\r\n    * @see Sequence.iterator\r\n    */\r\n    iterator() {\r\n        const iterator = new SequenceIterator();\r\n        iterator.sequence = this;\r\n        return iterator;\r\n    }\r\n    /**\r\n    * @see Sequence[Symbol.iterator]\r\n    */\r\n    *[Symbol.iterator]() {\r\n    }\r\n    /**\r\n    * @see Sequence.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        return other instanceof EmptySequence_EmptySequence;\r\n    }\r\n}\r\n(function (EmptySequence) {\r\n    EmptySequence.INSTANCE = new EmptySequence();\r\n    function clone(sequence) {\r\n        return sequence;\r\n    }\r\n    EmptySequence.clone = clone;\r\n    function of() {\r\n        return EmptySequence.INSTANCE;\r\n    }\r\n    EmptySequence.of = of;\r\n})(EmptySequence_EmptySequence || (EmptySequence_EmptySequence = {}));\r\n\n// CONCATENATED MODULE: ./src/Sequence.ts\n\r\nvar Sequence_Sequence;\r\n(function (Sequence) {\r\n    /**\r\n    * A sequence marker to export in a namespace.\r\n    */\r\n    Sequence.SEQUENCE = Symbol();\r\n    /**\r\n    * Return true if the given collection is a sequence.\r\n    *\r\n    * @param collection - A collection to assert.\r\n    *\r\n    * @return True if the given collection is a sequence.\r\n    */\r\n    function isSequence(collection) {\r\n        return Sequence.SEQUENCE in Object.getPrototypeOf(collection).constructor;\r\n    }\r\n    Sequence.isSequence = isSequence;\r\n    /**\r\n    * @return An instance of sequence that represent a static empty sequence.\r\n    */\r\n    function empty() {\r\n        return EmptySequence_EmptySequence.of();\r\n    }\r\n    Sequence.empty = empty;\r\n})(Sequence_Sequence || (Sequence_Sequence = {}));\r\n\n// CONCATENATED MODULE: ./src/algorithm/bissect.ts\n/**\r\n* Default comparator used in order to bissect a collection.\r\n*\r\n* @see Comparator\r\n*/\r\nfunction defaultComparator(left, right) {\r\n    return left < right ? -1 : (left > right ? 1 : 0);\r\n}\r\n/**\r\n* Binary search an element in an ordered sequence and returns its location.\r\n*\r\n* If the given element does not exists into the given sequence this method\r\n* will return its insertion index in the form of a negative number :\r\n* (-insertionIndex -1)\r\n*\r\n* @param sequence - A sequence to search.\r\n* @param value - A value to search.\r\n* @param [comparator = defaultComparator] - A comparison function to use.\r\n* @oaran [offset = 0] - Number of element to skip from the start of the sequence.\r\n* @oaran [size = sequence.size - offset] - Number of element to search.\r\n*/\r\nfunction bissect(sequence, value, comparator = defaultComparator, offset = 0, size = sequence.size - offset) {\r\n    if (size > 0) {\r\n        let left = offset;\r\n        let right = offset + size;\r\n        while (left !== right) {\r\n            const cursor = left + ((right - left) >>> 1);\r\n            const comparison = comparator(value, sequence.get(cursor));\r\n            if (comparison === 0) {\r\n                return cursor;\r\n            }\r\n            else if (comparison > 0) {\r\n                left = cursor + 1;\r\n            }\r\n            else {\r\n                right = cursor;\r\n            }\r\n        }\r\n        return -(left + 1);\r\n    }\r\n    else {\r\n        return -1;\r\n    }\r\n}\r\n(function (bissect) {\r\n    /**\r\n    * @see bissect\r\n    *\r\n    * A bissection that always return the FIRST element that match in the parent\r\n    * sequence.\r\n    *\r\n    * @param sequence - A sequence to search.\r\n    * @param value - A value to search.\r\n    * @param [comparator = defaultComparator] - A comparison function to use.\r\n    * @oaran [offset = 0] - Number of element to skip from the start of the sequence.\r\n    * @oaran [size = sequence.size - offset] - Number of element to search.\r\n    */\r\n    function first(sequence, value, comparator = defaultComparator, offset = 0, size = sequence.size - offset) {\r\n        let result = bissect(sequence, value, comparator, offset, size);\r\n        if (result < 0)\r\n            return result;\r\n        while (result > 0 && comparator(value, sequence.get(result - 1)) === 0) {\r\n            result -= 1;\r\n        }\r\n        return result;\r\n    }\r\n    bissect.first = first;\r\n    /**\r\n    * @see bissect\r\n    *\r\n    * A bissection that always return the LAST element that match in the parent\r\n    * sequence.\r\n    *\r\n    * @param sequence - A sequence to search.\r\n    * @param value - A value to search.\r\n    * @param [comparator = defaultComparator] - A comparison function to use.\r\n    * @oaran [offset = 0] - Number of element to skip from the start of the sequence.\r\n    * @oaran [size = sequence.size - offset] - Number of element to search.\r\n    */\r\n    function last(sequence, value, comparator = defaultComparator, offset = 0, size = sequence.size - offset) {\r\n        let result = bissect(sequence, value, comparator, offset, size);\r\n        if (result < 0)\r\n            return result;\r\n        const end = sequence.size - 1;\r\n        while (result < end && comparator(value, sequence.get(result + 1)) === 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n    bissect.last = last;\r\n    /**\r\n    * @see bissect\r\n    *\r\n    * A bissection that use an invertion of the given comparator.\r\n    *\r\n    * @param sequence - A sequence to search.\r\n    * @param value - A value to search.\r\n    * @param [comparator = defaultComparator] - A comparison function to use.\r\n    * @oaran [offset = 0] - Number of element to skip from the start of the sequence.\r\n    * @oaran [size = sequence.size - offset] - Number of element to search.\r\n    */\r\n    function invert(sequence, value, comparator = defaultComparator, offset = 0, size = sequence.size - offset) {\r\n        if (size > 0) {\r\n            let left = offset;\r\n            let right = offset + size;\r\n            while (left !== right) {\r\n                const cursor = left + ((right - left) >>> 1);\r\n                const comparison = -comparator(value, sequence.get(cursor));\r\n                if (comparison === 0) {\r\n                    return cursor;\r\n                }\r\n                else if (comparison > 0) {\r\n                    left = cursor + 1;\r\n                }\r\n                else {\r\n                    right = cursor;\r\n                }\r\n            }\r\n            return -(left + 1);\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    bissect.invert = invert;\r\n})(bissect || (bissect = {}));\r\n\n// CONCATENATED MODULE: ./src/algorithm/equals.ts\nfunction equals(left, right) {\r\n    if (left === right)\r\n        return true;\r\n    if (left.equals)\r\n        return left.equals(right);\r\n    return false;\r\n}\r\n\n// CONCATENATED MODULE: ./src/algorithm/quicksort.ts\n/**\r\n* Default comparator used in order to quicksort a collection.\r\n*\r\n* @see Comparator\r\n*/\r\nfunction quicksort_defaultComparator(left, right) {\r\n    return left < right ? -1 : (left > right ? 1 : 0);\r\n}\r\n/**\r\n* Quicksort the given sequence.\r\n*\r\n* @param sequence - A sequence to quicksort.\r\n* @param [comparator = defaultComparator] - A definition of the order to use.\r\n* @param [offset = 0] - Number of element to skip from the begining of the sequence.\r\n* @param [size = sequence.size - offset] - Number of element to sort.\r\n*/\r\nfunction quicksort(sequence, comparator = quicksort_defaultComparator, offset = 0, size = sequence.size - offset) { rquicksort(sequence, comparator, offset, offset + size - 1); }\r\nfunction rquicksort(sequence, comparator, left, right) {\r\n    if (left < right) {\r\n        const pivot = partition(sequence, comparator, left, right);\r\n        rquicksort(sequence, comparator, left, pivot);\r\n        rquicksort(sequence, comparator, pivot + 1, right);\r\n    }\r\n}\r\nfunction partition(sequence, comparator, left, right) {\r\n    const pivot = sequence.get((left + right) >>> 1);\r\n    let lower = left - 1;\r\n    let upper = right + 1;\r\n    do {\r\n        do {\r\n            lower += 1;\r\n        } while (comparator(sequence.get(lower), pivot) < 0);\r\n        do {\r\n            upper -= 1;\r\n        } while (comparator(sequence.get(upper), pivot) > 0);\r\n        if (lower >= upper) {\r\n            return upper;\r\n        }\r\n        sequence.swap(lower, upper);\r\n    } while (true);\r\n}\r\n\n// CONCATENATED MODULE: ./src/algorithm/index.ts\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/native/UnsignedIntegerBuffer.ts\nvar UnsignedIntegerBuffer;\r\n(function (UnsignedIntegerBuffer) {\r\n    /**\r\n    * Instantiate a unsigned byte buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to instantiate.\r\n    *\r\n    * @return A unsigned byte buffer of the given capacity.\r\n    */\r\n    function uint8(capacity) {\r\n        return new Uint8Array(capacity);\r\n    }\r\n    UnsignedIntegerBuffer.uint8 = uint8;\r\n    /**\r\n    * Instantiate a unsigned short buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to instantiate.\r\n    *\r\n    * @return A unsigned short buffer of the given capacity.\r\n    */\r\n    function uint16(capacity) {\r\n        return new Uint16Array(capacity);\r\n    }\r\n    UnsignedIntegerBuffer.uint16 = uint16;\r\n    /**\r\n    * Instantiate a unsigned integer buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to instantiate.\r\n    *\r\n    * @return A unsigned integer buffer of the given capacity.\r\n    */\r\n    function uint32(capacity) {\r\n        return new Uint32Array(capacity);\r\n    }\r\n    UnsignedIntegerBuffer.uint32 = uint32;\r\n    /**\r\n    * Instantiate an unsigned integer buffer that can store values up to the given\r\n    * maximum (included).\r\n    *\r\n    * @param maximum - Maximum value that can be stored into the resulting buffer (included).\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return An unsigned integer buffer that can store values up to the given maximum (included).\r\n    */\r\n    function upTo(maximum, capacity) {\r\n        if (maximum <= 0xff) {\r\n            return new Uint8Array(capacity);\r\n        }\r\n        else if (maximum <= 0xffff) {\r\n            return new Uint16Array(capacity);\r\n        }\r\n        else {\r\n            return new Uint32Array(capacity);\r\n        }\r\n    }\r\n    UnsignedIntegerBuffer.upTo = upTo;\r\n})(UnsignedIntegerBuffer || (UnsignedIntegerBuffer = {}));\r\n\n// CONCATENATED MODULE: ./src/native/IntegerBuffer.ts\nvar IntegerBuffer;\r\n(function (IntegerBuffer) {\r\n    /**\r\n    * Instantiate a byte buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to instantiate.\r\n    *\r\n    * @return A byte buffer of the given capacity.\r\n    */\r\n    function int8(capacity) {\r\n        return new Int8Array(capacity);\r\n    }\r\n    IntegerBuffer.int8 = int8;\r\n    /**\r\n    * Instantiate a short buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to instantiate.\r\n    *\r\n    * @return A short buffer of the given capacity.\r\n    */\r\n    function int16(capacity) {\r\n        return new Int16Array(capacity);\r\n    }\r\n    IntegerBuffer.int16 = int16;\r\n    /**\r\n    * Instantiate an integer buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to instantiate.\r\n    *\r\n    * @return An integer buffer of the given capacity.\r\n    */\r\n    function int32(capacity) {\r\n        return new Int32Array(capacity);\r\n    }\r\n    IntegerBuffer.int32 = int32;\r\n    /**\r\n    * Instantiate an integer buffer that can store values up to the given maximum (included).\r\n    *\r\n    * @param maximum - Maximum value that can be stored into the resulting buffer (included).\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return An integer buffer that can store values up to the given maximum (included).\r\n    */\r\n    function upTo(maximum, capacity) {\r\n        if (maximum <= 0x7f) {\r\n            return new Int8Array(capacity);\r\n        }\r\n        else if (maximum <= 0x7fff) {\r\n            return new Int16Array(capacity);\r\n        }\r\n        else {\r\n            return new Int32Array(capacity);\r\n        }\r\n    }\r\n    IntegerBuffer.upTo = upTo;\r\n})(IntegerBuffer || (IntegerBuffer = {}));\r\n\n// CONCATENATED MODULE: ./src/native/FloatBuffer.ts\nvar FloatBuffer;\r\n(function (FloatBuffer) {\r\n    /**\r\n    * Instantiate a float buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to instantiate.\r\n    *\r\n    * @return A float buffer of the given capacity.\r\n    */\r\n    function float32(capacity) {\r\n        return new Float32Array(capacity);\r\n    }\r\n    FloatBuffer.float32 = float32;\r\n    /**\r\n    * Instantiate a double buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to instantiate.\r\n    *\r\n    * @return A double buffer of the given capacity.\r\n    */\r\n    function float64(capacity) {\r\n        return new Float64Array(capacity);\r\n    }\r\n    FloatBuffer.float64 = float64;\r\n})(FloatBuffer || (FloatBuffer = {}));\r\n\n// CONCATENATED MODULE: ./src/native/Buffer.ts\n\r\n\r\n\r\nvar Buffer_Buffer;\r\n(function (Buffer) {\r\n    Buffer.float32 = FloatBuffer.float32;\r\n    Buffer.float64 = FloatBuffer.float64;\r\n    Buffer.uint8 = UnsignedIntegerBuffer.uint8;\r\n    Buffer.uint16 = UnsignedIntegerBuffer.uint16;\r\n    Buffer.uint32 = UnsignedIntegerBuffer.uint32;\r\n    Buffer.unsignedUpTo = UnsignedIntegerBuffer.upTo;\r\n    Buffer.int8 = IntegerBuffer.int8;\r\n    Buffer.int16 = IntegerBuffer.int16;\r\n    Buffer.int32 = IntegerBuffer.int32;\r\n    Buffer.signedUpTo = IntegerBuffer.upTo;\r\n    /**\r\n    * Reallocate the given buffer.\r\n    *\r\n    * @param buffer - A buffer to reallocate.\r\n    * @param capacity - The new capacity of the buffer.\r\n    *\r\n    * @return A reallocation of the given buffer.\r\n    */\r\n    function reallocate(buffer, capacity) {\r\n        const result = new buffer.constructor(capacity);\r\n        return result;\r\n    }\r\n    Buffer.reallocate = reallocate;\r\n})(Buffer_Buffer || (Buffer_Buffer = {}));\r\n\n// CONCATENATED MODULE: ./src/view/View.ts\n/**\r\n* A readonly view over a given collection of values.\r\n*/\r\nclass View {\r\n    /**\r\n    * Create a new view over an existing collection.\r\n    *\r\n    * @param collection - A collection to wrap.\r\n    */\r\n    constructor(collection) {\r\n        this._collection = collection;\r\n    }\r\n    /**\r\n    * @see Collection.size\r\n    */\r\n    get size() {\r\n        return this._collection.size;\r\n    }\r\n    /**\r\n    * @see Collection.has\r\n    */\r\n    has(element) {\r\n        return this._collection.has(element);\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    iterator() {\r\n        return this._collection.iterator();\r\n    }\r\n    /**\r\n    * @see Collection.clone\r\n    */\r\n    clone() {\r\n        return new View(this._collection);\r\n    }\r\n    /**\r\n    * @see Collection.view\r\n    */\r\n    view() {\r\n        return this;\r\n    }\r\n    /**\r\n    * @see Collection.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof View) {\r\n            return this._collection.equals(other._collection);\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        yield* this._collection;\r\n    }\r\n}\r\n(function (View) {\r\n    /**\r\n    * Wrap an existing collection.\r\n    *\r\n    * @param collection - A collection to wrap in a view.\r\n    *\r\n    * @return A view over the given collection.\r\n    */\r\n    function wrap(collection) {\r\n        if (collection instanceof View) {\r\n            return collection;\r\n        }\r\n        else {\r\n            return new View(collection);\r\n        }\r\n    }\r\n    View.wrap = wrap;\r\n})(View || (View = {}));\r\n\n// CONCATENATED MODULE: ./src/view/SequenceView.ts\n\r\n/**\r\n* A readonly view over a given sequence of values.\r\n*/\r\nclass SequenceView_SequenceView extends View {\r\n    /**\r\n    * Create a new view over an existing collection.\r\n    *\r\n    * @param collection - A collection to wrap.\r\n    */\r\n    constructor(collection) {\r\n        super(collection);\r\n        this._sequence = collection;\r\n    }\r\n    /**\r\n    * @see Sequence.get\r\n    */\r\n    get(index) {\r\n        return this._sequence.get(index);\r\n    }\r\n    /**\r\n    * @see Sequence.firstIndex\r\n    */\r\n    get firstIndex() {\r\n        return this._sequence.firstIndex;\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get first() {\r\n        return this._sequence.first;\r\n    }\r\n    /**\r\n    * @see Sequence.lastIndex\r\n    */\r\n    get lastIndex() {\r\n        return this._sequence.lastIndex;\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get last() {\r\n        return this._sequence.last;\r\n    }\r\n    /**\r\n    * @see Collection.clone\r\n    */\r\n    clone() {\r\n        return SequenceView_SequenceView.wrap(this._sequence);\r\n    }\r\n    /**\r\n    * @see Sequence.indexOf\r\n    */\r\n    indexOf(element) {\r\n        return this._sequence.indexOf(element);\r\n    }\r\n    /**\r\n    * @see Sequence.hasInSubsequence\r\n    */\r\n    hasInSubsequence(element, offset, size) {\r\n        return this._sequence.hasInSubsequence(element, offset, size);\r\n    }\r\n    /**\r\n    * @see Sequence.indexOfInSubsequence\r\n    */\r\n    indexOfInSubsequence(element, offset, size) {\r\n        return this._sequence.indexOfInSubsequence(element, offset, size);\r\n    }\r\n    /**\r\n    * @see Sequence.iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        yield* this._sequence;\r\n    }\r\n}\r\n(function (SequenceView) {\r\n    /**\r\n    * Wrap an existing collection.\r\n    *\r\n    * @param collection - A collection to wrap in a view.\r\n    *\r\n    * @return A view over the given collection.\r\n    */\r\n    function wrap(collection) {\r\n        if (collection instanceof SequenceView) {\r\n            return collection;\r\n        }\r\n        else {\r\n            return new SequenceView(collection);\r\n        }\r\n    }\r\n    SequenceView.wrap = wrap;\r\n})(SequenceView_SequenceView || (SequenceView_SequenceView = {}));\r\n\n// CONCATENATED MODULE: ./src/pack/PackIterator.ts\nclass PackIterator {\r\n    /**\r\n    * Instantiate a new random access iterator instance.\r\n    */\r\n    constructor() {\r\n        this.pack = null;\r\n        this.index = 0;\r\n    }\r\n    /**\r\n    * @see Iterator.collection\r\n    */\r\n    collection() {\r\n        return this.pack;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.hasNext\r\n    */\r\n    hasNext() {\r\n        return this.pack && this.index < this.pack.size;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.next\r\n    */\r\n    next() {\r\n        this.index += 1;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.forward\r\n    */\r\n    forward(count) {\r\n        this.index += count;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.end\r\n    */\r\n    end() {\r\n        this.index = this.pack ? this.pack.lastIndex : 0;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.hasPrevious\r\n    */\r\n    hasPrevious() {\r\n        return this.pack && this.index > 0;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.previous\r\n    */\r\n    previous() {\r\n        this.index -= 1;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.backward\r\n    */\r\n    backward(count) {\r\n        this.index -= count;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.start\r\n    */\r\n    start() {\r\n        this.index = 0;\r\n    }\r\n    /**\r\n    * @see Iterator.get\r\n    */\r\n    get() {\r\n        return this.pack.get(this.index);\r\n    }\r\n    /**\r\n    * @see Iterator.move\r\n    */\r\n    move(iterator) {\r\n        if (iterator instanceof PackIterator) {\r\n            this.pack = iterator.pack;\r\n            this.index = iterator.index;\r\n        }\r\n        else {\r\n            throw new Error('Trying to move to a location described by an unsupported type of ' +\r\n                'iterator');\r\n        }\r\n    }\r\n    /**\r\n    * @see BidirectionalIterator.go\r\n    */\r\n    go(index) {\r\n        this.index = index;\r\n    }\r\n    /**\r\n    * Shallow-copy the given instance.\r\n    *\r\n    * @param toCopy\r\n    */\r\n    copy(toCopy) {\r\n        this.pack = toCopy.pack;\r\n        this.index = toCopy.index;\r\n    }\r\n    /**\r\n    * @see Iterator.clone\r\n    */\r\n    clone() {\r\n        const copy = new PackIterator();\r\n        copy.copy(this);\r\n        return copy;\r\n    }\r\n    /**\r\n    * @see Iterator.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof PackIterator) {\r\n            return other.pack === this.pack &&\r\n                other.index === this.index;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (PackIterator) {\r\n    /**\r\n    * Return a shallow copy of the given iterator.\r\n    *\r\n    * A shallow-copy *b* of an iterator *a* is an instance that follow both\r\n    * properties :\r\n    *  - b !== a\r\n    *  - b.equals(a)\r\n    *\r\n    * @param toCopy - An iterator to copy.\r\n    *\r\n    * @return A shallow copy of the given iterator.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy.clone();\r\n    }\r\n    PackIterator.copy = copy;\r\n})(PackIterator || (PackIterator = {}));\r\n\n// CONCATENATED MODULE: ./src/pack/BufferPack.ts\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass BufferPack_BufferPack {\r\n    /**\r\n    * Wrap an existing buffer into a new pack instance.\r\n    *\r\n    * @param elements - The buffer to wrap, the resulting pack will have the capacity of the given buffer.\r\n    * @param [size = 0] - Initial number of elements in the pack.\r\n    */\r\n    constructor(elements, size = 0) {\r\n        this._elements = elements;\r\n        this._size = size;\r\n    }\r\n    /**\r\n    * @return The underlying typed array.\r\n    */\r\n    get array() {\r\n        return this._elements;\r\n    }\r\n    /**\r\n    * @return The underlying buffer.\r\n    */\r\n    get buffer() {\r\n        return this._elements.buffer;\r\n    }\r\n    /**\r\n    * @see Collection.size\r\n    */\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    /**\r\n    * @see MutableSequence.size\r\n    */\r\n    set size(value) {\r\n        if (value > this._elements.length) {\r\n            this.reallocate(value);\r\n        }\r\n        for (let index = this._size; index < value; ++index) {\r\n            this._elements[index] = 0;\r\n        }\r\n        this._size = value;\r\n    }\r\n    /**\r\n    * @see StaticCollection.capacity\r\n    */\r\n    get capacity() {\r\n        return this._elements.length;\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.reallocate\r\n    */\r\n    reallocate(capacity) {\r\n        const old = this._elements;\r\n        const oldSize = this._size;\r\n        this._elements = Buffer_Buffer.reallocate(old, capacity);\r\n        this._size = Math.min(this._size, capacity);\r\n        for (let index = 0; index < oldSize; ++index) {\r\n            this._elements[index] = old[index];\r\n        }\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.fit\r\n    */\r\n    fit() {\r\n        this.reallocate(this._size);\r\n    }\r\n    /**\r\n    * @see Sequence.get\r\n    */\r\n    get(index) {\r\n        return this._elements[index];\r\n    }\r\n    /**\r\n    * @see MutableSequence.fill\r\n    */\r\n    fill(element) {\r\n        for (let index = 0, size = this._size; index < size; ++index) {\r\n            this._elements[index] = element;\r\n        }\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get last() {\r\n        return this._elements[Math.max(this._size - 1, 0)];\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get lastIndex() {\r\n        return Math.max(this._size - 1, 0);\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get first() {\r\n        return this._elements[0];\r\n    }\r\n    /**\r\n    * @see Sequence.firstIndex\r\n    */\r\n    get firstIndex() {\r\n        return 0;\r\n    }\r\n    /**\r\n    * @see MutableSequence.pop\r\n    */\r\n    pop() {\r\n        const last = this._size - 1;\r\n        const value = this._elements[last];\r\n        this.delete(last);\r\n        return value;\r\n    }\r\n    /**\r\n    * @see MutableSequence.shift\r\n    */\r\n    shift() {\r\n        const value = this._elements[0];\r\n        this.delete(0);\r\n        return value;\r\n    }\r\n    /**\r\n    * @see Pack.sort\r\n    */\r\n    sort(comparator) {\r\n        quicksort(this, comparator, 0, this._size);\r\n    }\r\n    /**\r\n    * @see Pack.subsort\r\n    */\r\n    subsort(offset, size, comparator) {\r\n        quicksort(this, comparator, offset, size);\r\n    }\r\n    /**\r\n    * @see MutableSequence.swap\r\n    */\r\n    swap(first, second) {\r\n        const tmp = this._elements[first];\r\n        this._elements[first] = this._elements[second];\r\n        this._elements[second] = tmp;\r\n    }\r\n    /**\r\n    * @see MutableSequence.set\r\n    */\r\n    set(index, value) {\r\n        if (index >= this._size)\r\n            this.size = index + 1;\r\n        this._elements[index] = value;\r\n    }\r\n    /**\r\n    * @see MutableSequence.insert\r\n    */\r\n    insert(index, value) {\r\n        if (index >= this._size) {\r\n            this.set(index, value);\r\n        }\r\n        else {\r\n            this.size += 1;\r\n            for (let cursor = this._size - 1; cursor > index; --cursor) {\r\n                this._elements[cursor] = this._elements[cursor - 1];\r\n            }\r\n            this._elements[index] = value;\r\n        }\r\n    }\r\n    /**\r\n    * @see MutableSequence.push\r\n    */\r\n    push(value) {\r\n        const index = this._size;\r\n        this.size += 1;\r\n        this._elements[index] = value;\r\n    }\r\n    /**\r\n    * @see MutableSequence.unshift\r\n    */\r\n    unshift(value) {\r\n        this.size += 1;\r\n        for (let index = this._size - 1; index > 0; --index) {\r\n            this._elements[index] = this._elements[index - 1];\r\n        }\r\n        this._elements[0] = value;\r\n    }\r\n    /**\r\n    * @see MutableSequence.delete\r\n    */\r\n    delete(index) {\r\n        for (let cursor = index, size = this._size - 1; cursor < size; ++cursor) {\r\n            this._elements[cursor] = this._elements[cursor + 1];\r\n        }\r\n        this.size -= 1;\r\n    }\r\n    /**\r\n    * @see MutableSequence.deleteMany\r\n    */\r\n    deleteMany(from, size) {\r\n        const toMove = this._size - from - size;\r\n        const offset = from + size;\r\n        for (let cursor = 0; cursor < toMove; ++cursor) {\r\n            this._elements[from + cursor] = this._elements[offset + cursor];\r\n        }\r\n        this.size -= size;\r\n    }\r\n    /**\r\n    * @see MutableSequence.warp\r\n    */\r\n    warp(index) {\r\n        this._elements[index] = this._elements[this._size - 1];\r\n        this.size -= 1;\r\n    }\r\n    /**\r\n    * @see Collection.has\r\n    */\r\n    has(element) {\r\n        return this.indexOf(element) >= 0;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOf\r\n    */\r\n    indexOf(element) {\r\n        for (let index = 0, length = this._size; index < length; ++index) {\r\n            if (equals(element, this._elements[index])) {\r\n                return index;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n    * @see Sequence.hasInSubsequence\r\n    */\r\n    hasInSubsequence(element, offset, size) {\r\n        return this.indexOfInSubsequence(element, offset, size) >= 0;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOfInSubsequence\r\n    */\r\n    indexOfInSubsequence(element, offset, size) {\r\n        for (let index = offset, length = offset + size; index < length; ++index) {\r\n            if (equals(element, this._elements[index])) {\r\n                return index;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n    * @see Pack.copy\r\n    */\r\n    copy(toCopy) {\r\n        this.size = toCopy.size;\r\n        for (let index = 0, length = toCopy.size; index < length; ++index) {\r\n            this.set(index, toCopy.get(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see Sequence.concat\r\n    */\r\n    concat(toConcat) {\r\n        const firstIndex = toConcat.firstIndex;\r\n        const lastIndex = toConcat.lastIndex + 1;\r\n        if (this.capacity < this.size + toConcat.size) {\r\n            this.reallocate(this.size + toConcat.size);\r\n        }\r\n        for (let index = firstIndex; index < lastIndex; ++index) {\r\n            this.push(toConcat.get(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see Pack.allocate\r\n    */\r\n    allocate(capacity) {\r\n        return new BufferPack_BufferPack(Buffer_Buffer.reallocate(this._elements, capacity));\r\n    }\r\n    /**\r\n    * @see Collection.clone\r\n    */\r\n    clone() {\r\n        const result = this.allocate(this._elements.length);\r\n        result.copy(this);\r\n        return result;\r\n    }\r\n    /**\r\n    * @see MutableSequence.clear\r\n    */\r\n    clear() {\r\n        this._size = 0;\r\n    }\r\n    /**\r\n    * @see Collection.view\r\n    */\r\n    view() {\r\n        return SequenceView_SequenceView.wrap(this);\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    iterator() {\r\n        const result = new PackIterator();\r\n        result.pack = this;\r\n        result.index = 0;\r\n        return result;\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        for (let index = 0, length = this._size; index < length; ++index) {\r\n            yield this._elements[index];\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof BufferPack_BufferPack) {\r\n            if (other.size !== this._size)\r\n                return false;\r\n            for (let index = 0, size = this._size; index < size; ++index) {\r\n                if (!equals(other.get(index), this._elements[index]))\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n* Default value of each new cell of this buffer.\r\n*/\r\nBufferPack_BufferPack.DEFAULT_VALUE = 0;\r\n(function (BufferPack) {\r\n    /**\r\n    * Return a copy of another pack.\r\n    *\r\n    * @param toCopy - A pack to copy.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy == null ? null : toCopy.clone();\r\n    }\r\n    BufferPack.copy = copy;\r\n    /**\r\n    * Instantiate a new pack that wrap a unsigned byte buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a unsigned byte buffer of the given capacity.\r\n    */\r\n    function uint8(capacity) {\r\n        return new BufferPack(new Uint8Array(capacity));\r\n    }\r\n    BufferPack.uint8 = uint8;\r\n    /**\r\n    * Instantiate a new pack that wrap a unsigned short buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a unsigned short buffer of the given capacity.\r\n    */\r\n    function uint16(capacity) {\r\n        return new BufferPack(new Uint16Array(capacity));\r\n    }\r\n    BufferPack.uint16 = uint16;\r\n    /**\r\n    * Instantiate a new pack that wrap a unsigned integer buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a unsigned integer buffer of the given capacity.\r\n    */\r\n    function uint32(capacity) {\r\n        return new BufferPack(new Uint32Array(capacity));\r\n    }\r\n    BufferPack.uint32 = uint32;\r\n    /**\r\n    * Instantiate a new pack that wrap a byte buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a byte buffer of the given capacity.\r\n    */\r\n    function int8(capacity) {\r\n        return new BufferPack(new Int8Array(capacity));\r\n    }\r\n    BufferPack.int8 = int8;\r\n    /**\r\n    * Instantiate a new pack that wrap a short buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a short buffer of the given capacity.\r\n    */\r\n    function int16(capacity) {\r\n        return new BufferPack(new Int16Array(capacity));\r\n    }\r\n    BufferPack.int16 = int16;\r\n    /**\r\n    * Instantiate a new pack that wrap a integer buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a integer buffer of the given capacity.\r\n    */\r\n    function int32(capacity) {\r\n        return new BufferPack(new Int32Array(capacity));\r\n    }\r\n    BufferPack.int32 = int32;\r\n    /**\r\n    * Instantiate a new pack that wrap a float buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a float buffer of the given capacity.\r\n    */\r\n    function float32(capacity) {\r\n        return new BufferPack(new Float32Array(capacity));\r\n    }\r\n    BufferPack.float32 = float32;\r\n    /**\r\n    * Instantiate a new pack that wrap a double buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a double buffer of the given capacity.\r\n    */\r\n    function float64(capacity) {\r\n        return new BufferPack(new Float64Array(capacity));\r\n    }\r\n    BufferPack.float64 = float64;\r\n    /**\r\n    * Instantiate a new pack that wrap a unsigned integer buffer that can store\r\n    * values in range [0, maximum] and that is of the given capacity.\r\n    *\r\n    * @param maximum - Maximum value that can be stored.\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a unsigned integer buffer that can store values\r\n    *         in range [0, maximum] and that is of the given capacity.\r\n    */\r\n    function unsignedUpTo(maximum, capacity) {\r\n        return new BufferPack(UnsignedIntegerBuffer.upTo(maximum, capacity));\r\n    }\r\n    BufferPack.unsignedUpTo = unsignedUpTo;\r\n    /**\r\n    * Instantiate a new pack that wrap a signed integer buffer that can store\r\n    * values in range [-maximum, maximum] and that is of the given capacity.\r\n    *\r\n    * @param maximum - Maximum value that can be stored.\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a signed integer buffer that can store values\r\n    *         in range [-maximum, maximum] and that is of the given capacity.\r\n    */\r\n    function signedUpTo(maximum, capacity) {\r\n        return new BufferPack(IntegerBuffer.upTo(maximum, capacity));\r\n    }\r\n    BufferPack.signedUpTo = signedUpTo;\r\n})(BufferPack_BufferPack || (BufferPack_BufferPack = {}));\r\n\n// CONCATENATED MODULE: ./src/pack/ArrayPack.ts\n\r\n\r\n\r\n\r\n/**\r\n* A javascript array.\r\n*\r\n* @see https://v8.dev/blog/elements-kinds?fbclid=IwAR337wb3oxEpjz_5xVHL-Y14gUpVElementOztLSIikVVQLGN6qcKidEjMLJ4vO3M\r\n*/\r\nclass ArrayPack_ArrayPack {\r\n    /**\r\n    * Wrap the given array as a pack.\r\n    *\r\n    * @param elements - A javascript array to wrap.\r\n    * @param [size = elements.length] - Initial number of elements in the array to wrap.\r\n    */\r\n    constructor(elements, size = elements.length) {\r\n        this._elements = elements;\r\n        this._size = size;\r\n    }\r\n    /**\r\n    * @see Collection.size\r\n    */\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    /**\r\n    * @see MutableSequence.size\r\n    */\r\n    set size(value) {\r\n        /**\r\n        * @see https://v8.dev/blog/elements-kinds?fbclid=IwAR337wb3oxEpjz_5xVHL-Y14gUpVElementOztLSIikVVQLGN6qcKidEjMLJ4vO3M\r\n        */\r\n        while (value > this._elements.length) {\r\n            this._elements.push(null);\r\n        }\r\n        for (let index = this._size; index < value; ++index) {\r\n            this._elements[index] = null;\r\n        }\r\n        this._size = value;\r\n    }\r\n    /**\r\n    * @see StaticCollection.capacity\r\n    */\r\n    get capacity() {\r\n        return this._elements.length;\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.reallocate\r\n    */\r\n    reallocate(capacity) {\r\n        if (capacity < this._elements.length) {\r\n            this._elements.length = capacity;\r\n            this._size = Math.min(this._size, capacity);\r\n        }\r\n        else {\r\n            /**\r\n            * @see https://v8.dev/blog/elements-kinds?fbclid=IwAR337wb3oxEpjz_5xVHL-Y14gUpVElementOztLSIikVVQLGN6qcKidEjMLJ4vO3M\r\n            */\r\n            while (this._elements.length != capacity) {\r\n                this._elements.push(null);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.fit\r\n    */\r\n    fit() {\r\n        this._elements.length = this._size;\r\n    }\r\n    /**\r\n    * @see Sequence.get\r\n    */\r\n    get(index) {\r\n        return this._elements[index];\r\n    }\r\n    /**\r\n    * @see MutableSequence.pop\r\n    */\r\n    pop() {\r\n        const last = this._size - 1;\r\n        const value = this._elements[last];\r\n        this.delete(last);\r\n        return value;\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get last() {\r\n        return this._elements[this._size - 1];\r\n    }\r\n    /**\r\n    * @see Sequence.lastIndex\r\n    */\r\n    get lastIndex() {\r\n        return Math.max(this._size - 1, 0);\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get first() {\r\n        return this._elements[0];\r\n    }\r\n    /**\r\n    * @see Sequence.firstIndex\r\n    */\r\n    get firstIndex() {\r\n        return 0;\r\n    }\r\n    /**\r\n    * @see MutableSequence.fill\r\n    */\r\n    fill(element) {\r\n        for (let index = 0, size = this._size; index < size; ++index) {\r\n            this._elements[index] = element;\r\n        }\r\n    }\r\n    /**\r\n    * @see MutableSequence.shift\r\n    */\r\n    shift() {\r\n        const value = this._elements[0];\r\n        this.delete(0);\r\n        return value;\r\n    }\r\n    /**\r\n    * @see Pack.sort\r\n    */\r\n    sort(comparator) {\r\n        quicksort(this, comparator, 0, this._size);\r\n    }\r\n    /**\r\n    * @see Pack.subsort\r\n    */\r\n    subsort(offset, size, comparator) {\r\n        quicksort(this, comparator, offset, size);\r\n    }\r\n    /**\r\n    * @see MutableSequence.swap\r\n    */\r\n    swap(first, second) {\r\n        const tmp = this._elements[first];\r\n        this._elements[first] = this._elements[second];\r\n        this._elements[second] = tmp;\r\n    }\r\n    /**\r\n    * @see MutableSequence.set\r\n    */\r\n    set(index, value) {\r\n        if (index >= this._size)\r\n            this.size = index + 1;\r\n        this._elements[index] = value;\r\n    }\r\n    /**\r\n    * @see MutableSequence.insert\r\n    */\r\n    insert(index, value) {\r\n        if (index >= this._size) {\r\n            this.set(index, value);\r\n        }\r\n        else {\r\n            this.size += 1;\r\n            for (let cursor = this._size - 1; cursor > index; --cursor) {\r\n                this._elements[cursor] = this._elements[cursor - 1];\r\n            }\r\n            this._elements[index] = value;\r\n        }\r\n    }\r\n    /**\r\n    * @see MutableSequence.push\r\n    */\r\n    push(value) {\r\n        const index = this._size;\r\n        this.size += 1;\r\n        this._elements[index] = value;\r\n    }\r\n    /**\r\n    * @see MutableSequence.unshift\r\n    */\r\n    unshift(value) {\r\n        this.size += 1;\r\n        for (let index = this._size - 1; index > 0; --index) {\r\n            this._elements[index] = this._elements[index - 1];\r\n        }\r\n        this._elements[0] = value;\r\n    }\r\n    /**\r\n    * @see MutableSequence.delete\r\n    */\r\n    delete(index) {\r\n        for (let cursor = index, size = this._size - 1; cursor < size; ++cursor) {\r\n            this._elements[cursor] = this._elements[cursor + 1];\r\n        }\r\n        this.size -= 1;\r\n    }\r\n    /**\r\n    * @see MutableSequence.deleteMany\r\n    */\r\n    deleteMany(from, size) {\r\n        const toMove = this._size - from - size;\r\n        const offset = from + size;\r\n        for (let cursor = 0; cursor < toMove; ++cursor) {\r\n            this._elements[from + cursor] = this._elements[offset + cursor];\r\n        }\r\n        this.size -= size;\r\n    }\r\n    /**\r\n    * @see MutableSequence.warp\r\n    */\r\n    warp(index) {\r\n        this._elements[index] = this._elements[this._size - 1];\r\n        this.size -= 1;\r\n    }\r\n    /**\r\n    * @see Collection.has\r\n    */\r\n    has(element) {\r\n        return this.indexOf(element) >= 0;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOf\r\n    */\r\n    indexOf(element) {\r\n        for (let index = 0, length = this._size; index < length; ++index) {\r\n            if (equals(element, this._elements[index])) {\r\n                return index;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n    * @see Sequence.hasInSubsequence\r\n    */\r\n    hasInSubsequence(element, offset, size) {\r\n        return this.indexOfInSubsequence(element, offset, size) >= 0;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOfInSubsequence\r\n    */\r\n    indexOfInSubsequence(element, offset, size) {\r\n        for (let index = offset, length = offset + size; index < length; ++index) {\r\n            if (equals(element, this._elements[index])) {\r\n                return index;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n    * @see Pack.copy\r\n    */\r\n    copy(toCopy) {\r\n        this.size = toCopy.size;\r\n        for (let index = 0, length = toCopy.size; index < length; ++index) {\r\n            this.set(index, toCopy.get(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see Sequence.concat\r\n    */\r\n    concat(toConcat) {\r\n        const firstIndex = toConcat.firstIndex;\r\n        const lastIndex = toConcat.lastIndex + 1;\r\n        if (this.capacity < this.size + toConcat.size) {\r\n            this.reallocate(this.size + toConcat.size);\r\n        }\r\n        for (let index = firstIndex; index < lastIndex; ++index) {\r\n            this.push(toConcat.get(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see Pack.allocate\r\n    */\r\n    allocate(capacity) {\r\n        return ArrayPack_ArrayPack.allocate(capacity);\r\n    }\r\n    /**\r\n    * @see Pack.clone\r\n    */\r\n    clone() {\r\n        return ArrayPack_ArrayPack.copy(this);\r\n    }\r\n    /**\r\n    * @see Collection.view\r\n    */\r\n    view() {\r\n        return SequenceView_SequenceView.wrap(this);\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    iterator() {\r\n        const result = new PackIterator();\r\n        result.pack = this;\r\n        result.index = 0;\r\n        return result;\r\n    }\r\n    /**\r\n    * @see MutableSequence.clear\r\n    */\r\n    clear() {\r\n        this._size = 0;\r\n    }\r\n    /**\r\n    * @see Sequence.iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        for (let index = 0, length = this._size; index < length; ++index) {\r\n            yield this._elements[index];\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof ArrayPack_ArrayPack) {\r\n            if (other.size !== this._size)\r\n                return false;\r\n            for (let index = 0, size = this._size; index < size; ++index) {\r\n                if (!equals(other.get(index), this._elements[index]))\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (ArrayPack) {\r\n    /**\r\n    * Initial value of each new cell of a pack.\r\n    */\r\n    ArrayPack.DEFAULT_VALUE = null;\r\n    /**\r\n    * Return an empty array pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return An empty array pack of the given capacity.\r\n    */\r\n    function allocate(capacity) {\r\n        const result = [];\r\n        /**\r\n        * @see https://v8.dev/blog/elements-kinds?fbclid=IwAR337wb3oxEpjz_5xVHL-Y14gUpVElementOztLSIikVVQLGN6qcKidEjMLJ4vO3M\r\n        */\r\n        while (result.length != capacity) {\r\n            result.push(ArrayPack.DEFAULT_VALUE);\r\n        }\r\n        return new ArrayPack(result, 0);\r\n    }\r\n    ArrayPack.allocate = allocate;\r\n    /**\r\n    * Wrap an existing array as a pack.\r\n    *\r\n    * @param elements - Array to wrap.\r\n    *\r\n    * @return The given array wrapped as a pack.\r\n    */\r\n    function wrap(elements) {\r\n        return new ArrayPack(elements);\r\n    }\r\n    ArrayPack.wrap = wrap;\r\n    /**\r\n    * Return a shallow copy of another pack as an array pack.\r\n    *\r\n    * @param toCopy - A pack to copy.\r\n    *\r\n    * @return An array pack that is a shallow copy of the given pack.\r\n    */\r\n    function copy(toCopy) {\r\n        const result = allocate(toCopy.capacity);\r\n        result.copy(toCopy);\r\n        return result;\r\n    }\r\n    ArrayPack.copy = copy;\r\n})(ArrayPack_ArrayPack || (ArrayPack_ArrayPack = {}));\r\n\n// CONCATENATED MODULE: ./src/pack/InstancePack.ts\n\r\n\r\n\r\n/**\r\n* A javascript array of pre-allocated instances.\r\n*\r\n* @see https://v8.dev/blog/elements-kinds?fbclid=IwAR337wb3oxEpjz_5xVHL-Y14gUpVElementOztLSIikVVQLGN6qcKidEjMLJ4vO3M\r\n*/\r\nclass InstancePack_InstancePack {\r\n    /**\r\n    * Makes an empty instance pack of the given capacity.\r\n    *\r\n    * @param allocator - An allocator that allows to manipulate the given instance type.\r\n    * @param [capacity = 32] - Initial capacity of the pack to instantiate.\r\n    */\r\n    constructor(allocator, capacity = 32) {\r\n        this.allocator = allocator;\r\n        this._pool = Pack_Pack.any(capacity);\r\n        this._elements = Pack_Pack.any(capacity);\r\n        while (this._pool.size < this._pool.capacity) {\r\n            this._pool.push(this.allocator.allocate());\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.size\r\n    */\r\n    get size() {\r\n        return this._elements.size;\r\n    }\r\n    /**\r\n    * @see MutableSequence.size\r\n    */\r\n    set size(value) {\r\n        if (value > this._pool.capacity) {\r\n            this.reallocate(value);\r\n        }\r\n        /**\r\n        * @see https://v8.dev/blog/elements-kinds?fbclid=IwAR337wb3oxEpjz_5xVHL-Y14gUpVElementOztLSIikVVQLGN6qcKidEjMLJ4vO3M\r\n        */\r\n        while (this._elements.size < value) {\r\n            this._elements.push(this._pool.pop());\r\n        }\r\n        while (this._elements.size > value) {\r\n            this._pool.push(this._elements.pop());\r\n        }\r\n    }\r\n    /**\r\n    * @see StaticCollection.capacity\r\n    */\r\n    get capacity() {\r\n        return this._elements.capacity;\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.reallocate\r\n    */\r\n    reallocate(capacity) {\r\n        const oldCapacity = this._elements.capacity;\r\n        this._elements.reallocate(capacity);\r\n        this._pool.reallocate(capacity);\r\n        for (let index = oldCapacity; index < capacity; ++index) {\r\n            this._pool.push(this.allocator.allocate());\r\n        }\r\n        this._pool.size = capacity - this._elements.size;\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.fit\r\n    */\r\n    fit() {\r\n        this.reallocate(this._elements.size);\r\n    }\r\n    /**\r\n    * @see Sequence.get\r\n    */\r\n    get(index) {\r\n        return this._elements.get(index);\r\n    }\r\n    /**\r\n    * @see MutableSequence.pop\r\n    */\r\n    pop(output = this.allocator.allocate()) {\r\n        this.allocator.copy(this._elements.last, output);\r\n        this._pool.push(this._elements.pop());\r\n        this.allocator.clear(this._pool.last);\r\n        return output;\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get last() {\r\n        return this._elements.last;\r\n    }\r\n    /**\r\n    * @see Sequence.lastIndex\r\n    */\r\n    get lastIndex() {\r\n        return this._elements.lastIndex;\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get first() {\r\n        return this._elements.first;\r\n    }\r\n    /**\r\n    * @see Sequence.firstIndex\r\n    */\r\n    get firstIndex() {\r\n        return 0;\r\n    }\r\n    /**\r\n    * @see MutableSequence.fill\r\n    */\r\n    fill(element) {\r\n        for (let index = 0, size = this._elements.size; index < size; ++index) {\r\n            this.allocator.copy(element, this._elements.get(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see MutableSequence.shift\r\n    */\r\n    shift(output = this.allocator.allocate()) {\r\n        this.allocator.copy(this._elements.first, output);\r\n        this._pool.push(this._elements.shift());\r\n        this.allocator.clear(this._pool.last);\r\n        return output;\r\n    }\r\n    /**\r\n    * @see Pack.sort\r\n    */\r\n    sort(comparator) {\r\n        this._elements.sort(comparator);\r\n    }\r\n    /**\r\n    * @see Pack.subsort\r\n    */\r\n    subsort(offset, size, comparator) {\r\n        this._elements.subsort(offset, size, comparator);\r\n    }\r\n    /**\r\n    * @see MutableSequence.swap\r\n    */\r\n    swap(first, second) {\r\n        this._elements.swap(first, second);\r\n    }\r\n    /**\r\n    * @see MutableSequence.set\r\n    */\r\n    set(index, value) {\r\n        if (index >= this._elements.size) {\r\n            this.size = index + 1;\r\n        }\r\n        this.allocator.copy(value, this._elements.get(index));\r\n    }\r\n    /**\r\n    * @see MutableSequence.insert\r\n    */\r\n    insert(index, value) {\r\n        if (index >= this._elements.size) {\r\n            this.set(index, value);\r\n        }\r\n        else {\r\n            if (this._elements.size === this._elements.capacity) {\r\n                this.reallocate(this.capacity * 2);\r\n            }\r\n            this._elements.insert(index, this._pool.pop());\r\n            this.allocator.copy(value, this._elements.get(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see MutableSequence.push\r\n    */\r\n    push(value) {\r\n        if (this._elements.size === this._elements.capacity) {\r\n            this.reallocate(this.capacity * 2);\r\n        }\r\n        this._elements.push(this._pool.pop());\r\n        this.allocator.copy(value, this._elements.last);\r\n    }\r\n    /**\r\n    * @see MutableSequence.unshift\r\n    */\r\n    unshift(value) {\r\n        if (this._elements.size === this._elements.capacity) {\r\n            this.reallocate(this.capacity * 2);\r\n        }\r\n        this._elements.unshift(this._pool.pop());\r\n        this.allocator.copy(value, this._elements.first);\r\n    }\r\n    /**\r\n    * @see MutableSequence.delete\r\n    */\r\n    delete(index) {\r\n        const element = this._elements.get(index);\r\n        this._pool.push(element);\r\n        this.allocator.clear(element);\r\n        this._elements.delete(index);\r\n    }\r\n    /**\r\n    * @see MutableSequence.deleteMany\r\n    */\r\n    deleteMany(from, size) {\r\n        for (let index = 0; index < size; ++index) {\r\n            const element = this._elements.get(from + index);\r\n            this._pool.push(element);\r\n            this.allocator.clear(element);\r\n        }\r\n        this._elements.deleteMany(from, size);\r\n    }\r\n    /**\r\n    * @see MutableSequence.warp\r\n    */\r\n    warp(index) {\r\n        const element = this._elements.get(index);\r\n        this._pool.push(element);\r\n        this.allocator.clear(element);\r\n        this._elements.warp(index);\r\n    }\r\n    /**\r\n    * @see Collection.has\r\n    */\r\n    has(element) {\r\n        return this.indexOf(element) >= 0;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOf\r\n    */\r\n    indexOf(element) {\r\n        return this._elements.indexOf(element);\r\n    }\r\n    /**\r\n    * @see Sequence.hasInSubsequence\r\n    */\r\n    hasInSubsequence(element, offset, size) {\r\n        return this.indexOfInSubsequence(element, offset, size) >= 0;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOfInSubsequence\r\n    */\r\n    indexOfInSubsequence(element, offset, size) {\r\n        return this._elements.indexOfInSubsequence(element, offset, size);\r\n    }\r\n    /**\r\n    * @see Pack.copy\r\n    */\r\n    copy(toCopy) {\r\n        this.size = toCopy.size;\r\n        for (let index = 0, length = toCopy.size; index < length; ++index) {\r\n            this.set(index, toCopy.get(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see Sequence.concat\r\n    */\r\n    concat(toConcat) {\r\n        const firstIndex = toConcat.firstIndex;\r\n        const lastIndex = toConcat.lastIndex + 1;\r\n        if (this.capacity < this.size + toConcat.size) {\r\n            this.reallocate(this.size + toConcat.size);\r\n        }\r\n        for (let index = firstIndex; index < lastIndex; ++index) {\r\n            this.push(toConcat.get(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see Pack.allocate\r\n    */\r\n    allocate(capacity) {\r\n        return new InstancePack_InstancePack(this.allocator, capacity);\r\n    }\r\n    /**\r\n    * @see Pack.clone\r\n    */\r\n    clone() {\r\n        return InstancePack_InstancePack.copy(this);\r\n    }\r\n    /**\r\n    * @see Collection.view\r\n    */\r\n    view() {\r\n        return SequenceView_SequenceView.wrap(this);\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    iterator() {\r\n        const result = new PackIterator();\r\n        result.pack = this;\r\n        result.index = 0;\r\n        return result;\r\n    }\r\n    /**\r\n    * @see MutableSequence.clear\r\n    */\r\n    clear() {\r\n        while (this._elements.size > 0) {\r\n            const element = this._elements.pop();\r\n            this._pool.push(element);\r\n            this.allocator.clear(element);\r\n        }\r\n    }\r\n    /**\r\n    * @see Sequence.iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        yield* this._elements;\r\n    }\r\n    /**\r\n    * @see Collection.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof InstancePack_InstancePack) {\r\n            return this.allocator === other.allocator &&\r\n                this._elements.equals(other._elements);\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (InstancePack) {\r\n    /**\r\n    * Return an empty array pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return An empty array pack of the given capacity.\r\n    */\r\n    function allocate(allocator, capacity) {\r\n        return new InstancePack(allocator, capacity);\r\n    }\r\n    InstancePack.allocate = allocate;\r\n    /**\r\n    * Return a copy of another instance pack as an instance pack.\r\n    *\r\n    * @param toCopy - A pack to copy.\r\n    *\r\n    * @return An array pack that is a shallow copy of the given pack.\r\n    */\r\n    function copy(toCopy) {\r\n        const result = toCopy.allocate(toCopy.capacity);\r\n        result.copy(toCopy);\r\n        return result;\r\n    }\r\n    InstancePack.copy = copy;\r\n})(InstancePack_InstancePack || (InstancePack_InstancePack = {}));\r\n\n// CONCATENATED MODULE: ./src/pack/Pack.ts\n\r\n\r\n\r\n\r\n\r\nvar Pack_Pack;\r\n(function (Pack) {\r\n    /**\r\n    * Shallow copy the given instance and return it.\r\n    *\r\n    * @param toCopy - An instance to shallow copy.\r\n    *\r\n    * @return A new instance, shallow copy of the given one.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy == null ? null : toCopy.clone();\r\n    }\r\n    Pack.copy = copy;\r\n    /**\r\n    * Return the default value used by the given pack instance.\r\n    *\r\n    * @param pack - A pack instance.\r\n    *\r\n    * @return The default value used by the given pack instance.\r\n    */\r\n    function defaultValue(pack) {\r\n        return Object.getPrototypeOf(pack).constructor.DEFAULT_VALUE;\r\n    }\r\n    Pack.defaultValue = defaultValue;\r\n    /**\r\n    * Instantiate a new pack that wrap an array of the given type of instance.\r\n    *\r\n    * @param pack - Instance of the type of pack to instantiate.\r\n    * @param capacity - Capacity of the array to allocate.\r\n    *\r\n    * @return A new pack that wrap an array of the given type of instance.\r\n    */\r\n    function like(pack, capacity) {\r\n        return pack.allocate(capacity);\r\n    }\r\n    Pack.like = like;\r\n    /**\r\n    * Instantiate a new pack that wrap an array of the given type of instance.\r\n    *\r\n    * @param capacity - Capacity of the array to allocate.\r\n    *\r\n    * @return A new pack that wrap an array of the given type of instance.\r\n    */\r\n    function any(capacity) {\r\n        return ArrayPack_ArrayPack.allocate(capacity);\r\n    }\r\n    Pack.any = any;\r\n    /**\r\n    * Instantiate a new pack that wrap a unsigned byte buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a unsigned byte buffer of the given capacity.\r\n    */\r\n    function uint8(capacity) {\r\n        return new BufferPack_BufferPack(new Uint8Array(capacity));\r\n    }\r\n    Pack.uint8 = uint8;\r\n    /**\r\n    * Instantiate a new pack that wrap a unsigned short buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a unsigned short buffer of the given capacity.\r\n    */\r\n    function uint16(capacity) {\r\n        return new BufferPack_BufferPack(new Uint16Array(capacity));\r\n    }\r\n    Pack.uint16 = uint16;\r\n    /**\r\n    * Instantiate a new pack that wrap a unsigned integer buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a unsigned integer buffer of the given capacity.\r\n    */\r\n    function uint32(capacity) {\r\n        return new BufferPack_BufferPack(new Uint32Array(capacity));\r\n    }\r\n    Pack.uint32 = uint32;\r\n    /**\r\n    * Instantiate a new pack that wrap a byte buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a byte buffer of the given capacity.\r\n    */\r\n    function int8(capacity) {\r\n        return new BufferPack_BufferPack(new Int8Array(capacity));\r\n    }\r\n    Pack.int8 = int8;\r\n    /**\r\n    * Instantiate a new pack that wrap a short buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a short buffer of the given capacity.\r\n    */\r\n    function int16(capacity) {\r\n        return new BufferPack_BufferPack(new Int16Array(capacity));\r\n    }\r\n    Pack.int16 = int16;\r\n    /**\r\n    * Instantiate a new pack that wrap a integer buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a integer buffer of the given capacity.\r\n    */\r\n    function int32(capacity) {\r\n        return new BufferPack_BufferPack(new Int32Array(capacity));\r\n    }\r\n    Pack.int32 = int32;\r\n    /**\r\n    * Instantiate a new pack that wrap a float buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a float buffer of the given capacity.\r\n    */\r\n    function float32(capacity) {\r\n        return new BufferPack_BufferPack(new Float32Array(capacity));\r\n    }\r\n    Pack.float32 = float32;\r\n    /**\r\n    * Instantiate a new pack that wrap a double buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a double buffer of the given capacity.\r\n    */\r\n    function float64(capacity) {\r\n        return new BufferPack_BufferPack(new Float64Array(capacity));\r\n    }\r\n    Pack.float64 = float64;\r\n    /**\r\n    * Instantiate a new pack that wrap a unsigned integer buffer that can store\r\n    * values in range [0, maximum] and that is of the given capacity.\r\n    *\r\n    * @param maximum - Maximum value that can be stored.\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a unsigned integer buffer that can store values\r\n    *         in range [0, maximum] and that is of the given capacity.\r\n    */\r\n    function unsignedUpTo(maximum, capacity) {\r\n        return new BufferPack_BufferPack(UnsignedIntegerBuffer.upTo(maximum, capacity));\r\n    }\r\n    Pack.unsignedUpTo = unsignedUpTo;\r\n    /**\r\n    * Instantiate a new pack that wrap a signed integer buffer that can store\r\n    * values in range [-maximum, maximum] and that is of the given capacity.\r\n    *\r\n    * @param maximum - Maximum value that can be stored.\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a signed integer buffer that can store values\r\n    *         in range [-maximum, maximum] and that is of the given capacity.\r\n    */\r\n    function signedUpTo(maximum, capacity) {\r\n        return new BufferPack_BufferPack(IntegerBuffer.upTo(maximum, capacity));\r\n    }\r\n    Pack.signedUpTo = signedUpTo;\r\n    function instance(allocator, capacity) {\r\n        return new InstancePack_InstancePack(allocator, capacity);\r\n    }\r\n    Pack.instance = instance;\r\n})(Pack_Pack || (Pack_Pack = {}));\r\n\n// CONCATENATED MODULE: ./src/pack/index.ts\n\r\n\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/set/PackSet.ts\n\r\n\r\nclass PackSet_PackSet {\r\n    /**\r\n    * Create a new set collection based upon a pack instance.\r\n    *\r\n    * @param pack - An empty pack instance to wrap as a set.\r\n    */\r\n    constructor(elements) {\r\n        this._elements = elements;\r\n    }\r\n    /**\r\n    * @return Elementhis set underlying pack instance.\r\n    */\r\n    get elements() {\r\n        return this._elements;\r\n    }\r\n    /**\r\n    * Change the wrapped pack instance.\r\n    *\r\n    * @param elements - Elementhe new pack instance to wrap.\r\n    */\r\n    set elements(elements) {\r\n        this._elements = elements;\r\n    }\r\n    /**\r\n    * @see Collection.size\r\n    */\r\n    get size() {\r\n        return this._elements.size;\r\n    }\r\n    /**\r\n    * @see StaticCollection.capacity\r\n    */\r\n    get capacity() {\r\n        return this._elements.capacity;\r\n    }\r\n    /**\r\n    * @see Collection.has\r\n    */\r\n    has(element) {\r\n        return this._elements.has(element);\r\n    }\r\n    /**\r\n    * @see Sequence.indexOf\r\n    */\r\n    indexOf(element) {\r\n        return this._elements.indexOf(element);\r\n    }\r\n    /**\r\n    * @see Sequence.hasInSubsequence\r\n    */\r\n    hasInSubsequence(element, offset, size) {\r\n        return this._elements.hasInSubsequence(element, offset, size);\r\n    }\r\n    /**\r\n    * @see Sequence.indexOfInSubsequence\r\n    */\r\n    indexOfInSubsequence(element, offset, size) {\r\n        return this._elements.indexOfInSubsequence(element, offset, size);\r\n    }\r\n    /**\r\n    * @see Set.add\r\n    */\r\n    add(element) {\r\n        if (this._elements.indexOf(element) === -1) {\r\n            this._elements.push(element);\r\n        }\r\n    }\r\n    /**\r\n    * @see Set.delete\r\n    */\r\n    delete(element) {\r\n        const index = this._elements.indexOf(element);\r\n        if (index >= 0) {\r\n            this._elements.warp(index);\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.get\r\n    */\r\n    get(index) {\r\n        return this._elements.get(index);\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.reallocate\r\n    */\r\n    reallocate(capacity) {\r\n        this._elements.reallocate(capacity);\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.fit\r\n    */\r\n    fit() {\r\n        this._elements.fit();\r\n    }\r\n    /**\r\n    * @see Set.copy\r\n    */\r\n    copy(toCopy) {\r\n        this.clear();\r\n        for (const element of toCopy) {\r\n            this.add(element);\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.clone\r\n    */\r\n    clone() {\r\n        return new PackSet_PackSet(this._elements.clone());\r\n    }\r\n    /**\r\n    * @see Set.clear\r\n    */\r\n    clear() {\r\n        this._elements.clear();\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get first() {\r\n        return this._elements.first;\r\n    }\r\n    /**\r\n    * @see Sequence.firstIndex\r\n    */\r\n    get firstIndex() {\r\n        return this._elements.firstIndex;\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get last() {\r\n        return this._elements.last;\r\n    }\r\n    /**\r\n    * @see Sequence.lastIndex\r\n    */\r\n    get lastIndex() {\r\n        return this._elements.lastIndex;\r\n    }\r\n    /**\r\n    * @see Collection.view\r\n    */\r\n    view() {\r\n        return SequenceView_SequenceView.wrap(this);\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    iterator() {\r\n        return this._elements.iterator();\r\n    }\r\n    /**\r\n    * @see Set.iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        yield* this._elements;\r\n    }\r\n    /**\r\n    * @see Collection.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof PackSet_PackSet) {\r\n            if (other.size !== this._elements.size)\r\n                return false;\r\n            for (let index = 0, length = other.size; index < length; ++index) {\r\n                if (!this.has(other.get(index)))\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (PackSet) {\r\n    /**\r\n    * Return a copy of a given pack set.\r\n    *\r\n    * @param toCopy - A pack set to copy.\r\n    */\r\n    function copy(toCopy) {\r\n        return new PackSet(Pack_Pack.copy(toCopy.elements));\r\n    }\r\n    PackSet.copy = copy;\r\n    /**\r\n    * Instantiate a new set that wrap a pack of the given type of instance.\r\n    *\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a pack of the given type of instance.\r\n    */\r\n    function any(capacity) {\r\n        return new PackSet(Pack_Pack.any(capacity));\r\n    }\r\n    PackSet.any = any;\r\n    /**\r\n    * Instantiate a new set that wrap a unsigned byte pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a unsigned byte pack of the given capacity.\r\n    */\r\n    function uint8(capacity) {\r\n        return new PackSet(Pack_Pack.uint8(capacity));\r\n    }\r\n    PackSet.uint8 = uint8;\r\n    /**\r\n    * Instantiate a new set that wrap a unsigned short pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a unsigned short pack of the given capacity.\r\n    */\r\n    function uint16(capacity) {\r\n        return new PackSet(Pack_Pack.uint16(capacity));\r\n    }\r\n    PackSet.uint16 = uint16;\r\n    /**\r\n    * Instantiate a new set that wrap a unsigned integer pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a unsigned integer pack of the given capacity.\r\n    */\r\n    function uint32(capacity) {\r\n        return new PackSet(Pack_Pack.uint32(capacity));\r\n    }\r\n    PackSet.uint32 = uint32;\r\n    /**\r\n    * Instantiate a new set that wrap a byte pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a byte pack of the given capacity.\r\n    */\r\n    function int8(capacity) {\r\n        return new PackSet(Pack_Pack.int8(capacity));\r\n    }\r\n    PackSet.int8 = int8;\r\n    /**\r\n    * Instantiate a new set that wrap a short pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a short pack of the given capacity.\r\n    */\r\n    function int16(capacity) {\r\n        return new PackSet(Pack_Pack.int16(capacity));\r\n    }\r\n    PackSet.int16 = int16;\r\n    /**\r\n    * Instantiate a new set that wrap a integer pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a integer pack of the given capacity.\r\n    */\r\n    function int32(capacity) {\r\n        return new PackSet(Pack_Pack.int32(capacity));\r\n    }\r\n    PackSet.int32 = int32;\r\n    /**\r\n    * Instantiate a new set that wrap a float pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a float pack of the given capacity.\r\n    */\r\n    function float32(capacity) {\r\n        return new PackSet(Pack_Pack.float32(capacity));\r\n    }\r\n    PackSet.float32 = float32;\r\n    /**\r\n    * Instantiate a new set that wrap a double pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a double pack of the given capacity.\r\n    */\r\n    function float64(capacity) {\r\n        return new PackSet(Pack_Pack.float64(capacity));\r\n    }\r\n    PackSet.float64 = float64;\r\n    /**\r\n    * Instantiate a new set that wrap a unsigned integer pack that can store\r\n    * values in range [0, maximum] and that is of the given capacity.\r\n    *\r\n    * @param maximum - Maximum value that can be stored.\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a unsigned integer pack that can store values\r\n    *         in range [0, maximum] and that is of the given capacity.\r\n    */\r\n    function unsignedUpTo(maximum, capacity) {\r\n        return new PackSet(Pack_Pack.unsignedUpTo(maximum, capacity));\r\n    }\r\n    PackSet.unsignedUpTo = unsignedUpTo;\r\n    /**\r\n    * Instantiate a new set that wrap a signed integer pack that can store\r\n    * values in range [-maximum, maximum] and that is of the given capacity.\r\n    *\r\n    * @param maximum - Maximum value that can be stored.\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a signed integer pack that can store values\r\n    *         in range [-maximum, maximum] and that is of the given capacity.\r\n    */\r\n    function signedUpTo(maximum, capacity) {\r\n        return new PackSet(Pack_Pack.signedUpTo(maximum, capacity));\r\n    }\r\n    PackSet.signedUpTo = signedUpTo;\r\n})(PackSet_PackSet || (PackSet_PackSet = {}));\r\n\n// CONCATENATED MODULE: ./src/set/IdentifierSetIterator.ts\nclass IdentifierSetIterator {\r\n    /**\r\n    * Instantiate a new random access iterator instance.\r\n    */\r\n    constructor() {\r\n        this.identifierSet = null;\r\n        this.index = 0;\r\n    }\r\n    /**\r\n    * @see Iterator#collection\r\n    */\r\n    collection() {\r\n        return this.identifierSet;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.hasNext\r\n    */\r\n    hasNext() {\r\n        return this.identifierSet && this.index < this.identifierSet.size - 1;\r\n    }\r\n    /**\r\n    * @see BidirectionalIterator.go\r\n    */\r\n    go(index) {\r\n        this.index = index;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.next\r\n    */\r\n    next() {\r\n        this.index += 1;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.forward\r\n    */\r\n    forward(count) {\r\n        this.index += count;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.end\r\n    */\r\n    end() {\r\n        this.index = this.identifierSet ? this.identifierSet.lastIndex : 0;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.hasPrevious\r\n    */\r\n    hasPrevious() {\r\n        return this.identifierSet && this.index > 0;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.previous\r\n    */\r\n    previous() {\r\n        this.index -= 1;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.backward\r\n    */\r\n    backward(count) {\r\n        this.index -= count;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.start\r\n    */\r\n    start() {\r\n        this.index = 0;\r\n    }\r\n    /**\r\n    * @see Iterator.get\r\n    */\r\n    get() {\r\n        return this.identifierSet.get(this.index);\r\n    }\r\n    /**\r\n    * @see Iterator.move\r\n    */\r\n    move(iterator) {\r\n        if (iterator instanceof IdentifierSetIterator) {\r\n            this.identifierSet = iterator.identifierSet;\r\n            this.index = iterator.index;\r\n        }\r\n        else {\r\n            throw new Error('Trying to move to a location described by an unsupported type of ' +\r\n                'iterator');\r\n        }\r\n    }\r\n    /**\r\n    * Shallow-copy the given instance.\r\n    *\r\n    * @param toCopy - An instance to shallow copy.\r\n    */\r\n    copy(toCopy) {\r\n        this.identifierSet = toCopy.identifierSet;\r\n        this.index = toCopy.index;\r\n    }\r\n    /**\r\n    * @see Iterator.clone\r\n    */\r\n    clone() {\r\n        const copy = new IdentifierSetIterator();\r\n        copy.copy(this);\r\n        return copy;\r\n    }\r\n    /**\r\n    * @see Iterator.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof IdentifierSetIterator) {\r\n            return other.identifierSet === this.identifierSet &&\r\n                other.index === this.index;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (IdentifierSetIterator) {\r\n    /**\r\n    * Return a shallow copy of the given iterator.\r\n    *\r\n    * A shallow-copy *b* of an iterator *a* is an instance that follow both\r\n    * properties :\r\n    *  - b !== a\r\n    *  - b.equals(a)\r\n    *\r\n    * @param toCopy - An iterator to copy.\r\n    *\r\n    * @return A shallow copy of the given iterator.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy.clone();\r\n    }\r\n    IdentifierSetIterator.copy = copy;\r\n})(IdentifierSetIterator || (IdentifierSetIterator = {}));\r\n\n// CONCATENATED MODULE: ./src/set/IdentifierSet.ts\n\r\n\r\n\r\nclass IdentifierSet_IdentifierSet {\r\n    /**\r\n    * Create a new empty identifier set.\r\n    *\r\n    * @param capacity - Number of identifier to allocate.\r\n    */\r\n    constructor(capacity) {\r\n        this._sparse = UnsignedIntegerBuffer.upTo(capacity - 1, capacity);\r\n        this._dense = UnsignedIntegerBuffer.upTo(capacity - 1, capacity);\r\n        this._size = 0;\r\n        for (let index = 0; index < capacity; ++index) {\r\n            this._sparse[index] = index;\r\n            this._dense[index] = index;\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.size\r\n    */\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    /**\r\n    * @see StaticCollection.capacity\r\n    */\r\n    get capacity() {\r\n        return this._dense.length;\r\n    }\r\n    /**\r\n    * @see Collection.has\r\n    */\r\n    has(element) {\r\n        return this._sparse[element] < this._size;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOf\r\n    */\r\n    indexOf(element) {\r\n        const index = this._sparse[element];\r\n        return index < this._size ? index : -1;\r\n    }\r\n    /**\r\n    * @see Sequence.hasInSubsequence\r\n    */\r\n    hasInSubsequence(element, offset, size) {\r\n        const index = this.indexOf(element);\r\n        return index >= offset && index < offset + size;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOfInSubsequence\r\n    */\r\n    indexOfInSubsequence(element, offset, size) {\r\n        const index = this.indexOf(element);\r\n        return index >= offset && index < offset + size ? index : -1;\r\n    }\r\n    /**\r\n    * @see MutableSet.add\r\n    */\r\n    add(element) {\r\n        const index = this._sparse[element];\r\n        if (index >= this._size) {\r\n            const swap = this._dense[this._size];\r\n            this._sparse[swap] = index;\r\n            this._sparse[element] = this._size;\r\n            this._dense[this._size] = element;\r\n            this._dense[index] = swap;\r\n            this._size += 1;\r\n        }\r\n    }\r\n    next() {\r\n        this._size += 1;\r\n        return this._dense[this._size - 1];\r\n    }\r\n    /**\r\n    * @see MutableSet.delete\r\n    */\r\n    delete(element) {\r\n        const index = this._sparse[element];\r\n        if (index < this._size) {\r\n            this._size -= 1;\r\n            const last = this._dense[this._size];\r\n            this._dense[this._size] = element;\r\n            this._dense[index] = last;\r\n            this._sparse[element] = this._size;\r\n            this._sparse[last] = index;\r\n        }\r\n    }\r\n    /**\r\n    * @see Sequence.get\r\n    */\r\n    get(index) {\r\n        return this._dense[index];\r\n    }\r\n    /**\r\n    * @see StaticCollection.reallocate\r\n    */\r\n    reallocate(capacity) {\r\n        const oldDense = this._dense;\r\n        const oldSize = this._size;\r\n        this._dense = UnsignedIntegerBuffer.upTo(capacity - 1, capacity);\r\n        this._sparse = UnsignedIntegerBuffer.upTo(capacity - 1, capacity);\r\n        this._size = 0;\r\n        for (let index = 0; index < capacity; ++index) {\r\n            this._dense[index] = index;\r\n            this._sparse[index] = index;\r\n        }\r\n        for (let index = 0; index < oldSize; ++index) {\r\n            const element = oldDense[index];\r\n            if (element < capacity) {\r\n                const swap = this._dense[this._size];\r\n                this._sparse[swap] = index;\r\n                this._sparse[element] = this._size;\r\n                this._dense[this._size] = element;\r\n                this._dense[index] = swap;\r\n                this._size += 1;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n    * @see StaticCollection.fit\r\n    */\r\n    fit() {\r\n        const max = this.max();\r\n        this.reallocate(max);\r\n    }\r\n    /**\r\n    * Return the maximum element of this set.\r\n    *\r\n    * @return The maximum element of this set.\r\n    */\r\n    max() {\r\n        if (this._size <= 0)\r\n            return undefined;\r\n        let result = this._dense[0];\r\n        for (let index = 1, length = this._size; index < length; ++index) {\r\n            const cell = this._dense[index];\r\n            result = cell > result ? cell : result;\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n    * Return the minimum element of this set.\r\n    *\r\n    * @return The minimum element of this set.\r\n    */\r\n    min() {\r\n        if (this._size <= 0)\r\n            return undefined;\r\n        let result = this._dense[0];\r\n        for (let index = 1, length = this._size; index < length; ++index) {\r\n            const cell = this._dense[index];\r\n            result = cell < result ? cell : result;\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n    * @see MutableSet.clear\r\n    */\r\n    clear() {\r\n        this._size = 0;\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get first() {\r\n        return this._dense[0];\r\n    }\r\n    /**\r\n    * @see Sequence.firstIndex\r\n    */\r\n    get firstIndex() {\r\n        return 0;\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get last() {\r\n        return this._dense[this._size - 1];\r\n    }\r\n    /**\r\n    * @see Sequence.lastIndex\r\n    */\r\n    get lastIndex() {\r\n        return this._size - 1;\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    iterator() {\r\n        const iterator = new IdentifierSetIterator();\r\n        iterator.identifierSet = this;\r\n        iterator.index = 0;\r\n        return iterator;\r\n    }\r\n    /**\r\n    * @see Set.copy\r\n    */\r\n    copy(toCopy) {\r\n        this.clear();\r\n        for (const element of toCopy) {\r\n            this.add(element);\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.view\r\n    */\r\n    view() {\r\n        return SequenceView_SequenceView.wrap(this);\r\n    }\r\n    /**\r\n    * @see Collection.clone\r\n    */\r\n    clone() {\r\n        const result = IdentifierSet_IdentifierSet.allocate(this._dense.length);\r\n        result.copy(this);\r\n        return result;\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        for (let index = 0, length = this._size; index < length; ++index) {\r\n            yield this._dense[index];\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other.isSet) {\r\n            if (other.size !== this._size)\r\n                return false;\r\n            for (let index = 0, length = other.size; index < length; ++index) {\r\n                if (!this.has(other.get(index)))\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (IdentifierSet) {\r\n    function copy(toCopy) {\r\n        return toCopy == null ? null : toCopy.clone();\r\n    }\r\n    IdentifierSet.copy = copy;\r\n    function allocate(capacity) {\r\n        return new IdentifierSet(capacity);\r\n    }\r\n    IdentifierSet.allocate = allocate;\r\n})(IdentifierSet_IdentifierSet || (IdentifierSet_IdentifierSet = {}));\r\n\n// CONCATENATED MODULE: ./src/set/NativeSet.ts\n\r\nclass NativeSet_NativeSet {\r\n    /**\r\n    * Create a new native set collection based upon the given set instance.\r\n    *\r\n    * @param elements - A set instance to wrap.\r\n    */\r\n    constructor(elements) {\r\n        this._elements = elements;\r\n    }\r\n    /**\r\n    * @return This set underlying native instance.\r\n    */\r\n    get elements() {\r\n        return this._elements;\r\n    }\r\n    /**\r\n    * Change the wrapped set instance.\r\n    *\r\n    * @param elements - The new set instance to wrap.\r\n    */\r\n    set elements(elements) {\r\n        this._elements = elements;\r\n    }\r\n    /**\r\n    * @see Collection.size\r\n    */\r\n    get size() {\r\n        return this._elements.size;\r\n    }\r\n    /**\r\n    * @see Collection.has\r\n    */\r\n    has(element) {\r\n        return this._elements.has(element);\r\n    }\r\n    /**\r\n    * @see Set.add\r\n    */\r\n    add(element) {\r\n        this._elements.add(element);\r\n    }\r\n    /**\r\n    * @see Set.delete\r\n    */\r\n    delete(element) {\r\n        this._elements.delete(element);\r\n    }\r\n    /**\r\n    * @see Collection.get\r\n    */\r\n    get(index) {\r\n        if (index < 0) {\r\n            return undefined;\r\n        }\r\n        let cursor = 0;\r\n        for (const element of this._elements) {\r\n            if (cursor === index) {\r\n                return element;\r\n            }\r\n            else {\r\n                cursor += 1;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n    * @see Set.copy\r\n    */\r\n    copy(toCopy) {\r\n        this._elements.clear();\r\n        for (const element of toCopy) {\r\n            this._elements.add(element);\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.clone\r\n    */\r\n    clone() {\r\n        return new NativeSet_NativeSet(new Set(this._elements));\r\n    }\r\n    /**\r\n    * @see Set.clear\r\n    */\r\n    clear() {\r\n        this._elements.clear();\r\n    }\r\n    /**\r\n    * @see Collection.view\r\n    */\r\n    view() {\r\n        return View.wrap(this);\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    iterator() {\r\n        throw new Error('Native iterators are not supported yet.');\r\n    }\r\n    /**\r\n    * @see Set.iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        yield* this._elements;\r\n    }\r\n    /**\r\n    * @see Collection.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof NativeSet_NativeSet) {\r\n            if (other.size !== this._elements.size)\r\n                return false;\r\n            for (let index = 0, length = other.size; index < length; ++index) {\r\n                if (!this.has(other.get(index)))\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (NativeSet) {\r\n    /**\r\n    * Return a copy of a given native set.\r\n    *\r\n    * @param toCopy - A native set to copy.\r\n    */\r\n    function clone(toCopy) {\r\n        return toCopy == null ? toCopy : toCopy.clone();\r\n    }\r\n    NativeSet.clone = clone;\r\n    /**\r\n    * Instantiate a new set that wrap a set of the given type of instance.\r\n    *\r\n    * @return A new set that wrap a set of the given type of instance.\r\n    */\r\n    function any() {\r\n        return new NativeSet(new Set());\r\n    }\r\n    NativeSet.any = any;\r\n    /**\r\n    * Instantiate a new set that wrap a set of the given type of instance.\r\n    *\r\n    * @param set - The set to wrap.\r\n    *\r\n    * @return A new set that wrap a set of the given type of instance.\r\n    */\r\n    function wrap(set) {\r\n        return new NativeSet(set);\r\n    }\r\n    NativeSet.wrap = wrap;\r\n})(NativeSet_NativeSet || (NativeSet_NativeSet = {}));\r\n\n// CONCATENATED MODULE: ./src/set/Set.ts\n\r\n\r\n\r\nvar Set_Set;\r\n(function (Set) {\r\n    /**\r\n    * Return a shallow copy of the given set instance.\r\n    *\r\n    * @param toCopy - A set instance to shallow copy.\r\n    *\r\n    * @return A shallow copy of the given set instance.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy == null ? null : toCopy.clone();\r\n    }\r\n    Set.copy = copy;\r\n    /**\r\n    * Return a set that wrap an existing pack instance.\r\n    *\r\n    * @param pack - A pack instance to wrap into a set.\r\n    *\r\n    * @return A set that wrap the given pack instance.\r\n    */\r\n    function native() {\r\n        return NativeSet_NativeSet.any();\r\n    }\r\n    Set.native = native;\r\n    /**\r\n    * Return a set that wrap an existing pack instance.\r\n    *\r\n    * @param pack - A pack instance to wrap into a set.\r\n    *\r\n    * @return A set that wrap the given pack instance.\r\n    */\r\n    function fromPack(pack) {\r\n        return new PackSet_PackSet(pack);\r\n    }\r\n    Set.fromPack = fromPack;\r\n    function identifier(capacity) {\r\n        return new IdentifierSet_IdentifierSet(capacity);\r\n    }\r\n    Set.identifier = identifier;\r\n})(Set_Set || (Set_Set = {}));\r\n\n// CONCATENATED MODULE: ./src/set/PackSparseDenseSet.ts\n\r\n\r\nclass PackSparseDenseSet_PackSparseDenseSet {\r\n    /**\r\n    * Create a new empty sparse set based uppon the given pack.\r\n    *\r\n    * @param dense - An empty dense number pack.\r\n    */\r\n    constructor(dense) {\r\n        this._sparse = dense.clone();\r\n        this._dense = dense;\r\n    }\r\n    /**\r\n    * @see Collection.size\r\n    */\r\n    get size() {\r\n        return this._dense.size;\r\n    }\r\n    /**\r\n    * @see StaticCollection.capacity\r\n    */\r\n    get capacity() {\r\n        return this._dense.capacity;\r\n    }\r\n    /**\r\n    * @see Collection.has\r\n    */\r\n    has(element) {\r\n        const index = this._sparse.get(element);\r\n        return index < this._dense.size && this._dense.get(index) === element;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOf\r\n    */\r\n    indexOf(element) {\r\n        const index = this._sparse.get(element);\r\n        if (index < this._dense.size && this._dense.get(index) === element) {\r\n            return index;\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n    * @see Sequence.hasInSubsequence\r\n    */\r\n    hasInSubsequence(element, offset, size) {\r\n        const index = this.indexOf(element);\r\n        return index >= offset && index < offset + size;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOfInSubsequence\r\n    */\r\n    indexOfInSubsequence(element, offset, size) {\r\n        const index = this.indexOf(element);\r\n        return index >= offset && index < offset + size ? index : -1;\r\n    }\r\n    /**\r\n    * @see MutableSet.add\r\n    */\r\n    add(element) {\r\n        const index = this._sparse.get(element);\r\n        if (index >= this._dense.size || this._dense.get(index) !== element) {\r\n            this._sparse.set(element, this._dense.size);\r\n            this._dense.push(element);\r\n        }\r\n    }\r\n    /**\r\n    * @see MutableSet.delete\r\n    */\r\n    delete(element) {\r\n        const index = this._sparse.get(element);\r\n        if (index < this._dense.size && this._dense.get(index) === element) {\r\n            const last = this._dense.get(this._dense.size - 1);\r\n            this._dense.warp(index);\r\n            this._sparse.set(last, index);\r\n        }\r\n    }\r\n    /**\r\n    * @see Sequence.get\r\n    */\r\n    get(index) {\r\n        return this._dense.get(index);\r\n    }\r\n    /**\r\n    * @see MutableSet.copy\r\n    */\r\n    copy(toCopy) {\r\n        let max = 0;\r\n        for (let value of toCopy) {\r\n            max = Math.max(value, max);\r\n        }\r\n        if (max > this.capacity) {\r\n            this.reallocate(max + 1);\r\n        }\r\n        this.clear();\r\n        for (let value of toCopy) {\r\n            this.add(value);\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.clone\r\n    */\r\n    clone() {\r\n        const copy = new PackSparseDenseSet_PackSparseDenseSet(this._dense.clone());\r\n        copy._dense.copy(this._dense);\r\n        copy._sparse.copy(this._sparse);\r\n        return copy;\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.reallocate\r\n    */\r\n    reallocate(capacity) {\r\n        const oldDense = this._dense;\r\n        this._dense = this._dense.allocate(capacity);\r\n        this._sparse = this._sparse.allocate(capacity);\r\n        for (let index = 0, size = oldDense.size; index < size; ++index) {\r\n            if (oldDense.get(index) < capacity) {\r\n                this._sparse.set(oldDense.get(index), this._dense.size);\r\n                this._dense.push(oldDense.get(index));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.fit\r\n    */\r\n    fit() {\r\n        const max = this.max();\r\n        this._dense.reallocate(max + 1);\r\n        this._sparse.reallocate(max + 1);\r\n    }\r\n    /**\r\n    * Return the maximum element of this set.\r\n    *\r\n    * @return The maximum element of this set.\r\n    */\r\n    max() {\r\n        if (this._dense.size <= 0)\r\n            return undefined;\r\n        let result = this._dense.get(0);\r\n        for (let index = 1, length = this._dense.size; index < length; ++index) {\r\n            const cell = this._dense.get(index);\r\n            result = cell > result ? cell : result;\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n    * Return the minimum element of this set.\r\n    *\r\n    * @return The minimum element of this set.\r\n    */\r\n    min() {\r\n        if (this._dense.size <= 0)\r\n            return undefined;\r\n        let result = this._dense.get(0);\r\n        for (let index = 1, length = this._dense.size; index < length; ++index) {\r\n            const cell = this._dense.get(index);\r\n            result = cell < result ? cell : result;\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n    * @see MutableSet.clear\r\n    */\r\n    clear() {\r\n        this._dense.clear();\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get first() {\r\n        return this._dense.first;\r\n    }\r\n    /**\r\n    * @see Sequence.firstIndex\r\n    */\r\n    get firstIndex() {\r\n        return this._dense.firstIndex;\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get last() {\r\n        return this._dense.last;\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get lastIndex() {\r\n        return this._dense.lastIndex;\r\n    }\r\n    /**\r\n    * @see Collection.view\r\n    */\r\n    view() {\r\n        return SequenceView_SequenceView.wrap(this);\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    iterator() {\r\n        return this._dense.iterator();\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        for (let index = 0, length = this._dense.size; index < length; ++index) {\r\n            yield this._dense.get(index);\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof PackSparseDenseSet_PackSparseDenseSet) {\r\n            if (other.size !== this._dense.size)\r\n                return false;\r\n            for (let index = 0, length = other.size; index < length; ++index) {\r\n                if (!this.has(other.get(index)))\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (PackSparseDenseSet) {\r\n    /**\r\n    * Return a copy of a given sparse set.\r\n    *\r\n    * @param toCopy - A sparse set to copy.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy == null ? null : toCopy.clone();\r\n    }\r\n    PackSparseDenseSet.copy = copy;\r\n    /**\r\n    * Instantiate a uint32 sparse-dense set.\r\n    *\r\n    * @param capacity - Capacity of the sparse-dense set to instantiate.\r\n    *\r\n    * @return A new sparse-dense set of the given capacity.\r\n    */\r\n    function uint32(capacity) {\r\n        return new PackSparseDenseSet(Pack_Pack.uint32(capacity));\r\n    }\r\n    PackSparseDenseSet.uint32 = uint32;\r\n    /**\r\n    * Instantiate a uint16 sparse-dense set.\r\n    *\r\n    * @param capacity - Capacity of the sparse-dense set to instantiate.\r\n    *\r\n    * @return A new sparse-dense set of the given capacity.\r\n    */\r\n    function uint16(capacity) {\r\n        return new PackSparseDenseSet(Pack_Pack.uint16(capacity));\r\n    }\r\n    PackSparseDenseSet.uint16 = uint16;\r\n    /**\r\n    * Instantiate a uint8 sparse-dense set.\r\n    *\r\n    * @param capacity - Capacity of the sparse-dense set to instantiate.\r\n    *\r\n    * @return A new sparse-dense set of the given capacity.\r\n    */\r\n    function uint8(capacity) {\r\n        return new PackSparseDenseSet(Pack_Pack.uint8(capacity));\r\n    }\r\n    PackSparseDenseSet.uint8 = uint8;\r\n    /**\r\n    * Instantiate an array sparse-dense set.\r\n    *\r\n    * @param capacity - Capacity of the sparse-dense set to instantiate.\r\n    *\r\n    * @return A new sparse-dense set of the given capacity.\r\n    */\r\n    function any(capacity) {\r\n        return new PackSparseDenseSet(Pack_Pack.any(capacity));\r\n    }\r\n    PackSparseDenseSet.any = any;\r\n    /**\r\n    * Instantiate a sparse-dense set that can store numbers up to the given value.\r\n    *\r\n    * @param capacity - Maximum number to be able to store into the resulting sparse-dense set.\r\n    *\r\n    * @return A new sparse-dense set that can store numbers up to the given value.\r\n    */\r\n    function upTo(capacity) {\r\n        if (capacity <= 0xff) {\r\n            return new PackSparseDenseSet(Pack_Pack.uint8(capacity));\r\n        }\r\n        else if (capacity <= 0xffff) {\r\n            return new PackSparseDenseSet(Pack_Pack.uint16(capacity));\r\n        }\r\n        else {\r\n            return new PackSparseDenseSet(Pack_Pack.uint32(capacity));\r\n        }\r\n    }\r\n    PackSparseDenseSet.upTo = upTo;\r\n})(PackSparseDenseSet_PackSparseDenseSet || (PackSparseDenseSet_PackSparseDenseSet = {}));\r\n\n// CONCATENATED MODULE: ./src/set/SparseDenseSet.ts\n\r\nvar SparseDenseSet_SparseDenseSet;\r\n(function (SparseDenseSet) {\r\n    /**\r\n    * Copy an existing sparse-dense set instance.\r\n    *\r\n    * @param toCopy - An instance to copy.\r\n    *\r\n    * @return A copy of the given instance.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy == null ? null : toCopy.clone();\r\n    }\r\n    SparseDenseSet.copy = copy;\r\n    /**\r\n    * Instantiate a uint32 sparse-dense set.\r\n    *\r\n    * @param capacity - Capacity of the sparse-dense set to instantiate.\r\n    *\r\n    * @return A new sparse-dense set of the given capacity.\r\n    */\r\n    function uint32(capacity) {\r\n        return PackSparseDenseSet_PackSparseDenseSet.uint32(capacity);\r\n    }\r\n    SparseDenseSet.uint32 = uint32;\r\n    /**\r\n    * Instantiate a uint16 sparse-dense set.\r\n    *\r\n    * @param capacity - Capacity of the sparse-dense set to instantiate.\r\n    *\r\n    * @return A new sparse-dense set of the given capacity.\r\n    */\r\n    function uint16(capacity) {\r\n        return PackSparseDenseSet_PackSparseDenseSet.uint16(capacity);\r\n    }\r\n    SparseDenseSet.uint16 = uint16;\r\n    /**\r\n    * Instantiate a uint8 sparse-dense set.\r\n    *\r\n    * @param capacity - Capacity of the sparse-dense set to instantiate.\r\n    *\r\n    * @return A new sparse-dense set of the given capacity.\r\n    */\r\n    function uint8(capacity) {\r\n        return PackSparseDenseSet_PackSparseDenseSet.uint8(capacity);\r\n    }\r\n    SparseDenseSet.uint8 = uint8;\r\n    /**\r\n    * Instantiate an array sparse-dense set.\r\n    *\r\n    * @param capacity - Capacity of the sparse-dense set to instantiate.\r\n    *\r\n    * @return A new sparse-dense set of the given capacity.\r\n    */\r\n    function any(capacity) {\r\n        return PackSparseDenseSet_PackSparseDenseSet.any(capacity);\r\n    }\r\n    SparseDenseSet.any = any;\r\n    /**\r\n    * Instantiate a sparse-dense set that can store numbers up to the given value.\r\n    *\r\n    * @param capacity - Maximum number to be able to store into the resulting sparse-dense set.\r\n    *\r\n    * @return A new sparse-dense set that can store numbers up to the given value.\r\n    */\r\n    function upTo(capacity) {\r\n        return PackSparseDenseSet_PackSparseDenseSet.upTo(capacity);\r\n    }\r\n    SparseDenseSet.upTo = upTo;\r\n})(SparseDenseSet_SparseDenseSet || (SparseDenseSet_SparseDenseSet = {}));\r\n\n// CONCATENATED MODULE: ./src/set/index.ts\n\r\n\r\n\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/circular/CircularBufferIterator.ts\nclass CircularBufferIterator {\r\n    /**\r\n    * Instantiate a new random access iterator instance.\r\n    */\r\n    constructor() {\r\n        this.buffer = null;\r\n        this.index = 0;\r\n    }\r\n    /**\r\n    * @see Iterator.collection\r\n    */\r\n    collection() {\r\n        return this.buffer;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.hasNext\r\n    */\r\n    hasNext() {\r\n        return this.buffer && this.index < this.buffer.size;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.next\r\n    */\r\n    next() {\r\n        this.index += 1;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.forward\r\n    */\r\n    forward(count) {\r\n        this.index += count;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.end\r\n    */\r\n    end() {\r\n        this.index = this.buffer ? this.buffer.lastIndex : 0;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.hasPrevious\r\n    */\r\n    hasPrevious() {\r\n        return this.buffer && this.index > 0;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.previous\r\n    */\r\n    previous() {\r\n        this.index -= 1;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.backward\r\n    */\r\n    backward(count) {\r\n        this.index -= count;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.start\r\n    */\r\n    start() {\r\n        this.index = 0;\r\n    }\r\n    /**\r\n    * @see Iterator.get\r\n    */\r\n    get() {\r\n        return this.buffer.get(this.index);\r\n    }\r\n    /**\r\n    * @see Iterator.move\r\n    */\r\n    move(iterator) {\r\n        if (iterator instanceof CircularBufferIterator) {\r\n            this.buffer = iterator.buffer;\r\n            this.index = iterator.index;\r\n        }\r\n        else {\r\n            throw new Error('Trying to move to a location described by an unsupported type of ' +\r\n                'iterator');\r\n        }\r\n    }\r\n    /**\r\n    * @see BidirectionalIterator.go\r\n    */\r\n    go(index) {\r\n        this.index = index;\r\n    }\r\n    /**\r\n    * Shallow-copy the given instance.\r\n    *\r\n    * @param toCopy\r\n    */\r\n    copy(toCopy) {\r\n        this.buffer = toCopy.buffer;\r\n        this.index = toCopy.index;\r\n    }\r\n    /**\r\n    * @see Iterator.clone\r\n    */\r\n    clone() {\r\n        const copy = new CircularBufferIterator();\r\n        copy.copy(this);\r\n        return copy;\r\n    }\r\n    /**\r\n    * @see Iterator.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof CircularBufferIterator) {\r\n            return other.buffer === this.buffer &&\r\n                other.index === this.index;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (CircularBufferIterator) {\r\n    /**\r\n    * Return a shallow copy of the given iterator.\r\n    *\r\n    * A shallow-copy *b* of an iterator *a* is an instance that follow both\r\n    * properties :\r\n    *  - b !== a\r\n    *  - b.equals(a)\r\n    *\r\n    * @param toCopy - An iterator to copy.\r\n    *\r\n    * @return A shallow copy of the given iterator.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy.clone();\r\n    }\r\n    CircularBufferIterator.copy = copy;\r\n})(CircularBufferIterator || (CircularBufferIterator = {}));\r\n\n// CONCATENATED MODULE: ./src/circular/PackCircularBuffer.ts\n\r\n\r\n\r\n\r\nclass PackCircularBuffer_PackCircularBuffer {\r\n    /**\r\n    * Create a new circular buffer uppon an existing pack implementation.\r\n    *\r\n    * @param elements - A pack to use for storing this circular buffer elements.\r\n    * @param [offset = 0] - Number of element to skip from the start of the pack.\r\n    * @param [size = elements.size - offset] - Number of element to keep.\r\n    */\r\n    constructor(elements, offset = 0, size = elements.size - offset) {\r\n        this._elements = elements;\r\n        this._elements.size = elements.capacity;\r\n        this._start = offset;\r\n        this._size = size;\r\n    }\r\n    /**\r\n    * @see Collection.size\r\n    */\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    /**\r\n    * @see StaticCollection.capacity\r\n    */\r\n    get capacity() {\r\n        return this._elements.capacity;\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.reallocate\r\n    */\r\n    reallocate(capacity) {\r\n        const next = Pack_Pack.copy(this._elements);\r\n        next.reallocate(capacity);\r\n        const nextSize = Math.min(capacity, this._size);\r\n        for (let index = 0; index < capacity && index < this._size; ++index) {\r\n            next.set(nextSize - index - 1, this.get(this._size - index - 1));\r\n        }\r\n        this._elements = next;\r\n        this._size = nextSize;\r\n        this._start = 0;\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.fit\r\n    */\r\n    fit() {\r\n        this.reallocate(this._size);\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get first() {\r\n        return this._size > 0 ? this._elements.get(this._start) : undefined;\r\n    }\r\n    /**\r\n    * @see Sequence.firstIndex\r\n    */\r\n    get firstIndex() {\r\n        return 0;\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get last() {\r\n        return this._size > 0 ? this._elements.get((this._start + this._size) % this._elements.capacity) : undefined;\r\n    }\r\n    /**\r\n    * @see Sequence.lastIndex\r\n    */\r\n    get lastIndex() {\r\n        return Math.max(this._size - 1, 0);\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    iterator() {\r\n        const result = new CircularBufferIterator();\r\n        result.buffer = this;\r\n        result.index = 0;\r\n        return result;\r\n    }\r\n    /**\r\n    * @see Sequence.get\r\n    */\r\n    get(index) {\r\n        return this._elements.get((this._start + index) % this._elements.capacity);\r\n    }\r\n    /**\r\n    * @see MutableSequence.fill\r\n    */\r\n    fill(element) {\r\n        for (let index = 0, size = this._size; index < size; ++index) {\r\n            this.set(index, element);\r\n        }\r\n    }\r\n    /**\r\n    * @see MutableSequence.pop\r\n    */\r\n    pop() {\r\n        const last = this._size - 1;\r\n        const result = this.get(last);\r\n        this.delete(last);\r\n        return result;\r\n    }\r\n    /**\r\n    * @see MutableSequence.shift\r\n    */\r\n    shift() {\r\n        const result = this.get(0);\r\n        this.delete(0);\r\n        return result;\r\n    }\r\n    /**\r\n    * @see MutableSequence.swap\r\n    */\r\n    swap(first, second) {\r\n        const rfirst = (this._start + first) % this._elements.capacity;\r\n        const rsecond = (this._start + second) % this._elements.capacity;\r\n        this._elements.swap(rfirst, rsecond);\r\n    }\r\n    /**\r\n    * @see MutableSequence.set\r\n    */\r\n    set(index, value) {\r\n        if (index >= this._elements.capacity) {\r\n            const offset = Math.min(index - this._elements.capacity + 1, this._size);\r\n            this._start = (this._start + offset) % this._elements.capacity;\r\n            this._size -= offset;\r\n            index = this._elements.capacity - 1;\r\n        }\r\n        while (index >= this._size) {\r\n            this.push(this._elements.constructor.DEFAULElement_VALUE);\r\n        }\r\n        this._elements.set((this._start + index) % this._elements.capacity, value);\r\n    }\r\n    /**\r\n    * @see MutableSequence.insert\r\n    */\r\n    insert(index, value) {\r\n        if (index >= this._size) {\r\n            this.set(index, value);\r\n        }\r\n        else {\r\n            if (this._size == this._elements.capacity) {\r\n                this._start = (this._start + 1) % this._elements.capacity;\r\n                --index;\r\n            }\r\n            else {\r\n                this._size += 1;\r\n            }\r\n            for (let cursor = this._size - 1; cursor > index; --cursor) {\r\n                this.set(cursor, this.get(cursor - 1));\r\n            }\r\n            this.set(index, value);\r\n        }\r\n    }\r\n    /**\r\n    * @see MutableSequence.push\r\n    */\r\n    push(value) {\r\n        if (this._size < this._elements.capacity) {\r\n            this._elements.set((this._start + this._size) % this._elements.capacity, value);\r\n            this._size += 1;\r\n        }\r\n        else {\r\n            this._elements.set(this._start, value);\r\n            this._start = (this._start + 1) % this._elements.capacity;\r\n        }\r\n    }\r\n    /**\r\n    * @see MutableSequence.unshift\r\n    */\r\n    unshift(value) {\r\n        this._start -= 1;\r\n        if (this._start < 0) {\r\n            this._start += this._elements.capacity;\r\n        }\r\n        this._elements.set(this._start, value);\r\n        if (this._size < this._elements.capacity) {\r\n            this._size += 1;\r\n        }\r\n    }\r\n    /**\r\n    * @see MutableSequence.delete\r\n    */\r\n    delete(index) {\r\n        for (let toMove = index; toMove > 0; --toMove) {\r\n            this.set(toMove, this.get(toMove - 1));\r\n        }\r\n        this._start = (this._start + 1) % this._elements.capacity;\r\n        this._size -= 1;\r\n    }\r\n    /**\r\n    * @see MutableSequence.deleteMany\r\n    */\r\n    deleteMany(from, size) {\r\n        const end = from + size;\r\n        for (let cursor = 0; cursor < from; ++cursor) {\r\n            this.set(end - cursor - 1, this.get(from - cursor - 1));\r\n        }\r\n        this._start = (this._start + size) % this._elements.capacity;\r\n        this._size -= size;\r\n    }\r\n    /**\r\n    * @see MutableSequence.warp\r\n    */\r\n    warp(index) {\r\n        this.set(index, this.get(0));\r\n        this._start = (this._start + 1) % this._elements.capacity;\r\n        this._size -= 1;\r\n    }\r\n    /**\r\n    * @see Collection.has\r\n    */\r\n    has(element) {\r\n        return this.indexOf(element) >= 0;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOf\r\n    */\r\n    indexOf(element) {\r\n        for (let index = 0, length = this._size; index < length; ++index) {\r\n            if (equals(this._elements.get((this._start + index) % this._elements.capacity), element)) {\r\n                return index;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n    * @see Sequence.hasInSubsequence\r\n    */\r\n    hasInSubsequence(element, offset, size) {\r\n        return this.indexOfInSubsequence(element, offset, size) >= 0;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOfInSubsequence\r\n    */\r\n    indexOfInSubsequence(element, offset, size) {\r\n        for (let index = offset, length = offset + size; index < length; ++index) {\r\n            if (equals(this._elements.get((this._start + index) % this._elements.capacity), element)) {\r\n                return index;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n    * @see Sequence.concat\r\n    */\r\n    concat(toConcat) {\r\n        const firstIndex = toConcat.firstIndex;\r\n        const lastIndex = toConcat.lastIndex + 1;\r\n        for (let index = firstIndex; index < lastIndex; ++index) {\r\n            this.push(toConcat.get(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see Sequence.copy\r\n    */\r\n    copy(toCopy) {\r\n        if (toCopy.size > this.capacity) {\r\n            this.reallocate(toCopy.size);\r\n        }\r\n        this.clear();\r\n        for (let index = 0, length = toCopy.size; index < length; ++index) {\r\n            this.push(toCopy.get(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see CircularBuffer.clone\r\n    */\r\n    clone() {\r\n        return new PackCircularBuffer_PackCircularBuffer(this._elements.clone(), this._start, this._size);\r\n    }\r\n    /**\r\n    * @see Collection.view\r\n    */\r\n    view() {\r\n        return SequenceView_SequenceView.wrap(this);\r\n    }\r\n    /**\r\n    * @see CircularBuffer.clear\r\n    */\r\n    clear() {\r\n        this._start = 0;\r\n        this._size = 0;\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        for (let index = 0, length = this._size; index < length; ++index) {\r\n            yield this._elements.get((this._start + index) % this._elements.capacity);\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof PackCircularBuffer_PackCircularBuffer) {\r\n            if (other.size !== this._size)\r\n                return false;\r\n            for (let index = 0, size = this._size; index < size; ++index) {\r\n                if (!equals(other.get(index), this.get(index)))\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (PackCircularBuffer) {\r\n    /**\r\n    * Shallow copy an existing pack circular buffer instance.\r\n    *\r\n    * @param toCopy - An instance to shallow copy.\r\n    *\r\n    * @return A shallow copy of the given instance.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy == null ? null : toCopy.clone();\r\n    }\r\n    PackCircularBuffer.copy = copy;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a pack of the given type of instance.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new buffer that wrap a pack of the given type of instance.\r\n    */\r\n    function any(capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.any(capacity));\r\n    }\r\n    PackCircularBuffer.any = any;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a unsigned byte pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a unsigned byte pack of the given capacity.\r\n    */\r\n    function uint8(capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.uint8(capacity));\r\n    }\r\n    PackCircularBuffer.uint8 = uint8;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a unsigned short pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a unsigned short pack of the given capacity.\r\n    */\r\n    function uint16(capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.uint16(capacity));\r\n    }\r\n    PackCircularBuffer.uint16 = uint16;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a unsigned integer pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a unsigned integer pack of the given capacity.\r\n    */\r\n    function uint32(capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.uint32(capacity));\r\n    }\r\n    PackCircularBuffer.uint32 = uint32;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a byte pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a byte pack of the given capacity.\r\n    */\r\n    function int8(capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.int8(capacity));\r\n    }\r\n    PackCircularBuffer.int8 = int8;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a short pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a short pack of the given capacity.\r\n    */\r\n    function int16(capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.int16(capacity));\r\n    }\r\n    PackCircularBuffer.int16 = int16;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a integer pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a integer pack of the given capacity.\r\n    */\r\n    function int32(capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.int32(capacity));\r\n    }\r\n    PackCircularBuffer.int32 = int32;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a float pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a float pack of the given capacity.\r\n    */\r\n    function float32(capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.float32(capacity));\r\n    }\r\n    PackCircularBuffer.float32 = float32;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a double pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a double pack of the given capacity.\r\n    */\r\n    function float64(capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.float64(capacity));\r\n    }\r\n    PackCircularBuffer.float64 = float64;\r\n    /**\r\n    * Instantiate a new pack that wrap a unsigned integer pack that can store\r\n    * values in range [0, maximum] and that is of the given capacity.\r\n    *\r\n    * @param maximum - Maximum value that can be stored.\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new pack that wrap a unsigned integer pack that can store values\r\n    *         in range [0, maximum] and that is of the given capacity.\r\n    */\r\n    function unsignedUpTo(maximum, capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.unsignedUpTo(maximum, capacity));\r\n    }\r\n    PackCircularBuffer.unsignedUpTo = unsignedUpTo;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a signed integer pack that can store\r\n    * values in range [-maximum, maximum] and that is of the given capacity.\r\n    *\r\n    * @param maximum - Maximum value that can be stored.\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a signed integer pack that can store values\r\n    *         in range [-maximum, maximum] and that is of the given capacity.\r\n    */\r\n    function signedUpTo(maximum, capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.signedUpTo(maximum, capacity));\r\n    }\r\n    PackCircularBuffer.signedUpTo = signedUpTo;\r\n})(PackCircularBuffer_PackCircularBuffer || (PackCircularBuffer_PackCircularBuffer = {}));\r\n\n// CONCATENATED MODULE: ./src/circular/CircularBuffer.ts\n\r\n\r\nvar CircularBuffer_CircularBuffer;\r\n(function (CircularBuffer) {\r\n    /**\r\n    * Return a shallow copy the given circular buffer.\r\n    *\r\n    * @param buffer - An existing buffer instance to copy.\r\n    *\r\n    * @return A shallow copy the given circular buffer.\r\n    */\r\n    function copy(buffer) {\r\n        return buffer == null ? null : buffer.clone();\r\n    }\r\n    CircularBuffer.copy = copy;\r\n    /**\r\n    * Return a circular buffer that wraps the given pack.\r\n    *\r\n    * @param pack - An existing pack instance to wrap.\r\n    *\r\n    * @return A circular buffer that wraps the given pack.\r\n    */\r\n    function fromPack(pack) {\r\n        return new PackCircularBuffer_PackCircularBuffer(pack);\r\n    }\r\n    CircularBuffer.fromPack = fromPack;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a pack of the given type of instance.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new buffer that wrap a pack of the given type of instance.\r\n    */\r\n    function any(capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.any(capacity));\r\n    }\r\n    CircularBuffer.any = any;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a unsigned byte pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a unsigned byte pack of the given capacity.\r\n    */\r\n    function uint8(capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.uint8(capacity));\r\n    }\r\n    CircularBuffer.uint8 = uint8;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a unsigned short pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a unsigned short pack of the given capacity.\r\n    */\r\n    function uint16(capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.uint16(capacity));\r\n    }\r\n    CircularBuffer.uint16 = uint16;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a unsigned integer pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a unsigned integer pack of the given capacity.\r\n    */\r\n    function uint32(capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.uint32(capacity));\r\n    }\r\n    CircularBuffer.uint32 = uint32;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a byte pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a byte pack of the given capacity.\r\n    */\r\n    function int8(capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.int8(capacity));\r\n    }\r\n    CircularBuffer.int8 = int8;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a short pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a short pack of the given capacity.\r\n    */\r\n    function int16(capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.int16(capacity));\r\n    }\r\n    CircularBuffer.int16 = int16;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a integer pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a integer pack of the given capacity.\r\n    */\r\n    function int32(capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.int32(capacity));\r\n    }\r\n    CircularBuffer.int32 = int32;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a float pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a float pack of the given capacity.\r\n    */\r\n    function float32(capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.float32(capacity));\r\n    }\r\n    CircularBuffer.float32 = float32;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a double pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a double pack of the given capacity.\r\n    */\r\n    function float64(capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.float64(capacity));\r\n    }\r\n    CircularBuffer.float64 = float64;\r\n    /**\r\n    * Instantiate a new pack that wrap a unsigned integer pack that can store\r\n    * values in range [0, maximum] and that is of the given capacity.\r\n    *\r\n    * @param maximum - Maximum value that can be stored.\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new pack that wrap a unsigned integer pack that can store values\r\n    *         in range [0, maximum] and that is of the given capacity.\r\n    */\r\n    function unsignedUpTo(maximum, capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.unsignedUpTo(maximum, capacity));\r\n    }\r\n    CircularBuffer.unsignedUpTo = unsignedUpTo;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a signed integer pack that can store\r\n    * values in range [-maximum, maximum] and that is of the given capacity.\r\n    *\r\n    * @param maximum - Maximum value that can be stored.\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a signed integer pack that can store values\r\n    *         in range [-maximum, maximum] and that is of the given capacity.\r\n    */\r\n    function signedUpTo(maximum, capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.signedUpTo(maximum, capacity));\r\n    }\r\n    CircularBuffer.signedUpTo = signedUpTo;\r\n})(CircularBuffer_CircularBuffer || (CircularBuffer_CircularBuffer = {}));\r\n\n// CONCATENATED MODULE: ./src/circular/index.ts\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/heap/PackHeap.ts\n\r\n\r\n/**\r\n* A heap based uppon a pack collection.\r\n*/\r\nclass PackHeap_PackHeap {\r\n    /**\r\n    * Instantiate a new empty heap.\r\n    *\r\n    * @param elements - Pack to use for storing the heap.\r\n    * @param comparator - A comparator to use for sorting the heap.\r\n    */\r\n    constructor(elements, comparator) {\r\n        this._comparator = comparator;\r\n        this._elements = elements;\r\n    }\r\n    /**\r\n    * @see Heap#next\r\n    */\r\n    next() {\r\n        const result = this._elements.get(0);\r\n        this.delete(0);\r\n        return result;\r\n    }\r\n    /**\r\n    * @see Heap#add\r\n    */\r\n    push(value) {\r\n        this._elements.push(value);\r\n        this.upliftAsPossible(this._elements.size - 1);\r\n    }\r\n    /**\r\n    * Moves the value at the given index up to the root of the tree while the\r\n    * value violate the order of the heap.\r\n    *\r\n    * @param index - Index of the value to move up.\r\n    *\r\n    * @return The new index of the given value.\r\n    */\r\n    upliftAsPossible(index) {\r\n        let cell = index;\r\n        let parent = (cell - 1) >> 1;\r\n        while (cell > 0 && this.compare(cell, parent) > 0) {\r\n            this._elements.swap(cell, parent);\r\n            cell = parent;\r\n            parent = (cell - 1) >> 1;\r\n        }\r\n        return cell;\r\n    }\r\n    /**\r\n    * Moves the value at the given index down to the leafs of the tree while the\r\n    * value violate the order of the heap.\r\n    *\r\n    * @param index - Index of the value to move down.\r\n    *\r\n    * @return The new index of the given value.\r\n    */\r\n    diveAsPossible(index) {\r\n        const size = this._elements.size;\r\n        let cell = index;\r\n        let next = (cell << 1) + 1;\r\n        while (next < size) {\r\n            if (next + 1 < size && this.compare(cell, next + 1) < 0) {\r\n                if (this.compare(next, next + 1) < 0) {\r\n                    this._elements.swap(cell, next + 1);\r\n                    cell = next + 1;\r\n                }\r\n                else {\r\n                    this._elements.swap(cell, next);\r\n                    cell = next;\r\n                }\r\n            }\r\n            else if (this.compare(cell, next) < 0) {\r\n                this._elements.swap(cell, next);\r\n                cell = next;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            next = (cell << 1) + 1;\r\n        }\r\n        return cell;\r\n    }\r\n    /**\r\n    * @see Heap#delete\r\n    */\r\n    delete(index) {\r\n        const size = this._elements.size;\r\n        this._elements.warp(index);\r\n        if (index < size) {\r\n            this.diveAsPossible(this.upliftAsPossible(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see Heap#compare\r\n    */\r\n    compare(left, right) {\r\n        return this._comparator(this._elements.get(left), this._elements.get(right));\r\n    }\r\n    /**\r\n    * @see Sequence#get\r\n    */\r\n    get(index) {\r\n        return this._elements.get(index);\r\n    }\r\n    /**\r\n    * @see Sequence#indexOf\r\n    */\r\n    indexOf(value) {\r\n        return this._elements.indexOf(value);\r\n    }\r\n    /**\r\n    * @see Sequence.hasInSubsequence\r\n    */\r\n    hasInSubsequence(element, offset, size) {\r\n        return this._elements.hasInSubsequence(element, offset, size);\r\n    }\r\n    /**\r\n    * @see Sequence.indexOfInSubsequence\r\n    */\r\n    indexOfInSubsequence(element, offset, size) {\r\n        return this._elements.indexOfInSubsequence(element, offset, size);\r\n    }\r\n    /**\r\n    * @see Collection#has\r\n    */\r\n    has(value) {\r\n        return this._elements.has(value);\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get first() {\r\n        return this._elements.first;\r\n    }\r\n    /**\r\n    * @see Sequence.firstIndex\r\n    */\r\n    get firstIndex() {\r\n        return this._elements.firstIndex;\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get last() {\r\n        return this._elements.last;\r\n    }\r\n    /**\r\n    * @see Sequence.lastIndex\r\n    */\r\n    get lastIndex() {\r\n        return this._elements.lastIndex;\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    iterator() {\r\n        return this._elements.iterator();\r\n    }\r\n    /**\r\n    * @see Collection#get size\r\n    */\r\n    get size() {\r\n        return this._elements.size;\r\n    }\r\n    /**\r\n    * @see Heap#get comparator\r\n    */\r\n    get comparator() {\r\n        return this._comparator;\r\n    }\r\n    /**\r\n    * @see StaticCollection#get capacity\r\n    */\r\n    get capacity() {\r\n        return this._elements.capacity;\r\n    }\r\n    /**\r\n    * @see ReallocableCollection#reallocate\r\n    */\r\n    reallocate(capacity) {\r\n        this._elements.reallocate(capacity);\r\n    }\r\n    /**\r\n    * @see ReallocableCollection#fit\r\n    */\r\n    fit() {\r\n        this._elements.fit();\r\n    }\r\n    /**\r\n    * @see Heap#clear\r\n    */\r\n    clear() {\r\n        this._elements.clear();\r\n    }\r\n    /**\r\n    * @see Collection#clone\r\n    */\r\n    clone() {\r\n        return new PackHeap_PackHeap(Pack_Pack.copy(this._elements), this._comparator);\r\n    }\r\n    /**\r\n    * @see Collection.view\r\n    */\r\n    view() {\r\n        return SequenceView_SequenceView.wrap(this);\r\n    }\r\n    /**\r\n    * @see Collection#equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof PackHeap_PackHeap) {\r\n            if (this.size !== other.size)\r\n                return false;\r\n            for (let index = 0, size = this.size; index < size; ++index) {\r\n                if (this.get(index) !== other.get(index)) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n    * @see ReallocableCollection#iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        yield* this._elements;\r\n    }\r\n}\r\n(function (PackHeap) {\r\n    function defaultNumberComparator(a, b) {\r\n        return a - b;\r\n    }\r\n    /**\r\n    * Copy an existing heap instance.\r\n    *\r\n    * @param toCopy - An heap instance to copy.\r\n    *\r\n    * @return A copy of the given heap instance.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy == null ? null : toCopy.clone();\r\n    }\r\n    PackHeap.copy = copy;\r\n    function any(capacity, comparator) {\r\n        return new PackHeap(Pack_Pack.any(capacity), comparator);\r\n    }\r\n    PackHeap.any = any;\r\n    function uint8(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap(Pack_Pack.uint8(capacity), comparator);\r\n    }\r\n    PackHeap.uint8 = uint8;\r\n    function uint16(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap(Pack_Pack.uint16(capacity), comparator);\r\n    }\r\n    PackHeap.uint16 = uint16;\r\n    function uint32(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap(Pack_Pack.uint32(capacity), comparator);\r\n    }\r\n    PackHeap.uint32 = uint32;\r\n    function int8(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap(Pack_Pack.int8(capacity), comparator);\r\n    }\r\n    PackHeap.int8 = int8;\r\n    function int16(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap(Pack_Pack.int16(capacity), comparator);\r\n    }\r\n    PackHeap.int16 = int16;\r\n    function int32(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap(Pack_Pack.int32(capacity), comparator);\r\n    }\r\n    PackHeap.int32 = int32;\r\n    function float32(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap(Pack_Pack.float32(capacity), comparator);\r\n    }\r\n    PackHeap.float32 = float32;\r\n    function float64(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap(Pack_Pack.float64(capacity), comparator);\r\n    }\r\n    PackHeap.float64 = float64;\r\n    function fromPack(pack, comparator) {\r\n        return new PackHeap(pack, comparator);\r\n    }\r\n    PackHeap.fromPack = fromPack;\r\n})(PackHeap_PackHeap || (PackHeap_PackHeap = {}));\r\n\n// CONCATENATED MODULE: ./src/heap/Heap.ts\n\r\n\r\nvar Heap_Heap;\r\n(function (Heap) {\r\n    function defaultNumberComparator(a, b) {\r\n        return a - b;\r\n    }\r\n    function copy(pack) {\r\n        return pack == null ? null : pack.clone();\r\n    }\r\n    Heap.copy = copy;\r\n    function any(capacity, comparator) {\r\n        return new PackHeap_PackHeap(Pack_Pack.any(capacity), comparator);\r\n    }\r\n    Heap.any = any;\r\n    function uint8(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap_PackHeap(Pack_Pack.uint8(capacity), comparator);\r\n    }\r\n    Heap.uint8 = uint8;\r\n    function uint16(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap_PackHeap(Pack_Pack.uint16(capacity), comparator);\r\n    }\r\n    Heap.uint16 = uint16;\r\n    function uint32(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap_PackHeap(Pack_Pack.uint32(capacity), comparator);\r\n    }\r\n    Heap.uint32 = uint32;\r\n    function int8(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap_PackHeap(Pack_Pack.int8(capacity), comparator);\r\n    }\r\n    Heap.int8 = int8;\r\n    function int16(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap_PackHeap(Pack_Pack.int16(capacity), comparator);\r\n    }\r\n    Heap.int16 = int16;\r\n    function int32(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap_PackHeap(Pack_Pack.int32(capacity), comparator);\r\n    }\r\n    Heap.int32 = int32;\r\n    function float32(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap_PackHeap(Pack_Pack.float32(capacity), comparator);\r\n    }\r\n    Heap.float32 = float32;\r\n    function float64(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap_PackHeap(Pack_Pack.float64(capacity), comparator);\r\n    }\r\n    Heap.float64 = float64;\r\n    function fromPack(pack, comparator) {\r\n        return new PackHeap_PackHeap(pack, comparator);\r\n    }\r\n    Heap.fromPack = fromPack;\r\n})(Heap_Heap || (Heap_Heap = {}));\r\n\n// CONCATENATED MODULE: ./src/heap/index.ts\n\r\n\r\n\n// CONCATENATED MODULE: ./src/native/index.ts\n\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/view/index.ts\n\r\n\r\n\n// CONCATENATED MODULE: ./src/index.ts\n/* concated harmony reexport Collection */__webpack_require__.d(__webpack_exports__, \"Collection\", function() { return Collection_Collection; });\n/* concated harmony reexport Sequence */__webpack_require__.d(__webpack_exports__, \"Sequence\", function() { return Sequence_Sequence; });\n/* concated harmony reexport SequenceIterator */__webpack_require__.d(__webpack_exports__, \"SequenceIterator\", function() { return SequenceIterator; });\n/* concated harmony reexport bissect */__webpack_require__.d(__webpack_exports__, \"bissect\", function() { return bissect; });\n/* concated harmony reexport equals */__webpack_require__.d(__webpack_exports__, \"equals\", function() { return equals; });\n/* concated harmony reexport quicksort */__webpack_require__.d(__webpack_exports__, \"quicksort\", function() { return quicksort; });\n/* concated harmony reexport Pack */__webpack_require__.d(__webpack_exports__, \"Pack\", function() { return Pack_Pack; });\n/* concated harmony reexport ArrayPack */__webpack_require__.d(__webpack_exports__, \"ArrayPack\", function() { return ArrayPack_ArrayPack; });\n/* concated harmony reexport BufferPack */__webpack_require__.d(__webpack_exports__, \"BufferPack\", function() { return BufferPack_BufferPack; });\n/* concated harmony reexport InstancePack */__webpack_require__.d(__webpack_exports__, \"InstancePack\", function() { return InstancePack_InstancePack; });\n/* concated harmony reexport PackIterator */__webpack_require__.d(__webpack_exports__, \"PackIterator\", function() { return PackIterator; });\n/* concated harmony reexport Set */__webpack_require__.d(__webpack_exports__, \"Set\", function() { return Set_Set; });\n/* concated harmony reexport PackSet */__webpack_require__.d(__webpack_exports__, \"PackSet\", function() { return PackSet_PackSet; });\n/* concated harmony reexport SparseDenseSet */__webpack_require__.d(__webpack_exports__, \"SparseDenseSet\", function() { return SparseDenseSet_SparseDenseSet; });\n/* concated harmony reexport PackSparseDenseSet */__webpack_require__.d(__webpack_exports__, \"PackSparseDenseSet\", function() { return PackSparseDenseSet_PackSparseDenseSet; });\n/* concated harmony reexport IdentifierSet */__webpack_require__.d(__webpack_exports__, \"IdentifierSet\", function() { return IdentifierSet_IdentifierSet; });\n/* concated harmony reexport NativeSet */__webpack_require__.d(__webpack_exports__, \"NativeSet\", function() { return NativeSet_NativeSet; });\n/* concated harmony reexport CircularBuffer */__webpack_require__.d(__webpack_exports__, \"CircularBuffer\", function() { return CircularBuffer_CircularBuffer; });\n/* concated harmony reexport PackCircularBuffer */__webpack_require__.d(__webpack_exports__, \"PackCircularBuffer\", function() { return PackCircularBuffer_PackCircularBuffer; });\n/* concated harmony reexport CircularBufferIterator */__webpack_require__.d(__webpack_exports__, \"CircularBufferIterator\", function() { return CircularBufferIterator; });\n/* concated harmony reexport Heap */__webpack_require__.d(__webpack_exports__, \"Heap\", function() { return Heap_Heap; });\n/* concated harmony reexport PackHeap */__webpack_require__.d(__webpack_exports__, \"PackHeap\", function() { return PackHeap_PackHeap; });\n/* concated harmony reexport Buffer */__webpack_require__.d(__webpack_exports__, \"Buffer\", function() { return Buffer_Buffer; });\n/* concated harmony reexport FloatBuffer */__webpack_require__.d(__webpack_exports__, \"FloatBuffer\", function() { return FloatBuffer; });\n/* concated harmony reexport IntegerBuffer */__webpack_require__.d(__webpack_exports__, \"IntegerBuffer\", function() { return IntegerBuffer; });\n/* concated harmony reexport UnsignedIntegerBuffer */__webpack_require__.d(__webpack_exports__, \"UnsignedIntegerBuffer\", function() { return UnsignedIntegerBuffer; });\n/* concated harmony reexport View */__webpack_require__.d(__webpack_exports__, \"View\", function() { return View; });\n/* concated harmony reexport SequenceView */__webpack_require__.d(__webpack_exports__, \"SequenceView\", function() { return SequenceView_SequenceView; });\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n/***/ })\n/******/ ]);\n});","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.15';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // with lookup (in case of e.g. prototype pollution), and strip newlines if any.\n      // A newline wouldn't be a valid sourceURL anyway, and it'd enable code injection.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/[\\r\\n]/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      // Like with sourceURL, we take care to not check the option's prototype,\n      // as this configuration is a code injection vector.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","\n    (window.__NEXT_P=window.__NEXT_P||[]).push([\"/\", function() {\n      var mod = require(\"D:\\\\development\\\\rpg\\\\ruleset-next\\\\pages\\\\index.tsx\")\n      if(module.hot) {\n        module.hot.accept(\"D:\\\\development\\\\rpg\\\\ruleset-next\\\\pages\\\\index.tsx\", function() {\n          if(!next.router.components[\"/\"]) return\n          var updatedPage = require(\"D:\\\\development\\\\rpg\\\\ruleset-next\\\\pages\\\\index.tsx\")\n          next.router.update(\"/\", updatedPage)\n        })\n      }\n      return mod\n    }]);\n  ","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __importStar(require(\"react\"));\nexports.AmpStateContext = React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n    exports.AmpStateContext.displayName = 'AmpStateContext';\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst amp_context_1 = require(\"./amp-context\");\nfunction isInAmpMode({ ampFirst = false, hybrid = false, hasQuery = false, } = {}) {\n    return ampFirst || (hybrid && hasQuery);\n}\nexports.isInAmpMode = isInAmpMode;\nfunction useAmp() {\n    // Don't assign the context value to a variable to save bytes\n    return isInAmpMode(react_1.default.useContext(amp_context_1.AmpStateContext));\n}\nexports.useAmp = useAmp;\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __importStar(require(\"react\"));\nexports.HeadManagerContext = React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n    exports.HeadManagerContext.displayName = 'HeadManagerContext';\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst side_effect_1 = __importDefault(require(\"./side-effect\"));\nconst amp_context_1 = require(\"./amp-context\");\nconst head_manager_context_1 = require(\"./head-manager-context\");\nconst amp_1 = require(\"./amp\");\nfunction defaultHead(inAmpMode = false) {\n    const head = [react_1.default.createElement(\"meta\", { charSet: \"utf-8\" })];\n    if (!inAmpMode) {\n        head.push(react_1.default.createElement(\"meta\", { name: \"viewport\", content: \"width=device-width\" }));\n    }\n    return head;\n}\nexports.defaultHead = defaultHead;\nfunction onlyReactElement(list, child) {\n    // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n    if (typeof child === 'string' || typeof child === 'number') {\n        return list;\n    }\n    // Adds support for React.Fragment\n    if (child.type === react_1.default.Fragment) {\n        return list.concat(react_1.default.Children.toArray(child.props.children).reduce((fragmentList, fragmentChild) => {\n            if (typeof fragmentChild === 'string' ||\n                typeof fragmentChild === 'number') {\n                return fragmentList;\n            }\n            return fragmentList.concat(fragmentChild);\n        }, []));\n    }\n    return list.concat(child);\n}\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp'];\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n    const keys = new Set();\n    const tags = new Set();\n    const metaTypes = new Set();\n    const metaCategories = {};\n    return (h) => {\n        let unique = true;\n        if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n            const key = h.key.slice(h.key.indexOf('$') + 1);\n            if (keys.has(key)) {\n                unique = false;\n            }\n            else {\n                keys.add(key);\n            }\n        }\n        // eslint-disable-next-line default-case\n        switch (h.type) {\n            case 'title':\n            case 'base':\n                if (tags.has(h.type)) {\n                    unique = false;\n                }\n                else {\n                    tags.add(h.type);\n                }\n                break;\n            case 'meta':\n                for (let i = 0, len = METATYPES.length; i < len; i++) {\n                    const metatype = METATYPES[i];\n                    if (!h.props.hasOwnProperty(metatype))\n                        continue;\n                    if (metatype === 'charSet') {\n                        if (metaTypes.has(metatype)) {\n                            unique = false;\n                        }\n                        else {\n                            metaTypes.add(metatype);\n                        }\n                    }\n                    else {\n                        const category = h.props[metatype];\n                        const categories = metaCategories[metatype] || new Set();\n                        if (categories.has(category)) {\n                            unique = false;\n                        }\n                        else {\n                            categories.add(category);\n                            metaCategories[metatype] = categories;\n                        }\n                    }\n                }\n                break;\n        }\n        return unique;\n    };\n}\n/**\n *\n * @param headElements List of multiple <Head> instances\n */\nfunction reduceComponents(headElements, props) {\n    return headElements\n        .reduce((list, headElement) => {\n        const headElementChildren = react_1.default.Children.toArray(headElement.props.children);\n        return list.concat(headElementChildren);\n    }, [])\n        .reduce(onlyReactElement, [])\n        .reverse()\n        .concat(defaultHead(props.inAmpMode))\n        .filter(unique())\n        .reverse()\n        .map((c, i) => {\n        const key = c.key || i;\n        return react_1.default.cloneElement(c, { key });\n    });\n}\nconst Effect = side_effect_1.default();\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }) {\n    return (react_1.default.createElement(amp_context_1.AmpStateContext.Consumer, null, ampState => (react_1.default.createElement(head_manager_context_1.HeadManagerContext.Consumer, null, updateHead => (react_1.default.createElement(Effect, { reduceComponentsToState: reduceComponents, handleStateChange: updateHead, inAmpMode: amp_1.isInAmpMode(ampState) }, children))))));\n}\nHead.rewind = Effect.rewind;\nexports.default = Head;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = require(\"react\");\nconst isServer = typeof window === 'undefined';\nexports.default = () => {\n    const mountedInstances = new Set();\n    let state;\n    function emitChange(component) {\n        state = component.props.reduceComponentsToState([...mountedInstances], component.props);\n        if (component.props.handleStateChange) {\n            component.props.handleStateChange(state);\n        }\n    }\n    return class extends react_1.Component {\n        // Used when server rendering\n        static rewind() {\n            const recordedState = state;\n            state = undefined;\n            mountedInstances.clear();\n            return recordedState;\n        }\n        constructor(props) {\n            super(props);\n            if (isServer) {\n                mountedInstances.add(this);\n                emitChange(this);\n            }\n        }\n        componentDidMount() {\n            mountedInstances.add(this);\n            emitChange(this);\n        }\n        componentDidUpdate() {\n            emitChange(this);\n        }\n        componentWillUnmount() {\n            mountedInstances.delete(this);\n            emitChange(this);\n        }\n        render() {\n            return null;\n        }\n    };\n};\n","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","module.exports = (__webpack_require__(/*! dll-reference dll_2adc2403d89adc16ead0 */ \"dll-reference dll_2adc2403d89adc16ead0\"))(\"./node_modules/react/index.js\");","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import React from 'react'\nimport { ReactElement } from 'react'\n\nimport Head from 'next/head'\n\nimport { Document } from '../components/Document'\nimport { Content } from '../content/Content'\n\nexport default function index (props : any) : ReactElement {\n  return (\n    <div className='application' id='application'>\n      <Head>\n        <title>Corvus</title>\n        <meta name='viewport' content='initial-scale=1.0, width=device-width' />\n      </Head>\n\n      <div className='application-content'>\n        <Document>\n          <div className='container'>\n            <div className='row'>\n              <div className='col'>\n                <Content />\n              </div>\n            </div>\n          </div>\n        </Document>\n      </div>\n    </div>\n  )\n}\n","import { EqualityPolicy } from './EqualityPolicy'\r\nimport { ClonePolicy } from './ClonePolicy'\r\n\r\nexport namespace Arrays {\r\n  export function copy <T> (origin : T[], target : T[], copy : ClonePolicy<T> = ClonePolicy.identity) : void {\r\n    target.length = 0\r\n\r\n    for (const element of origin) {\r\n      target.push(copy(element))\r\n    }\r\n  }\r\n\r\n  export function equals <T> (left : T[], right : T[], equality : EqualityPolicy<T> = EqualityPolicy.strict) : boolean {\r\n    if (left == null) return left === right\r\n    if (right == null) return false\r\n    if (left === right) return true\r\n\r\n    if (left.length === right.length) {\r\n      for (let index = 0, size = left.length; index < size; ++index) {\r\n        if (!equality(left[index], right[index])) {\r\n          return false\r\n        }\r\n      }\r\n\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }\r\n}\r\n","export type ClonePolicy<T> = (value : T) => T\r\n\r\nexport namespace ClonePolicy {\r\n  export function identity <T> (value : T) : T {\r\n    return value\r\n  }\r\n}\r\n","export type EqualityPolicy<T> = (left : T, right : T) => boolean\r\n\r\nexport namespace EqualityPolicy {\r\n  export function strict <T> (left : T, right : T) : boolean {\r\n    return left === right\r\n  }\r\n\r\n  export function loose <T> (left : T, right : T) : boolean {\r\n    return left == right\r\n  }\r\n\r\n  export function deep <T> (left : T, right : T) : boolean {\r\n    if (left == null || typeof left !== 'object') {\r\n      return left === right\r\n    }\r\n\r\n    return (left as any).equals(right)\r\n  }\r\n}\r\n","import { ClonePolicy } from './ClonePolicy'\r\n\r\nexport namespace Sets {\r\n  export function equals <T> (left : Set<T>, right : Set<T>) : boolean {\r\n    if (left == null) return left === right\r\n    if (right == null) return false\r\n    if (left === right) return true\r\n\r\n    if (left.size === right.size) {\r\n      for (const element of left) {\r\n        if (!right.has(element)) {\r\n          return false\r\n        }\r\n      }\r\n\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  export function copy <T> (origin : Set<T>, target : Set<T>, copy : ClonePolicy<T> = ClonePolicy.identity) : void {\r\n    target.clear()\r\n\r\n    for (const element of origin) {\r\n      target.add(copy(element))\r\n    }\r\n  }\r\n}\r\n","import { ReactNode } from 'react'\r\n\r\nimport { Arrays } from '../Arrays'\r\nimport { Sets } from '../Sets'\r\n\r\nimport { AlchemicTransformationEntry } from './AlchemicTransformationEntry'\r\nimport { AlchemicProperty } from './AlchemicProperty'\r\nimport { AlchemicMaterialBuilder } from './AlchemicMaterialBuilder'\r\n\r\nexport type AlchemicMaterial = {\r\n  identifier: string,\r\n  name: string,\r\n  keywords: Set<string>,\r\n  description: ReactNode,\r\n  properties: ReactNode[],\r\n  transformations: AlchemicTransformationEntry[]\r\n}\r\n\r\nexport namespace AlchemicMaterial {\r\n  export function equals (left : AlchemicMaterial, right : AlchemicMaterial) : boolean {\r\n    if (left == null) return left === right\r\n    if (right == null) return false\r\n    if (left === right) return true\r\n\r\n    return left.name === right.name &&\r\n           left.identifier === right.identifier &&\r\n           left.description === right.description &&\r\n           Arrays.equals(left.properties, right.properties, AlchemicProperty.equals) &&\r\n           Arrays.equals(left.transformations, right.transformations, AlchemicTransformationEntry.equals) &&\r\n           Sets.equals(left.keywords, right.keywords)\r\n  }\r\n\r\n  export function builder () : AlchemicMaterialBuilder {\r\n    return AlchemicMaterialBuilder.builder()\r\n  }\r\n}\r\n","import { ReactNode } from 'react'\r\n\r\nimport { Arrays } from '../Arrays'\r\nimport { Sets } from '../Sets'\r\n\r\nimport { AlchemicMaterial } from './AlchemicMaterial'\r\nimport { AlchemicTransformation } from './AlchemicTransformation'\r\nimport { AlchemicProperty } from './AlchemicProperty'\r\n\r\nexport class AlchemicMaterialBuilder {\r\n  public name : string\r\n  public identifier : string\r\n  public keywords : Set<string>\r\n  public description : ReactNode\r\n  public readonly transformations : [AlchemicTransformation, AlchemicMaterial][]\r\n  public readonly properties : AlchemicProperty[]\r\n\r\n  public constructor () {\r\n    this.name = null\r\n    this.description = null\r\n    this.identifier = null\r\n    this.keywords = new Set()\r\n    this.transformations = []\r\n    this.properties = []\r\n  }\r\n\r\n  public build () : AlchemicMaterial {\r\n    return {\r\n      name: this.name,\r\n      keywords: new Set(this.keywords),\r\n      description: this.description,\r\n      identifier: this.identifier,\r\n      transformations: [].concat(this.transformations),\r\n      properties: [].concat(this.properties)\r\n    }\r\n  }\r\n\r\n  public setName (name : string) : AlchemicMaterialBuilder {\r\n    this.name = name\r\n    return this\r\n  }\r\n\r\n  public setIdentifier (identifier : string) : AlchemicMaterialBuilder {\r\n    this.identifier = identifier\r\n    return this\r\n  }\r\n\r\n  public setDescription (description : ReactNode) : AlchemicMaterialBuilder {\r\n    this.description = description\r\n    return this\r\n  }\r\n\r\n  public addTransformation (transformation : AlchemicTransformation, result : AlchemicMaterial) : AlchemicMaterialBuilder {\r\n    this.transformations.push([transformation, result])\r\n    return this\r\n  }\r\n\r\n  public setTransformation (index : number, transformation : AlchemicTransformation, result : AlchemicMaterial) : AlchemicMaterialBuilder {\r\n    this.transformations[index] = [transformation, result]\r\n    return this\r\n  }\r\n\r\n  public addProperty (property : AlchemicProperty) : AlchemicMaterialBuilder {\r\n    this.properties.push(property)\r\n    return this\r\n  }\r\n\r\n  public setProperty (index : number, property : AlchemicProperty) : AlchemicMaterialBuilder {\r\n    this.properties[index] = property\r\n    return this\r\n  }\r\n\r\n  public addKeyword (keyword : string) : AlchemicMaterialBuilder {\r\n    this.keywords.add(keyword)\r\n    return this\r\n  }\r\n\r\n  public copy (toCopy : AlchemicMaterial) : AlchemicMaterialBuilder {\r\n    this.name = toCopy.name\r\n    this.description = toCopy.description\r\n    this.identifier = toCopy.identifier\r\n    Arrays.copy(toCopy.properties, this.properties)\r\n    Arrays.copy(toCopy.transformations, this.transformations)\r\n    Sets.copy(toCopy.keywords, this.keywords)\r\n\r\n    return this\r\n  }\r\n\r\n  public clone () : AlchemicMaterialBuilder {\r\n    const result : AlchemicMaterialBuilder = new AlchemicMaterialBuilder()\r\n    result.copy(this)\r\n\r\n    return result\r\n  }\r\n\r\n  public clear () : void {\r\n    this.name = null\r\n    this.identifier = null\r\n    this.description = null\r\n    this.transformations.length = 0\r\n    this.properties.length = 0\r\n    this.keywords.clear()\r\n  }\r\n\r\n  public equals (other : any) : boolean {\r\n    if (other == null) return false\r\n    if (other === this) return true\r\n\r\n    if (other instanceof AlchemicMaterialBuilder) {\r\n      return AlchemicMaterial.equals(this, other)\r\n    }\r\n  }\r\n}\r\n\r\nexport namespace AlchemicMaterialBuilder {\r\n  export const BUILDER : AlchemicMaterialBuilder = new AlchemicMaterialBuilder()\r\n\r\n  export function clone (builder : AlchemicMaterialBuilder) : AlchemicMaterialBuilder {\r\n    return builder == null ? builder : builder.clone()\r\n  }\r\n\r\n  export function equals (left : AlchemicMaterialBuilder, right : AlchemicMaterialBuilder) : boolean {\r\n    return left == null ? left === right : left.equals(right)\r\n  }\r\n\r\n  export function builder () : AlchemicMaterialBuilder {\r\n    BUILDER.clear()\r\n    return BUILDER\r\n  }\r\n}\r\n","import { ReactNode } from 'react'\r\n\r\nimport { Arrays } from '../Arrays'\r\n\r\nimport { AlchemicPropertyBuilder } from './AlchemicPropertyBuilder'\r\n\r\nexport type AlchemicProperty = {\r\n  effects: ReactNode[],\r\n  cost: ReactNode,\r\n  duration: ReactNode\r\n}\r\n\r\nexport namespace AlchemicProperty {\r\n  export function equals (left : AlchemicProperty, right : AlchemicProperty) : boolean {\r\n    if (left == null) return left === right\r\n    if (right == null) return false\r\n    if (left === right) return true\r\n\r\n    return left.duration === right.duration &&\r\n           left.cost === right.cost &&\r\n           Arrays.equals(left.effects, right.effects)\r\n  }\r\n\r\n  export function builder () : AlchemicPropertyBuilder {\r\n    return AlchemicPropertyBuilder.builder()\r\n  }\r\n}\r\n","import { ReactNode } from 'react'\r\n\r\nimport { Arrays } from '../Arrays'\r\n\r\nimport { AlchemicProperty } from './AlchemicProperty'\r\n\r\nexport class AlchemicPropertyBuilder {\r\n  public readonly effects : ReactNode[]\r\n  public duration : ReactNode\r\n  public cost : ReactNode\r\n\r\n  public constructor () {\r\n    this.effects = []\r\n    this.duration = null\r\n    this.cost = null\r\n  }\r\n\r\n  public build () : AlchemicProperty {\r\n    return {\r\n      effects: [].concat(this.effects),\r\n      duration: this.duration,\r\n      cost: this.cost\r\n    }\r\n  }\r\n\r\n  public clear () : void {\r\n    this.effects.length = 0\r\n    this.duration = null\r\n    this.cost = null\r\n  }\r\n\r\n  public addEffect (effect : ReactNode) : AlchemicPropertyBuilder {\r\n    this.effects.push(effect)\r\n    return this\r\n  }\r\n\r\n  public setEffect (index : number, effect : ReactNode) : AlchemicPropertyBuilder {\r\n    while (this.effects.length <= index) {\r\n      this.effects.push(null)\r\n    }\r\n\r\n    this.effects.push(effect)\r\n    return this\r\n  }\r\n\r\n  public setDuration (duration : ReactNode) : AlchemicPropertyBuilder {\r\n    this.duration = duration\r\n    return this\r\n  }\r\n\r\n  public setCost (cost : ReactNode) : AlchemicPropertyBuilder {\r\n    this.cost = cost\r\n    return this\r\n  }\r\n\r\n  public copy (toCopy : AlchemicProperty) : void {\r\n    Arrays.copy(toCopy.effects, this.effects)\r\n    this.duration = toCopy.duration\r\n    this.cost = toCopy.cost\r\n  }\r\n\r\n  public clone () : AlchemicPropertyBuilder {\r\n    const result : AlchemicPropertyBuilder = new AlchemicPropertyBuilder()\r\n    result.copy(this)\r\n\r\n    return result\r\n  }\r\n\r\n  public equals (other : any) : boolean {\r\n    if (other == null) return false\r\n    if (other === this) return true\r\n\r\n    if (other instanceof AlchemicPropertyBuilder) {\r\n      return AlchemicProperty.equals(this, other)\r\n    }\r\n\r\n    return false\r\n  }\r\n}\r\n\r\nexport namespace AlchemicPropertyBuilder {\r\n  export const BUILDER : AlchemicPropertyBuilder = new AlchemicPropertyBuilder()\r\n\r\n  export function clone (builder : AlchemicPropertyBuilder) : AlchemicPropertyBuilder {\r\n    return builder == null ? builder : builder.clone()\r\n  }\r\n\r\n  export function equals (left : AlchemicPropertyBuilder, right : AlchemicPropertyBuilder) : boolean {\r\n    return left == null ? left === right : left.equals(right)\r\n  }\r\n\r\n  export function builder () : AlchemicPropertyBuilder {\r\n    BUILDER.clear()\r\n    return BUILDER\r\n  }\r\n}\r\n","export type AlchemicTransformation = number\r\n\r\nexport namespace AlchemicTransformation {\r\n  export const INFUSION : AlchemicTransformation = 0\r\n  export const DECOCTION : AlchemicTransformation = 1\r\n  export const MACERATION : AlchemicTransformation = 2\r\n  export const PERCOLATION : AlchemicTransformation = 3\r\n  export const DISTILLATION : AlchemicTransformation = 4\r\n  export const DILLUTION : AlchemicTransformation = 5\r\n  export const CONCENTRATION : AlchemicTransformation = 6\r\n  export const REDUCTION : AlchemicTransformation = 7\r\n\r\n  export const ALL : AlchemicTransformation[] = [\r\n    INFUSION,\r\n    DECOCTION,\r\n    MACERATION,\r\n    PERCOLATION,\r\n    DISTILLATION,\r\n    DILLUTION,\r\n    CONCENTRATION,\r\n    REDUCTION\r\n  ]\r\n\r\n  export function toString (transformation : AlchemicTransformation) : string {\r\n    switch (transformation) {\r\n      case INFUSION      : return 'INFUSION'\r\n      case DECOCTION     : return 'DECOCTION'\r\n      case MACERATION    : return 'MACERATION'\r\n      case PERCOLATION   : return 'PERCOLATION'\r\n      case DISTILLATION  : return 'DISTILLATION'\r\n      case DILLUTION     : return 'DILLUTION'\r\n      case CONCENTRATION : return 'CONCENTRATION'\r\n      case REDUCTION     : return 'REDUCTION'\r\n      default            : return undefined\r\n    }\r\n  }\r\n\r\n  export function toFrench (transformation : AlchemicTransformation) : string {\r\n    switch (transformation) {\r\n      case INFUSION      : return 'infusion'\r\n      case DECOCTION     : return 'décoction'\r\n      case MACERATION    : return 'macération'\r\n      case PERCOLATION   : return 'percolation'\r\n      case DISTILLATION  : return 'distillation'\r\n      case DILLUTION     : return 'dillution'\r\n      case CONCENTRATION : return 'concentration'\r\n      case REDUCTION     : return 'réduction'\r\n      default            : return undefined\r\n    }\r\n  }\r\n\r\n}\r\n","import { AlchemicMaterial } from './AlchemicMaterial'\r\nimport { AlchemicTransformation } from './AlchemicTransformation'\r\n\r\nexport type AlchemicTransformationEntry = [AlchemicTransformation, AlchemicMaterial]\r\n\r\nexport namespace AlchemicTransformationEntry {\r\n  export function equals (left : AlchemicTransformationEntry, right : AlchemicTransformationEntry) : boolean {\r\n    if (left == null) return left === right\r\n    if (right == null) return false\r\n    if (left === right) return true\r\n\r\n    return left[0] === right[0] &&\r\n           AlchemicMaterial.equals(left[1], right[1])\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\nimport { AlchemicTransformation } from '../../../alchemy/AlchemicTransformation'\r\n\r\nimport { BloodyBellsInfusion } from '../processed/BloodyBellsInfusion'\r\nimport { MercenaryBlessing } from '../processed/MercenaryBlessing'\r\nimport { BloodDance } from '../processed/BloodDance'\r\n\r\nexport const BloodyBells : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Sanguine')\r\n    .setIdentifier('bloody-bells')\r\n    .addKeyword('Alchimie')\r\n    .addKeyword('Matière')\r\n    .addKeyword('Élément primitif')\r\n    .addKeyword('Sanguine')\r\n    .setDescription(\r\n      <p>\r\n        La sanguine est une forme de muguet beaucoup plus fourni aux cloches\r\n        rouges virant au jaune que l'on retrouve dans certaines forêt. C'est\r\n        une plante extrêmement toxique entraînant une augmentation de la\r\n        pression artérielle. Elle peut être utilisée pour la fabrication de\r\n        poisons hémoragiques.\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Initiative +2</>)\r\n        .addEffect(<>Contrôle -1</>)\r\n        .setCost(2)\r\n        .setDuration(<>5<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addTransformation(AlchemicTransformation.INFUSION, BloodyBellsInfusion)\r\n    .addTransformation(AlchemicTransformation.DECOCTION, MercenaryBlessing)\r\n    .addTransformation(AlchemicTransformation.MACERATION, BloodDance)\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\nimport { AlchemicTransformation } from '../../../alchemy/AlchemicTransformation'\r\n\r\nimport { CeruleanInfusion } from '../processed/CeruleanInfusion'\r\nimport { ParagonBlessing } from '../processed/ParagonBlessing'\r\nimport { NobleBlood } from '../processed/NobleBlood'\r\n\r\nexport const CeruleanLily : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Lys azuré')\r\n    .setIdentifier('cerulean-lily')\r\n    .addKeyword('Alchimie')\r\n    .addKeyword('Matière')\r\n    .addKeyword('Élément primitif')\r\n    .addKeyword('Lys azuré')\r\n    .setDescription(\r\n      <p>\r\n        Le lys azuré est une plante à bulbe qui ne s'ouvre que la nuit. Elle\r\n        est connue pour sa teinte azuré et sa faible fluorescence. C'est une\r\n        plante magnifique mais à manipuler avec précotion : elle est connue\r\n        pour contenir une quantitée concentrée d'ether. La pousse du lys azuré\r\n        est assez ératique et il n'est jamais garantie que la terre choisie\r\n        pour le planter lui convienne. Il est utilisé dans la production de\r\n        liqueur de lys aussi appellée sang des rois.\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Intoxication à l'éther +2</>)\r\n        .setCost(0)\r\n        .setDuration(<>~</>)\r\n        .build()\r\n    )\r\n    .addTransformation(AlchemicTransformation.INFUSION, CeruleanInfusion)\r\n    .addTransformation(AlchemicTransformation.DECOCTION, ParagonBlessing)\r\n    .addTransformation(AlchemicTransformation.MACERATION, NobleBlood)\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\nimport { AlchemicTransformation } from '../../../alchemy/AlchemicTransformation'\r\n\r\nimport { DreamstarInfusion } from '../processed/DreamstarInfusion'\r\nimport { CourrierBlessing } from '../processed/CourrierBlessing'\r\nimport { MorpheaNectar } from '../processed/MorpheaNectar'\r\n\r\nexport const Dreamstar : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Songétoile')\r\n    .setIdentifier('dreamstar')\r\n    .addKeyword('Alchimie')\r\n    .addKeyword('Matière')\r\n    .addKeyword('Élément primitif')\r\n    .addKeyword('Songétoile')\r\n    .setDescription(\r\n      <p>\r\n        La songétoile, aussi appellée sauge étoilée est une espèce de sauge\r\n        formant des petites fleures blanches de forme étoilée. Elle pousse\r\n        particulièrement proche des cours d'eau et peut être trouvée même en\r\n        plein hiver. Infusée c'est une plante aux vertues appaisante\r\n        augmentant à la fois la concentration et facilitant le sommeil.\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Contrôle +2</>)\r\n        .addEffect(<>Constitution -2</>)\r\n        .setCost(2)\r\n        .setDuration(<>5<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addTransformation(AlchemicTransformation.INFUSION, DreamstarInfusion)\r\n    .addTransformation(AlchemicTransformation.DECOCTION, CourrierBlessing)\r\n    .addTransformation(AlchemicTransformation.MACERATION, MorpheaNectar)\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\nimport { AlchemicTransformation } from '../../../alchemy/AlchemicTransformation'\r\n\r\nimport { GreenleavesCurse } from '../processed/GreenleavesCurse'\r\nimport { GreenleavesPurifier } from '../processed/GreenleavesPurifier'\r\nimport { GreenleavesInfusion } from '../processed/GreenleavesInfusion'\r\n\r\nexport const Greenleaves : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Verderelle')\r\n    .setIdentifier('green-leaves')\r\n    .addKeyword('Alchimie')\r\n    .addKeyword('Matière')\r\n    .addKeyword('Élément primitif')\r\n    .addKeyword('Verderelle')\r\n    .setDescription(\r\n      <p>\r\n        La verderelle est une espèce de plante grimpante formant des petites\r\n        feuilles rondes capable de retenir les goûtes de pluies. Extrêmement\r\n        toxique elle est principalement utilisée dans la production d'élixir\r\n        de verderelle, une solution de dernier recours pour drainer l'éther\r\n        d'un corps malade.\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Fièvre</>)\r\n        .addEffect(<>Pouvoir -2</>)\r\n        .setCost(0)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addTransformation(AlchemicTransformation.INFUSION, GreenleavesInfusion)\r\n    .addTransformation(AlchemicTransformation.DECOCTION, GreenleavesCurse)\r\n    .addTransformation(AlchemicTransformation.MACERATION, GreenleavesPurifier)\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\nimport { AlchemicTransformation } from '../../../alchemy/AlchemicTransformation'\r\n\r\nimport { SunriseInfusion } from '../processed/SunriseInfusion'\r\nimport { ThiefBlessing } from '../processed/ThiefBlessing'\r\nimport { GoldenSun } from '../processed/GoldenSun'\r\n\r\nexport const Helenite : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Hélénite')\r\n    .setIdentifier('helenite')\r\n    .addKeyword('Alchimie')\r\n    .addKeyword('Matière')\r\n    .addKeyword('Élément primitif')\r\n    .addKeyword('Hélénite')\r\n    .setDescription(\r\n      <p>\r\n        L'hélénite est un arbustre sauvage produisant des petites baies\r\n        rondes dorées légèrement translucide. C'est une plante rare, et la\r\n        coutume veut que consommer ses fruits porte chance.\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Chance +2</>)\r\n        .addEffect(<>Contrôle -2</>)\r\n        .setCost(2)\r\n        .setDuration(<>5<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addTransformation(AlchemicTransformation.INFUSION, SunriseInfusion)\r\n    .addTransformation(AlchemicTransformation.DECOCTION, ThiefBlessing)\r\n    .addTransformation(AlchemicTransformation.MACERATION, GoldenSun)\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\nimport { AlchemicTransformation } from '../../../alchemy/AlchemicTransformation'\r\n\r\nimport { PandoraInfusion } from '../processed/PandoraInfusion'\r\nimport { TreeBlood } from '../processed/TreeBlood'\r\nimport { SquireBlessing } from '../processed/SquireBlessing'\r\n\r\nexport const PandoraSkin : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Écorce de pandore')\r\n    .setIdentifier('pandora-skin')\r\n    .addKeyword('Alchimie')\r\n    .addKeyword('Matière')\r\n    .addKeyword('Élément primitif')\r\n    .addKeyword('Écorce de pandore')\r\n    .setDescription(\r\n      <p>\r\n        L'écorce de pandore est en réalité un champignon symbiote formant de\r\n        curieuses spirales que l'on peut retrouver sur certains arbres très\r\n        endomagés. De couleur noire virant sur le violet très foncé il se\r\n        nourrit d'une partie de la sève de son hôte tout en remplaçant\r\n        d'une partie de son écorce endomagée.\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Constitution +2</>)\r\n        .addEffect(<>Dextérité -2</>)\r\n        .setCost(2)\r\n        .setDuration(<>5<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addTransformation(AlchemicTransformation.INFUSION, PandoraInfusion)\r\n    .addTransformation(AlchemicTransformation.DECOCTION, SquireBlessing)\r\n    .addTransformation(AlchemicTransformation.MACERATION, TreeBlood)\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\nimport { AlchemicTransformation } from '../../../alchemy/AlchemicTransformation'\r\n\r\nimport { PegasusInfusion } from '../processed/PegasusInfusion'\r\nimport { HunterBlessing } from '../processed/HunterBlessing'\r\nimport { WindSyrup } from '../processed/WindSyrup'\r\n\r\nexport const PegasusFluff : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Plumeau de pégase')\r\n    .setIdentifier('pegasus-fluff')\r\n    .addKeyword('Alchimie')\r\n    .addKeyword('Matière')\r\n    .addKeyword('Élément primitif')\r\n    .addKeyword('Plumeau de pégase')\r\n    .setDescription(\r\n      <p>\r\n        Le plumeau de pégase est une forme de céréale sauvage que l'on\r\n        retrouve principalement dans les grandes plaines rocailleuses. Cette\r\n        plante est constituée d'une grande tige terminée de deux à trois épis\r\n        ressemblant à des plumes. La tige du plumeau de pégase se raidifie au\r\n        fur et a mesure de sa croissance, à maturité le plumeau se détache en\r\n        cas de vents violents pour éssémer plus loin.\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Dextérité +2</>)\r\n        .addEffect(<>Force -2</>)\r\n        .setCost(2)\r\n        .setDuration(<>5<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addTransformation(AlchemicTransformation.INFUSION, PegasusInfusion)\r\n    .addTransformation(AlchemicTransformation.DECOCTION, HunterBlessing)\r\n    .addTransformation(AlchemicTransformation.MACERATION, WindSyrup)\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\nimport { AlchemicTransformation } from '../../../alchemy/AlchemicTransformation'\r\n\r\nimport { SkyhammerInfusion } from '../processed/SkyhammerInfusion'\r\nimport { WarriorBlessing } from '../processed/WarriorBlessing'\r\nimport { StormLiquor } from '../processed/StormLiquor'\r\n\r\nexport const Skyhammer : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Marterage')\r\n    .setIdentifier('skyhammer')\r\n    .addKeyword('Alchimie')\r\n    .addKeyword('Matière')\r\n    .addKeyword('Élément primitif')\r\n    .addKeyword('Marterage')\r\n    .setDescription(\r\n      <p>\r\n        La marterage est une forme de houx que l'ont dit ne fleurire qu'après\r\n        le passage d'un orage. Les fruits de marterage sont des espèces de\r\n        cône formée de pétales satinés assez épaisses de couleur mauve veiné\r\n        de canaux cyan. C'est une plante fortifiante mais qui mal utilisée\r\n        peut provoquer des épisodes de rage furieuse ou des crises de spasmes\r\n        douloureux.\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Force +2</>)\r\n        .addEffect(<>Chance -2</>)\r\n        .setCost(2)\r\n        .setDuration(<>5<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addTransformation(AlchemicTransformation.INFUSION, SkyhammerInfusion)\r\n    .addTransformation(AlchemicTransformation.DECOCTION, WarriorBlessing)\r\n    .addTransformation(AlchemicTransformation.MACERATION, StormLiquor)\r\n    .build()\r\n)\r\n","export { BloodyBells } from './BloodyBells'\r\nexport { CeruleanLily } from './CeruleanLily'\r\nexport { Dreamstar } from './Dreamstar'\r\nexport { Greenleaves } from './Greenleaves'\r\nexport { Helenite } from './Helenite'\r\nexport { PandoraSkin } from './PandoraSkin'\r\nexport { PegasusFluff } from './PegasusFluff'\r\nexport { Skyhammer } from './Skyhammer'\r\n\r\nimport { BloodyBells } from './BloodyBells'\r\nimport { CeruleanLily } from './CeruleanLily'\r\nimport { Dreamstar } from './Dreamstar'\r\nimport { Greenleaves } from './Greenleaves'\r\nimport { Helenite } from './Helenite'\r\nimport { PandoraSkin } from './PandoraSkin'\r\nimport { PegasusFluff } from './PegasusFluff'\r\nimport { Skyhammer } from './Skyhammer'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\n\r\nexport const ALL : AlchemicMaterial[] = [\r\n  BloodyBells,\r\n  CeruleanLily,\r\n  Dreamstar,\r\n  Greenleaves,\r\n  Helenite,\r\n  PandoraSkin,\r\n  PegasusFluff,\r\n  Skyhammer\r\n]\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const BloodDance : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Valse rouge')\r\n    .setIdentifier('blood-dance')\r\n    .setDescription(\r\n      <>\r\n        <p>\r\n          La valse rouge, aussi appellée sang de rose ou liqueur de rubis, est\r\n          le résultat d'une macération de sanguine pendant un minimum de deux\r\n          semaines. Le résultat est un liquide couleur rubis légèrement\r\n          translucide qui fluidifie dangereusement le sang. L'on dit aussi de\r\n          cette solution qu'elle provoque la sensation de ne faire qu'un avec\r\n          son environnement. Ce poison extrêmement dangereux qui peut provoquer\r\n          d'atroces hémoragies à la moindre coupure a longtemps été exploitée\r\n          par des sectes d'épéistes suicidaires qui transformait le duel à\r\n          l'épée en danse mortelles d'une grâce sans pareil.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Hémoragie.</strong> Quand la victime de cet effet subis une\r\n          blessure légère il doit réussir un test d'opposition entre sa\r\n          constitution et un degré de difficulté équivalent à la qualité du\r\n          poison. Si le test échoue la blessure devient alors une blessure\r\n          grave hémoragique.\r\n        </p>\r\n      </>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Parade + 1</>)\r\n        .setCost(2)\r\n        .setDuration(<>5<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Esquive + 1</>)\r\n        .setCost(2)\r\n        .setDuration(<>5<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Hémoragie</>)\r\n        .setCost(0)\r\n        .setDuration(<>2<Unit>r</Unit> + 1<Unit>r</Unit> × ¼Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Bestialité +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>~</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const BloodyBellsInfusion : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Infusion de sanguine')\r\n    .setIdentifier('bloody-bells-infusion')\r\n    .setDescription(\r\n      <p>\r\n        L'infusion de sanguine est une solution de cloches de sanguine portées à\r\n        ébulition pendant une petite dizaine de minute. Cette infusion est\r\n        connue pour provoquer une légère hyperactivité passagère.\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Antie-paralysie</>)\r\n        .setCost(1)\r\n        .setDuration(<>1<Unit>r</Unit> + 1<Unit>r</Unit> × ¼Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Initiative +4</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const CeruleanInfusion : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Infusion azurée')\r\n    .setIdentifier('cerulean-infusion')\r\n    .setDescription(\r\n      <>\r\n        <p>\r\n          L'infusion azurée est une solution de lys azurés portée à ébulition\r\n          pendant une petite dizaine de minute. Cette infusion est connue pour\r\n          aider les blessures à cicatriser.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Stabilisant.</strong> Équivalent à la réussite automatique\r\n          d'une tentative de stabilisation en cas de coma. La durée d'un coma\r\n          est divisé par deux quand le stabilisant est ingéré. L'utilisation\r\n          multiple du stabilisant ne réduit pas plus la durée du coma.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Régénération.</strong> Le personnage récupère un nombre de\r\n          points de vie équivalent à sa constitution divisée par 4 à la fin de\r\n          chaque journée pendant laquelle l'effet de régénération à cours.\r\n          L'utilisation multiple de la régénération n'augmente pas plus son\r\n          effet. Si l'effet de régénération est concentré le personnage gagne\r\n          alors un point de vie supplémentaire par niveau de concentration. Si\r\n          plusieurs effets de régénération sont ingérés, le plus concentré prime\r\n          sur tous les autres.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Ossature végétale.</strong> Le temps de guérison des fractures\r\n          est divisé par deux. Un personnage sous effet de l'ossature végétale\r\n          peut annuler toute fracture potentielle en réalisant un test\r\n          d'opposition entre sa constitution et un degré de difficulté de 8\r\n          points.\r\n        </p>\r\n      </>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Stabilisant (Qa ≥ 10)</>)\r\n        .setCost(1)\r\n        .setDuration(<>~</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Régénération</>)\r\n        .setCost(1)\r\n        .setDuration(<>1<Unit>j</Unit> + 1<Unit>j</Unit> × ⅕Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Ossature végétale (Liqueur de lys)</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const CourrierBlessing : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Bénédiction du messager')\r\n    .setIdentifier('courrier-blessing')\r\n    .setDescription(\r\n      <>\r\n        <p>\r\n          La bénédiction du messager est une décoction de songétoile dans\r\n          l'eau. C'est un liquide noir pailletée de grains azurées longtemps\r\n          utilisé par les messagers à cheval pour son caractère appaisant\r\n          permettant de courts sommeils particulièrement réparateurs entre deux\r\n          longues courses à cheval.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Sommeil réparateur.</strong> Le sommeil réparateur est un\r\n          effet permettant de diviser par deux le temps de sommeil nécéssaire\r\n          à un personnage pour dormir. Pour un homme cet effet permet notamment\r\n          de ne dormir que 4 heures en place de 8. Un personnage gagne 1 point\r\n          de vie supplémentaire par groupe de 5 points de constitution qu'il\r\n          possède des suites d'un sommeil réparateur.\r\n        </p>\r\n      </>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Maîtrise de l'épée +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Maîtrise de l'équitation +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>20<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Sommeil réparateur</>)\r\n        .setCost(1)\r\n        .setDuration(<>20<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const DreamstarInfusion : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Infusion de songétoile')\r\n    .setIdentifier('dreamstar-infusion')\r\n    .setDescription(\r\n      <p>\r\n        L'infusion de songétoile est une solution de songétoile portée à\r\n        ébulition pendant une petite dizaine de minute. Cette tisane, couleur\r\n        violacée et légèrement scintillante est connu pour appaiser les esprits\r\n        et faciliter le sommeil. C'est un produit consommé par la plupart des\r\n        érudits et des chefs d'états qui ont un sommeil troublé par le travail\r\n        ou les décisions passées.\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Calmant</>)\r\n        .setCost(1)\r\n        .setDuration(<>5<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Contrôle +1</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const GoldenSun : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Soleil d\\'or')\r\n    .setIdentifier('golden-sun')\r\n    .setDescription(\r\n      <>\r\n        <p>\r\n          Le soleil d'or, aussi appellée liqueur du soleil, est le résultat\r\n          de la macération d'un jus de baies d'hélénite pendant minimum deux\r\n          semaines. Le résultat est une liqueur dorée légèrement luminescente au\r\n          goût très sucré. On dit de ce produit, très appréciée pour son goût\r\n          unique et son effet euphorisant, qu'il est surtout capable de\r\n          maîtriser le destin.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Porte bonheur.</strong> Le soleil d'or permet au sujet de\r\n          l'effet de profiter d'un point de destin supplémentaire pendant une\r\n          courte période.\r\n        </p>\r\n      </>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Porte bonheur</>)\r\n        .setCost(1)\r\n        .setDuration(<>5<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Contrôle -2</>)\r\n        .setCost(0)\r\n        .setDuration(<>5<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Maîtrise de la fouille +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const GreenleavesCurse : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Malédiction de verderelle (!)')\r\n    .setIdentifier('greenleaves-curse')\r\n    .setDescription(\r\n      <>\r\n        <p>\r\n          La malédiction de verderelle est une décoction de verderelle dans\r\n          l'eau. Le liquide vert clair qui en résulte est un poison violent\r\n          capable de paralyser les individus les plus forts. A un certain degré\r\n          de concentration la malédiction de verderelle peut même faire sombrer\r\n          des boeufs dans un coma profond.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Paralysie.</strong> Un personnage qui subit un effet\r\n          paralytique doit réussir un test d'opposition de constitution contre\r\n          un degré de difficulté équivalent à la qualité du poison. Si le jet\r\n          de constitution réussi, le personnage joue en dernier pour le round\r\n          en cours. Si le jet échoue le personnage perds un nombre de round\r\n          égal à la durée de la paralysie.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Coma.</strong> Un personnage qui subit un effet de coma doit\r\n          réussir un test d'opposition de constitution contre un degré de\r\n          difficulté équivalent à la qualité du poison. Si le jet échoue le\r\n          personnage tombe immédiatement dans le coma.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Mutisme.</strong> Un personnage qui subit un les effets du\r\n          mutisme doit réussir un test d'opposition de constitution contre un\r\n          degré de difficulté équivalent à la qualité du poison. Si le jet\r\n          échoue le personnage ne peut plus communiquer par la parole pendant\r\n          un nombre de round égal à la durée de l'effet du mutisme.\r\n        </p>\r\n      </>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Paralysie</>)\r\n        .setCost(0)\r\n        .setDuration(<>1<Unit>r</Unit> + 1<Unit>r</Unit> × ¼Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Coma (Concentration x3)</>)\r\n        .setCost(0)\r\n        .setDuration(<>~</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Mutisme</>)\r\n        .setCost(0)\r\n        .setDuration(<>1<Unit>r</Unit> + 1<Unit>r</Unit> × ¼Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const GreenleavesInfusion : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Infusion de verderelle')\r\n    .setIdentifier('greenleaves-infusion')\r\n    .setDescription(\r\n      <>\r\n        <p>\r\n          L'infusion de verderelle est connue pour ses vertues d'antidote ainsi\r\n          que pour les douloureux maux de têtes qu'elle peut provoquer aux\r\n          individus n'ayant pas la présence d'esprit de la faire bouillir un\r\n          peut plus longtemps que les autres infusions.\r\n        </p>\r\n      </>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Fièvre</>)\r\n        .setCost(0)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Antidote</>)\r\n        .setCost(1)\r\n        .setDuration(<>1<Unit>r</Unit> + 1<Unit>r</Unit> × ¼Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const GreenleavesPurifier : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Élixir de verderelle')\r\n    .setIdentifier('greenleaves-purifier')\r\n    .setDescription(\r\n      <>\r\n        <p>\r\n          L'élixir de verderelle est un liquide blanc perle obtenu après la\r\n          fermentation de verderelle dans l'eau. Aussi apellée lait du passeur,\r\n          l'élixir de verderelle est une drogue de dernier recours pour purifier\r\n          les corps malade. Utiliser de l'élixir de verderelle est toujours un\r\n          paris risqué, car le liquide peut toujours provoquer la mort des corps\r\n          trop infectés.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Purification de verderelle.</strong> Toute purification de\r\n          verderelle nécéssite de passer un test contre son intoxication. Si le\r\n          sujet de l'effet réalise un score inférieur ou égal à son niveau\r\n          d'intoxication divisé par trois sur un dé 100 il meurt alors\r\n          immédiatement dans d'atroces souffrances.\r\n        </p>\r\n\r\n        <p>\r\n          Si l'individu sujet à la purification de verderelle réussi son\r\n          premier test, le processus de purification commence. Il est alors\r\n          immédiatement l'objet d'une fièvre qu'il subira jusqu'à la fin de\r\n          l'effet de l'elixir. Chaque jour qui s'ensuit, le joueur doit alors\r\n          passer un test d'opposition entre sa constitution et un degré de\r\n          difficulté équivalent à 6 points plus son niveau d'intoxication divisé\r\n          par 2. Si le test échoue le personnage sombre immédiatement dans le\r\n          coma et doit donc être stabilisé.\r\n        </p>\r\n\r\n        <p>\r\n          Toute heure passé sous l'effet de la verderelle compte triple pour\r\n          la réduction de l'intoxication à l'éther. Tous les effets de\r\n          paralysie, d'empoisonement, de rage et de somnifère sont immédiatement\r\n          drainés par la verderelle et le personnage est insensible à la maladie\r\n          pendant toute la durée de la purification.\r\n        </p>\r\n\r\n        <p>\r\n          Un personnage en état de purification vie avec un corps complètement\r\n          déréglé, mange de manière complètement ératique et doit boire\r\n          beaucoup pour éviter de se désydrater.\r\n        </p>\r\n      </>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Purification de verderelle</>)\r\n        .setCost(0)\r\n        .setDuration(<>2<Unit>h</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Pouvoir -2</>)\r\n        .setCost(0)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const HunterBlessing : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Bénédiction du chasseur')\r\n    .setIdentifier('hunter-blessing')\r\n    .setDescription(\r\n      <p>\r\n        La bénédiction du chasseur est une décoction de plumeaux de pégase dans\r\n        l'eau. Elle à longtemps été utilisé par les premiers chasseurs du\r\n        continent pour garantir une chasse fructueuse, puis comme drogue pour\r\n        les divisions d'archer des premières civilisations.\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Perception +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Maîtrise de l'arc long +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Maîtrise de l'arc court +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const MercenaryBlessing : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Bénédiction du mercenaire')\r\n    .setIdentifier('bloody-bells-infusion')\r\n    .setDescription(\r\n      <p>\r\n        La bénédiction du mercenaire est une décoction de sanguine dans l'eau.\r\n        C'est un liquide de couleur rouge sang qui améliore les réflexes et qui\r\n        provoque une légère dissociation cognitive entre l'individu qui l'a\r\n        consommé et le réel. C'est un produit qui a été longtemps utilisé par\r\n        les petits groupes de mercenaires en tout genre pour exécuter leur\r\n        contrats de manière machinale.\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Épée bâtardes +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Haches +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Marteau +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const MorpheaNectar : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Nectar de morphée')\r\n    .setIdentifier('morphea-nectar')\r\n    .setDescription(\r\n      <>\r\n        <p>\r\n          Le nectar de morphée, aussi appellée sirop de songétoile, est le\r\n          résultat de la macération de songétoile préalablement broyée et dissoute\r\n          dans l'eau. Cette solution nécéssite au minimum 2 semaines de\r\n          macération. Ce liquide syrupeux de couleur violacée sombre est un\r\n          somnifère particulièrement puissant quand il est préparé par des mains\r\n          de maîtres. Cependant le sommeil provoqué par le nectar de morphée est\r\n          loin d'être réparateur car celui-ci est parsemés de visions et de\r\n          délires que l'on dit en relation avec l'avenir, le présent et le futur.\r\n          Le nectar de morphée à longtemps été une lubie des oracles en tout\r\n          genre mais à vite perdu de sa popularité quand ses effets dévastateurs\r\n          pour la santé ont été découvert.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Somnifère.</strong> Cet élément provoque une grande fatigue\r\n          menant à l'assoupissement de la victime si celle-ci n'a pas la\r\n          volonté requise pour rester éveillée. La victime d'un somnifère doit\r\n          réaliser un jet d'opposition de volonté de degré de difficulté\r\n          équivalent à la qualité du produit divisé par deux.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Errance de l'oracle.</strong> Le personnage est sujet à des\r\n          visions violentes de sujets passés, présents ou futurs mélangés à ses\r\n          propres peurs ou souvenirs inconscients. Si le personnage est sujet à\r\n          un somnifère il ne peut que subir les effets de l'errance de l'oracle\r\n          et se réveillera toujours fatigué au petit matin. Un personnage qui\r\n          n'est pas sous l'effet d'un somnifère peut tenter d'orienter ses\r\n          divagations vers un sujet qui l'intéresse en réalisant un test\r\n          d'auto-résolution basé sur sa volonté indiquant alors la qualité du\r\n          rêve auquel il aura droit. Les effets de l'errance de l'oracle peuvent\r\n          être stoppés net avec un calmant, mais le personnage s'endormira alors\r\n          pour 1D6 heures minimum.\r\n        </p>\r\n\r\n        <table className=\"table-1d table-vertical\">\r\n          <thead>\r\n            <tr>\r\n              <th style={{width: '100px'}}> Qualité </th>\r\n              <th style={{width: '300px'}}> Effet </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td> ≤ 6 </td>\r\n              <td>\r\n                Une telle qualité ne garantit aucunement que le rêve traitera du\r\n                sujet demandé.\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td> ≤ 10 </td>\r\n              <td>\r\n                Garantit que le rêve tiendra compte de la formulation du sujet\r\n                demandé seulement mais pas de l'intention du rêveur. Avec cette\r\n                qualité le rêve sera toujours particulièrement énigmatique.\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td> ≤ 15 </td>\r\n              <td>\r\n                Le rêve tiendra compte de l'intention du rêveur mais répondra\r\n                toujours de manière très énigmatique en échangeant des\r\n                personnages avec des connaissances du rêveur, en modifiant les\r\n                lieux, en modifiant les paroles ou les actes, en désactivant un\r\n                sens.\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td> ≤ 20 </td>\r\n              <td>\r\n                Le rêve tiendra compte de l'intention du rêveur et la scène sera\r\n                complète mais toujours relativement énigmatique. Il semble\r\n                évident qu'un songe de cette qualité doive apporter au moins une\r\n                réponse raisonable ne nécéssitant pas d'exercice\r\n                d'interprétation supplémentaire.\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td> 21+ </td>\r\n              <td>\r\n                A ce niveau de qualité le rêveur obtient la réponse qu'il désir,\r\n                la scène peut toujours faire jouer des connaissances de celui-ci\r\n                à la place des vrais personnages mais les liens entre les\r\n                acteurs, les lieux et la réalité sont évident.\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Somnifère</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Constitution -2</>)\r\n        .setCost(0)\r\n        .setDuration(<>5<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Errance de l'oracle</>)\r\n        .setCost(1)\r\n        .setDuration(<>5<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const NobleBlood : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Liqueur de lys')\r\n    .setIdentifier('noble-blood')\r\n    .setDescription(\r\n      <p>\r\n        La macération de la liqueur de lys pendant un mois et sa concentration\r\n        en quantitée suffisante permet de fabriquer de la liqueur de lys ou sang\r\n        des rois. La liqueur de lys est un solvant sans niveau de qualité, pour\r\n        produire de la liqueur de lys il suffit de passer un test d'opposition\r\n        entre sa connaissance de la macération et un degré de difficulté de\r\n        16 points. Si le test passe, le résultat de la macération sera du\r\n        solvant fonctionnel, sinon celui-ci perdra tous ses effets à\r\n        l'exception près de sa capacitée à doubler l'empoisonnement des\r\n        propriétés qui y sont dissoutes. Pour plus d'information sur la liqueur\r\n        de lys se référé à la <a href='#alchemy-solvents'>section de ce chapitre\r\n        traitant des solvants.</a>\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Intoxication à l'éther +2</>)\r\n        .setCost(0)\r\n        .setDuration(<>~</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const PandoraInfusion : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Infusion de pandore')\r\n    .setIdentifier('pandora-infusion')\r\n    .setDescription(\r\n      <p>\r\n        L'infusion de pandore est une solution d'écorce de pandore portée à\r\n        ébulition pendant une petite dizaine de minute. Cette infusion est\r\n        connue des anciens druides et des médecins de guerre pour être une\r\n        option viable permettant de faciliter le traitement des hémoragies.\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Coagulant</>)\r\n        .setCost(1)\r\n        .setDuration(<>1<Unit>r</Unit> + 1<Unit>r</Unit> × ¼Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Constitution +1</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const ParagonBlessing : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Bénédiction du parangon')\r\n    .setIdentifier('paragon-infusion')\r\n    .setDescription(\r\n      <>\r\n        <p>\r\n          La bénédiction du parangon est une décoction de lys azuré dans l'eau.\r\n          C'est un liquide de couleur bleu foncé qui préserve du doute et qui\r\n          facilite le maintient d'une posture imposante pendant les combats.\r\n          La bénédiction du parangon est un vieux tonique utilisé dans certaines\r\n          familles noble pour sa supposée capacitée à préserver la pureté du sang.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Héroïsme.</strong> Un personnage héroïque inspire ses pairs en\r\n          combat par sa grâce et la pureté de sa posture de combat. Toute\r\n          personne dans le camp du personnage héroïque gagne un bonus de\r\n          contrôle de 1 point par niveau de concentration de l'effet héroïsme.\r\n          En cas d'éffondrement mental, un personnage sous effet de l'héroïsme\r\n          est immunisés des afflictions et ne peut développer qu'une vertue.\r\n        </p>\r\n      </>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Maîtrise de l'épée longue +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Maîtrise de la lance +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Héroïsme</>)\r\n        .setCost(1)\r\n        .setDuration(<>1<Unit>r</Unit> + 1<Unit>r</Unit> × ¼Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const PegasusInfusion : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Infusion de pégase')\r\n    .setIdentifier('pegasus-infusion')\r\n    .setDescription(\r\n      <p>\r\n        L'infusion de pégase est un tonique ancestral consommé par les premiers\r\n        chasseurs du continent. Cette infusion de plumeau de pégase est reconnue\r\n        pour provoquer chez son consommateur à la fois une vague sensation de\r\n        légèreté et une intensification des sens.\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Mouvement +4m</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Dextérité +1</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const SkyhammerInfusion : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Infusion de marterage')\r\n    .setIdentifier('skyhammer-infusion')\r\n    .setDescription(\r\n      <p>\r\n        L'infusion de marterage est une solution comprenant de la marterage\r\n        portée à ébulition pendant une petite dizaine de minute. Le liquide\r\n        de couleur orangé qui en résulte est particulièrement épicé et est connu\r\n        pour son effet sur la capacité musculaire. C'était une drogue utilisée\r\n        pour supporter les travaux de gros oeuvres et pour soigner les douleurs\r\n        chroniques.\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Antidouleur</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Force +1</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const SquireBlessing : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Bénédiction de l\\'écuyer')\r\n    .setIdentifier('squire-blessing')\r\n    .setDescription(\r\n      <p>\r\n        La bénédiction de l'écuyer est une décoction d'écorce de pandore dans\r\n        l'eau. C'est une drogue tonifiante facilitant notamment le port de\r\n        l'armure et la tenue d'un bouclier. Celle-ci avait un certain succès\r\n        auprès des premiers aspirants chevaliers qui souhaitaient se faire\r\n        remarquer au cours des entraînements.\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Maîtrise de l'armure intermédiaire +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Maîtrise du bouclier +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Maîtrise de l'armure légère +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const StormLiquor : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Liqueur des tempêtes')\r\n    .setIdentifier('storm-liquor')\r\n    .setDescription(\r\n      <>\r\n        <p>\r\n          La liqueur des tempêtes est le résultat d'une macération de marterage\r\n          pendant au minimum deux semaines. Le résultat est un liquide herbacé\r\n          parcouru de petits éclairs blancs. La liqueur des tempêtes est un\r\n          poison connu pour amplifier la colère de l'individu qui la consome au\r\n          point qu'il ne deviennent plus qu'une bête féroce assoiffée de sang.\r\n          Ont dit de ceux consumé par la rage de la liqueur des tempêtes qu'ils\r\n          meurent souvent abbatu d'un éclair.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Rage.</strong> La rage est un statut durant lequel un individu\r\n          succombe à une forme de colère pure jaillissant du plus profond de ses\r\n          entrailles. La victime de la rage perd toujours un round pendant\r\n          lequel il se sent perdre progressivement le contrôle de lui-même, il\r\n          peut tenter d'y résister moyennant un jet d'opposition entre son\r\n          contrôle et un degré de difficulté de 15 points. Le degré de\r\n          difficulté peut être réduit de 5 points si la victime est déjà sous\r\n          l'effet d'un calmant.\r\n        </p>\r\n\r\n        <p>\r\n          Un personnage en état de rage gagne 4 points de force, 4 points\r\n          d'agilité, 2 points de maîtrise dans tous les types d'armes et 1 point\r\n          de vie supplémentaire tous les deux points de vie qu'il possède déjà.\r\n          Un personnage en état de rage ne se contrôle plus et ne sait plus\r\n          faire la différence entre ami et ennemis. Un personnage subissant la\r\n          rage cherchera donc toujours à frapper l'individu le plus proche de\r\n          lui. La victime de l'effet de la rage peut toujours tenter de dévier\r\n          de cible en passant au deuxième individu le plus proche de lui, puis\r\n          au troisième et ainsi de suite en réalisant à chaque fois un jet\r\n          d'opposition entre son contrôle et un degré de difficulté de 15\r\n          points plus 2 points par personnage déjà ignoré de cette manière\r\n          durant le round. Un personnage sous l'effet de rage ne peut plus\r\n          utiliser ni de consommables ni de sorts.\r\n        </p>\r\n\r\n        <p>\r\n          La rage peut être calmée via l'utilisation d'un effet calmant. Le\r\n          joueur peut alors tenter de résister au calmant en réalisant un jet\r\n          de volonté de degré de difficulté de 5 points plus 5 points par charge\r\n          de calmant déjà injectée. Une fois la rage passée le personnage doit\r\n          réaliser un jet de constitution de degré de difficulté 15, si ce jet\r\n          échoue, le personnage devient alors fatigué. Quand un personnage en\r\n          état de rage reviens à la normale, il perd alors tous les points de\r\n          vie bonus qu'il possédait, si le nombre de points de vie qui en\r\n          résulte est alors inférieure à zéro, les points de vie du personnage\r\n          sont alors considérés comme valant zéro.\r\n        </p>\r\n      </>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Rage</>)\r\n        .setCost(1)\r\n        .setDuration(<>2<Unit>r</Unit> + 1<Unit>r</Unit> × ¼Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Chance -2</>)\r\n        .setCost(0)\r\n        .setDuration(<>5<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Bestialité +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>~</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const SunriseInfusion : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Infusion de l\\'aube')\r\n    .setIdentifier('sunrise-infusion')\r\n    .setDescription(\r\n      <p>\r\n        L'infusion de l'aube est une solution de baies d'hélénite portée à\r\n        ébulition pendant une petite dizaine de minute. Ce liquide couleur\r\n        d'ambre est connu pour son goût fruité. Il était consommé par les\r\n        familles de paysant à l'aube comme tonique pour bien démarrer les\r\n        longues journées de travail. La rumeur dit aussi que cette infusion\r\n        adoucit le destin et porte bonheur, une théorie qui n'a cependant jamais\r\n        sorti personne de la misère.\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Tonique</>)\r\n        .setCost(1)\r\n        .setDuration(<>5<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Chance +1</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const ThiefBlessing : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Bénédiction du voleur')\r\n    .setIdentifier('thief-blessing')\r\n    .setDescription(\r\n      <p>\r\n        La bénédiction du voleur est une décoction de baies d'hélénite dans\r\n        l'eau. Elle est connue pour atténuer les doutes et provoquer une légère\r\n        trance, comme un brouillard, dans lequel le sujet est plus alerte à des\r\n        petits détails importants. Cette décoction a donc été pendant longtemps\r\n        la marotte des voleurs en tout genre pour guider leur mains vers les\r\n        poches bien remplies des passants.\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Maîtrise de la dague +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Maîtrise du vol à la tire +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Maîtrise du crochetage +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const TreeBlood : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Sang d\\'ent')\r\n    .setIdentifier('wind-syrup')\r\n    .setDescription(\r\n      <>\r\n        <p>\r\n          Le sang d'ent, aussi appellée liqueur d'écorce, est le résultat d'une\r\n          macération d'écorce de pandore préalablement broyée et dissoute dans\r\n          l'eau, il faut au minimum deux semaines de macération. Le résultat est\r\n          un sirop violet sombre virant sur le rouge à la texture sanguine.\r\n        </p>\r\n\r\n        <p>\r\n          Consommer cette liqueur provoquent l'apparition de spirales de tailles\r\n          variables sous la peau lui donnant progressivement l'allure d'une\r\n          couche d'écorce. Cette phase de pousse, telle que décrite dans les\r\n          écrits des premiers hommes, est réputée particulièrement désagréable,\r\n          mais le résultat, c'est à dire une protection naturelle temporaire,\r\n          vaut bien largement le sacrifice d'une certaine aisance de mouvement\r\n          dû à la raideur de la croute protectrice. Quand le sang d'ent arrête\r\n          de faire effet la peau fane et tombe exposant une nouvelle couche de\r\n          peau neuve.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Peau d'écorce.</strong> La peau d'écorce est un effet complexe.\r\n          Après un round de pousse, elle apporte 4 points d'armure\r\n          supplémentaire au sujet de l'effet pour 1 <Unit>round</Unit> × ¼Qa.\r\n          Cette armure est considéré comme à même la peau, et est donc sous\r\n          toute couche d'armure supplémentaire. Quand la peau d'écorce fane, le\r\n          personnage doit réussir un jet d'opposition de constitution de degré\r\n          de difficulté 15, si le jet d'opposition échoue le personnage subit le\r\n          statut <em>fatigué</em> à cause du sang drainé par le champignon. Ce\r\n          statut peut être supprimé temporairement par la consommation d'un\r\n          effet tonique. Quand les effets de la peau d'écorce disparraissent le\r\n          sujet de l'effet perds l'ensemble des points d'armure restant relatifs\r\n          à la peau d'écorce.\r\n        </p>\r\n      </>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Peau d'écorce</>)\r\n        .setCost(1)\r\n        .setDuration(<>1<Unit>r</Unit> × ¼Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Dextérité -2</>)\r\n        .setCost(0)\r\n        .setDuration(<>5<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Maîtrise des armures lourdes +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const WarriorBlessing : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Bénédiction du guerrier')\r\n    .setIdentifier('warrior-blessing')\r\n    .setDescription(\r\n      <p>\r\n        La bénédiction du guerrier est une décoction de marterage dans l'eau.\r\n        Elle a longtemps été utilisé pour augmenter les performances de petits\r\n        groupes de guerrier d'élite et de gardes du corps, dans certaines\r\n        sociétés c'était aussi une drogue très disputés par les gladiateurs\r\n        soucieux de sortir vivant de leur prochain bain de sang.\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Points de charge +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Maîtrise du marteau de guerre +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Maîtrise de la hache de guerre +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>10<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const WindSyrup : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Sirroco')\r\n    .setIdentifier('wind-syrup')\r\n    .setDescription(\r\n      <p>\r\n        Le sirroco, aussi appellée sirop de vent, est le résultat d'une\r\n        macération de plumeaux de pégases préalablement broyés et disous dans\r\n        l'eau, il faut au minimum deux semaines de macération. Cette solution,\r\n        au goût légèrement acidulé et frais est connue pour donner un grand\r\n        sentiment de liberté à celui qui la consomme.\r\n      </p>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Maîtrise de l'esquive +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>5<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Force -2</>)\r\n        .setCost(0)\r\n        .setDuration(<>5<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Maîtrise de l'acrobatie +2</>)\r\n        .setCost(1)\r\n        .setDuration(<>5<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Hauteur des sauts +3m (Qa {'>'} 12)</>)\r\n        .setCost(1)\r\n        .setDuration(<>5<Unit>m</Unit> × Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","export { BloodDance } from './BloodDance'\r\nexport { BloodyBellsInfusion } from './BloodyBellsInfusion'\r\nexport { CeruleanInfusion } from './CeruleanInfusion'\r\nexport { CourrierBlessing } from './CourrierBlessing'\r\nexport { DreamstarInfusion } from './DreamstarInfusion'\r\nexport { GoldenSun } from './GoldenSun'\r\nexport { GreenleavesCurse } from './GreenleavesCurse'\r\nexport { GreenleavesInfusion } from './GreenleavesInfusion'\r\nexport { GreenleavesPurifier } from './GreenleavesPurifier'\r\nexport { HunterBlessing } from './HunterBlessing'\r\nexport { MercenaryBlessing } from './MercenaryBlessing'\r\nexport { MorpheaNectar } from './MorpheaNectar'\r\nexport { NobleBlood } from './NobleBlood'\r\nexport { PandoraInfusion } from './PandoraInfusion'\r\nexport { ParagonBlessing } from './ParagonBlessing'\r\nexport { PegasusInfusion } from './PegasusInfusion'\r\nexport { SkyhammerInfusion } from './SkyhammerInfusion'\r\nexport { SquireBlessing } from './SquireBlessing'\r\nexport { StormLiquor } from './StormLiquor'\r\nexport { SunriseInfusion } from './SunriseInfusion'\r\nexport { ThiefBlessing } from './ThiefBlessing'\r\nexport { TreeBlood } from './TreeBlood'\r\nexport { WarriorBlessing } from './WarriorBlessing'\r\nexport { WindSyrup } from './WindSyrup'\r\n\r\nimport { BloodDance } from './BloodDance'\r\nimport { BloodyBellsInfusion } from './BloodyBellsInfusion'\r\nimport { CeruleanInfusion } from './CeruleanInfusion'\r\nimport { CourrierBlessing } from './CourrierBlessing'\r\nimport { DreamstarInfusion } from './DreamstarInfusion'\r\nimport { GoldenSun } from './GoldenSun'\r\nimport { GreenleavesCurse } from './GreenleavesCurse'\r\nimport { GreenleavesInfusion } from './GreenleavesInfusion'\r\nimport { GreenleavesPurifier } from './GreenleavesPurifier'\r\nimport { HunterBlessing } from './HunterBlessing'\r\nimport { MercenaryBlessing } from './MercenaryBlessing'\r\nimport { MorpheaNectar } from './MorpheaNectar'\r\nimport { NobleBlood } from './NobleBlood'\r\nimport { PandoraInfusion } from './PandoraInfusion'\r\nimport { ParagonBlessing } from './ParagonBlessing'\r\nimport { PegasusInfusion } from './PegasusInfusion'\r\nimport { SkyhammerInfusion } from './SkyhammerInfusion'\r\nimport { SquireBlessing } from './SquireBlessing'\r\nimport { StormLiquor } from './StormLiquor'\r\nimport { SunriseInfusion } from './SunriseInfusion'\r\nimport { ThiefBlessing } from './ThiefBlessing'\r\nimport { TreeBlood } from './TreeBlood'\r\nimport { WarriorBlessing } from './WarriorBlessing'\r\nimport { WindSyrup } from './WindSyrup'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\n\r\nexport const ALL : AlchemicMaterial[] = [\r\n  BloodDance,\r\n  BloodyBellsInfusion,\r\n  CeruleanInfusion,\r\n  CourrierBlessing,\r\n  DreamstarInfusion,\r\n  GoldenSun,\r\n  GreenleavesCurse,\r\n  GreenleavesInfusion,\r\n  GreenleavesPurifier,\r\n  HunterBlessing,\r\n  MercenaryBlessing,\r\n  MorpheaNectar,\r\n  NobleBlood,\r\n  PandoraInfusion,\r\n  ParagonBlessing,\r\n  PegasusInfusion,\r\n  SkyhammerInfusion,\r\n  SquireBlessing,\r\n  StormLiquor,\r\n  SunriseInfusion,\r\n  ThiefBlessing,\r\n  TreeBlood,\r\n  WarriorBlessing,\r\n  WindSyrup\r\n]\r\n","import { IdentifierSet } from '@cedric-demongivert/gl-tool-collection'\r\nimport { Pack } from '@cedric-demongivert/gl-tool-collection'\r\nimport { PackSet } from '@cedric-demongivert/gl-tool-collection'\r\nimport { Sequence } from '@cedric-demongivert/gl-tool-collection'\r\n\r\nimport { Subject } from './Subject'\r\n\r\nexport class Document {\r\n  /**\r\n  * A set of allocated and available identifiers of the document.\r\n  */\r\n  private _identifiers : IdentifierSet\r\n\r\n  /**\r\n  * A set of subjects of the document.\r\n  */\r\n  private _subjects : Pack<Subject>\r\n\r\n  /**\r\n  * An ordered set of each subject that are a root of this document.\r\n  */\r\n  private _roots : PackSet<number>\r\n\r\n  /**\r\n  * A readonly view of the set of subjects of the document.\r\n  */\r\n  public readonly subjects : Sequence<Subject>\r\n\r\n  /**\r\n  * A readonly view of the set of subjects of the document.\r\n  */\r\n  public readonly roots : Sequence<number>\r\n\r\n  /**\r\n  * Instantiate a new empty document model.\r\n  *\r\n  * @param capacity - The capacity of the model to instantiate in subjects.\r\n  */\r\n  public constructor (capacity : number = 16) {\r\n    this._identifiers = IdentifierSet.allocate(capacity)\r\n    this._subjects    = Pack.any(capacity)\r\n    this._roots       = PackSet.int32(16)\r\n    this.subjects     = this._subjects.view()\r\n    this.roots        = this._roots.view()\r\n  }\r\n\r\n  /**\r\n  * Create and append a new subject into this document.\r\n  *\r\n  * @param [parent = -1] - Identifier of the parent subject of the subject to create.\r\n  *\r\n  * @return The new subject that was created.\r\n  */\r\n  public create (parent : number = -1) : Subject {\r\n    if (parent == null) {\r\n      return this.push(Subject.EMPTY)\r\n    } else {\r\n      const subject : Subject = new Subject()\r\n      subject.parent = parent\r\n      return this.push(subject)\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Define the name of a subject.\r\n  *\r\n  * @param subject - Identifier of the subject to update.\r\n  * @param name - The name to assign to the given subject.\r\n  *\r\n  * @throw Error If the given subject identifier is not assigned to an instance.\r\n  * @throw Error If the subject to update already has a name.\r\n  */\r\n  public defineName (subject : number, name : string) : void {\r\n    const index : number = this._identifiers.indexOf(subject)\r\n\r\n    if (index < 0) {\r\n      throw new Error(\r\n        'Unable to define the name of the subject #' + subject + ' to \"' +\r\n        name + '\" because no subject with the given identifier exists.'\r\n      )\r\n    } else {\r\n      const newSubject : Subject = this._subjects.get(index).clone()\r\n\r\n      if (newSubject.name == null) {\r\n        newSubject.name = name\r\n        this._subjects.set(index, newSubject)\r\n      } else {\r\n        throw new Error(\r\n          'Unable to define the name of the subject #' + subject + ' to \"' +\r\n          name + '\" because the subject already have a name that is \"' +\r\n          newSubject.name + '\".'\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Update the name of a subject.\r\n  *\r\n  * @param subject - Identifier of the subject to update.\r\n  * @param name - The name to assign to the given subject.\r\n  *\r\n  * @throw Error If the given subject identifier is not assigned to an instance.\r\n  * @throw Error If the subject to update does not already have a name.\r\n  */\r\n  public updateName (subject : number, name : string) : void {\r\n    const index : number = this._identifiers.indexOf(subject)\r\n\r\n    if (index < 0) {\r\n      throw new Error(\r\n        'Unable to update the name of the subject #' + subject + ' to \"' +\r\n        name + '\" because no subject with the given identifier exists.'\r\n      )\r\n    } else {\r\n      const newSubject : Subject = this._subjects.get(index).clone()\r\n\r\n      if (newSubject.name == null) {\r\n        throw new Error(\r\n          'Unable to update the name of the subject #' + subject + ' to \"' +\r\n          name + '\" because the subject does not already have a name.'\r\n        )\r\n      } else {\r\n        newSubject.name = name\r\n        this._subjects.set(index, newSubject)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Delete the name of a subject.\r\n  *\r\n  * @param subject - Identifier of the subject to update.\r\n  *\r\n  * @throw Error If the given subject identifier is not assigned to an instance.\r\n  * @throw Error If the subject to update does not already have a name.\r\n  */\r\n  public deleteName (subject : number) : void {\r\n    const index : number = this._identifiers.indexOf(subject)\r\n\r\n    if (index < 0) {\r\n      throw new Error(\r\n        'Unable to delete the name of the subject #' + subject +\r\n        ' because no subject with the given identifier exists.'\r\n      )\r\n    } else {\r\n      const newSubject : Subject = this._subjects.get(index).clone()\r\n\r\n      if (newSubject.name == null) {\r\n        throw new Error(\r\n          'Unable to delete the name of the subject #' + subject +\r\n          ' because the subject does not already have a name.'\r\n        )\r\n      } else {\r\n        newSubject.name = null\r\n        this._subjects.set(index, newSubject)\r\n      }\r\n    }\r\n  }\r\n\r\n  public defineKey (subject : number, key : string) : void {\r\n    const index : number = this._identifiers.indexOf(subject)\r\n\r\n    if (index < 0) {\r\n      throw new Error(\r\n        'Unable to define the key of the subject #' + subject + ' to \"' +\r\n        key + '\" because no subject with the given identifier exists.'\r\n      )\r\n    } else {\r\n      const newSubject : Subject = this._subjects.get(index).clone()\r\n\r\n      if (newSubject.key == null) {\r\n        newSubject.key = key\r\n        this._subjects.set(index, newSubject)\r\n      } else {\r\n        throw new Error(\r\n          'Unable to define the key of the subject #' + subject + ' to \"' +\r\n          key + '\" because the subject already have a key that is \"' +\r\n          newSubject.key + '\".'\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  public updateKey (subject : number, key : string) : void {\r\n    const index : number = this._identifiers.indexOf(subject)\r\n\r\n    if (index < 0) {\r\n      throw new Error(\r\n        'Unable to update the key of the subject #' + subject + ' to \"' +\r\n        key + '\" because no subject with the given identifier exists.'\r\n      )\r\n    } else {\r\n      const newSubject : Subject = this._subjects.get(index).clone()\r\n\r\n      if (newSubject.key == null) {\r\n        throw new Error(\r\n          'Unable to update the key of the subject #' + subject + ' to \"' +\r\n          key + '\" because the subject does not already have a key.'\r\n        )\r\n      } else {\r\n        newSubject.key = key\r\n        this._subjects.set(index, newSubject)\r\n      }\r\n    }\r\n  }\r\n\r\n  public deleteKey (subject : number) : void {\r\n    const index : number = this._identifiers.indexOf(subject)\r\n\r\n    if (index < 0) {\r\n      throw new Error(\r\n        'Unable to delete the key of the subject #' + subject +\r\n        ' because no subject with the given identifier exists.'\r\n      )\r\n    } else {\r\n      const newSubject : Subject = this._subjects.get(index).clone()\r\n\r\n      if (newSubject.key == null) {\r\n        throw new Error(\r\n          'Unable to delete the key of the subject #' + subject +\r\n          ' because the subject does not already have a key.'\r\n        )\r\n      } else {\r\n        newSubject.key = null\r\n        this._subjects.set(index, newSubject)\r\n      }\r\n    }\r\n  }\r\n\r\n  public getParent (subject : Subject) : Subject {\r\n    return this.get(subject.parent)\r\n  }\r\n\r\n  public * walkInChildren (\r\n    subjects : Iterable<number | Subject> = this._roots\r\n  ) : Iterable<Subject> {\r\n    const stack : Subject[] = []\r\n\r\n    for (const subject of subjects) {\r\n      if (typeof subject === 'number') {\r\n        stack.unshift(this.get(subject))\r\n      } else {\r\n        stack.unshift(subject)\r\n      }\r\n    }\r\n\r\n    const cursors : number[] = [0]\r\n\r\n    while (stack.length > 0 || stack.length > 20) {\r\n      const current : Subject = stack[stack.length - 1]\r\n      const cursor : number = cursors[cursors.length - 1]\r\n\r\n      if (cursor < current.children.size) {\r\n        const next : Subject = this.get(current.children.get(cursor))\r\n\r\n        yield next\r\n\r\n        stack.push(next)\r\n        cursors[cursors.length - 1] += 1\r\n        cursors.push(0)\r\n      } else {\r\n        stack.pop()\r\n        cursors.pop()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Push the given subject into this document.\r\n  *\r\n  * @param subject - A subject to push into the document.\r\n  *\r\n  * @return An updated version of the given subject model.\r\n  */\r\n  public push (subject : Subject) : Subject {\r\n    const result : Subject = subject.clone()\r\n\r\n    if (this._identifiers.capacity === this._identifiers.size) {\r\n      this._identifiers.reallocate(this._identifiers.capacity * 2)\r\n      this._subjects.reallocate(this._identifiers.capacity)\r\n    }\r\n\r\n    result.identifier = this._identifiers.next()\r\n    this._subjects.push(result)\r\n\r\n    this.updateNewSubjectParentChildrenRelationship(result)\r\n    this.updateNewSubjectChildrenParentRelationship(result)\r\n\r\n    return result\r\n  }\r\n\r\n  private updateNewSubjectParentChildrenRelationship (\r\n    subject : Subject\r\n  ) : void {\r\n    if (subject.parent < 0) {\r\n      this._roots.add(subject.identifier)\r\n    } else {\r\n      const parent : Subject = this.get(subject.parent).clone()\r\n      parent.children.add(subject.identifier)\r\n      this._update(parent)\r\n    }\r\n  }\r\n\r\n  private updateNewSubjectChildrenParentRelationship (\r\n    subject : Subject\r\n  ) : void {\r\n    for (const children of subject.children) {\r\n      const newChildren : Subject = this.get(children).clone()\r\n      const oldParent : number = newChildren.parent\r\n      newChildren.parent = subject.identifier\r\n\r\n      if (oldParent < 0) {\r\n        this._roots.delete(children)\r\n      } else {\r\n        const oldParentInstance : Subject = this.get(oldParent).clone()\r\n        oldParentInstance.children.delete(children)\r\n        this._update(oldParentInstance)\r\n      }\r\n\r\n      this._update(newChildren)\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Update an existing subject.\r\n  *\r\n  * @param subject - The new version of an existing subject.\r\n  */\r\n  public update (subject : Subject) : void {\r\n    const index : number = this._identifiers.indexOf(subject.identifier)\r\n\r\n    if (index < 0) {\r\n      throw new Error(\r\n        'Unable to update the subject #' + subject.identifier + ' because no ' +\r\n        'subject with the given identifier exists into this document.'\r\n      )\r\n    } else {\r\n      const oldSubject : Subject = this._subjects.get(index)\r\n\r\n      this.updateParentChildrenRelationship(subject, oldSubject)\r\n      this.updateChildrenParentRelationship(subject, oldSubject)\r\n      this._subjects.set(index, subject)\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Update an existing subject.\r\n  *\r\n  * @param subject - The new version of an existing subject.\r\n  */\r\n  public _update (subject : Subject) : void {\r\n    const index : number = this._identifiers.indexOf(subject.identifier)\r\n    this._subjects.set(index, subject)\r\n  }\r\n\r\n  /**\r\n  * Update the children / parent relationship of an updated subject.\r\n  */\r\n  private updateChildrenParentRelationship (\r\n    newSubject : Subject,\r\n    oldSubject : Subject\r\n  ) : void {\r\n    for (const children of oldSubject.children) {\r\n      if (!newSubject.children.has(children)) {\r\n        const oldChildren : Subject = this.get(children).clone()\r\n        oldChildren.parent = -1\r\n\r\n        this._update(oldChildren)\r\n        this._roots.add(children)\r\n      }\r\n    }\r\n\r\n    for (const children of newSubject.children) {\r\n      if (!oldSubject.children.has(children)) {\r\n        const newChildren : Subject = this.get(children).clone()\r\n        const oldParent : number = newChildren.parent\r\n        newChildren.parent = newSubject.identifier\r\n\r\n        if (oldParent < 0) {\r\n          this._roots.delete(children)\r\n        } else {\r\n          const oldParentInstance : Subject = this.get(oldParent).clone()\r\n          oldParentInstance.children.delete(children)\r\n          this._update(oldParentInstance)\r\n        }\r\n\r\n        this._update(newChildren)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Update the parent / children relationship of an updated subject.\r\n  */\r\n  private updateParentChildrenRelationship (\r\n    newSubject : Subject,\r\n    oldSubject : Subject\r\n  ) : void {\r\n    if (oldSubject.parent !== newSubject.parent) {\r\n      if (oldSubject.parent < 0) {\r\n        this._roots.delete(oldSubject.identifier)\r\n      } else {\r\n        const oldParent : Subject = this.get(oldSubject.parent).clone()\r\n        oldParent.children.delete(oldSubject.identifier)\r\n        this._update(oldParent)\r\n      }\r\n\r\n      if (newSubject.parent < 0) {\r\n        this._roots.add(newSubject.identifier)\r\n      } else {\r\n        const newParent : Subject = this.get(newSubject.parent).clone()\r\n        newParent.children.add(newSubject.identifier)\r\n        this._update(newParent)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Return the depth of a subject into this document.\r\n  *\r\n  * @param subject - A subject to check.\r\n  *\r\n  * @return The depth of the given subject into this document.\r\n  */\r\n  public getDepth (subject : Subject) : number {\r\n    let result : number = 0\r\n    let current : Subject = subject\r\n\r\n    while (current.parent >= 0) {\r\n      result += 1\r\n      current = this.get(current.parent)\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  /**\r\n  * Search and return a subject of this document by using it's identifier.\r\n  *\r\n  * @param identifier - Identifier of the subject to search.\r\n  *\r\n  * @return The subject with the given identifier.\r\n  */\r\n  public get (identifier : number) : Subject {\r\n    const index : number = this._identifiers.indexOf(identifier)\r\n    return index < 0 ? undefined : this._subjects.get(index)\r\n  }\r\n\r\n  /**\r\n  * @return A new instance of document model that is a copy of this one.\r\n  */\r\n  public clone () : Document {\r\n    const result : Document = new Document(this._identifiers.capacity)\r\n\r\n    result._identifiers.copy(this._identifiers)\r\n    result._subjects.copy(this._subjects)\r\n    result._roots.copy(this._roots)\r\n\r\n    return result\r\n  }\r\n\r\n  /**\r\n  * Attach the given subject to the given parent.\r\n  *\r\n  * @param subject - The subject to attach to a parent.\r\n  * @param parent - The parent subject.\r\n  */\r\n  /*\r\n  public attach (subject : Subject, parent : Subject) : void {\r\n    if (subject.parent >= 0) {\r\n      const oldParent : Subject = this.get(subject.parent)\r\n\r\n      oldParent.children.delete(subject.identifier)\r\n      subject.parent = -1\r\n    }\r\n\r\n    if (parent) {\r\n      parent.children.add(subject.identifier)\r\n      subject.parent = parent.identifier\r\n      this._roots.delete(subject.identifier)\r\n    } else {\r\n      this._roots.add(subject.identifier)\r\n    }\r\n  }\r\n  */\r\n\r\n  /**\r\n  * Detach the given subject from it's current parent.\r\n  *\r\n  * @param subject - The subject to detach.\r\n  */\r\n  /*\r\n  public detach (subject : Subject) {\r\n    this.attach(subject, null)\r\n  }\r\n  */\r\n\r\n  /**\r\n  * @see Object.equals\r\n  */\r\n  public equals (other : any) : boolean {\r\n    if (other == null) return false\r\n    if (other === this) return true\r\n\r\n    if (other instanceof Document) {\r\n      return this._identifiers.equals(other._identifiers) &&\r\n             this._subjects.equals(other._subjects) &&\r\n             this._roots.equals(other._roots)\r\n    }\r\n\r\n    return false\r\n  }\r\n}\r\n","export type DocumentAction = string\r\n\r\nexport namespace DocumentAction {\r\n  export const CREATE_SUBJECT : DocumentAction = 'document:subject:create'\r\n  export const DELETE_SUBJECT : DocumentAction = 'document:subject:delete'\r\n  export const DEFINE_NAME : DocumentAction = 'document:name:define'\r\n  export const UPDATE_NAME : DocumentAction = 'document:name:update'\r\n  export const DELETE_NAME : DocumentAction = 'document:name:delete'\r\n  export const DEFINE_KEY : DocumentAction = 'document:key:define'\r\n  export const UPDATE_KEY : DocumentAction = 'document:key:update'\r\n  export const DELETE_KEY : DocumentAction = 'document:key:delete'\r\n\r\n  export const ALL : DocumentAction[] = [\r\n    CREATE_SUBJECT,\r\n    DELETE_SUBJECT,\r\n    DEFINE_NAME,\r\n    UPDATE_NAME,\r\n    DELETE_NAME,\r\n    DEFINE_KEY,\r\n    UPDATE_KEY,\r\n    DELETE_KEY\r\n  ]\r\n}\r\n","import { DocumentAction } from './DocumentAction'\r\nimport { Subject } from './Subject'\r\n\r\nexport type DocumentEvent = { type: DocumentAction, payload?: any }\r\n\r\nexport namespace DocumentEvent {\r\n  /**\r\n  * Event for the creation of a new subject into a document.\r\n  */\r\n  export type SubjectCreationEvent = {\r\n    type: DocumentAction,\r\n    payload: { parent: number },\r\n    payback: Subject\r\n  }\r\n\r\n  /**\r\n  * Event for the creation of a new subject into a document.\r\n  */\r\n  export type SubjectDeletionEvent = {\r\n    type: DocumentAction,\r\n    payload: { subject: number }\r\n  }\r\n\r\n  /**\r\n  * Event for updating the name of a subject.\r\n  */\r\n  export type NameEvent = {\r\n    type: DocumentAction,\r\n    payload: { subject: number, name?: string }\r\n  }\r\n\r\n  /**\r\n  * Event for updating the name of a subject.\r\n  */\r\n  export type KeyEvent = {\r\n    type: DocumentAction,\r\n    payload: { subject: number, key?: string }\r\n  }\r\n\r\n  /**\r\n  * Create a new event for creating a subject into a document.\r\n  *\r\n  * @param [parent = -1] - Identifier of the parent subject of the subject to create.\r\n  *\r\n  * @return An event for creating a subject into a document.\r\n  */\r\n  export function createSubject (parent : number = -1) : SubjectCreationEvent {\r\n    return {\r\n      type: DocumentAction.CREATE_SUBJECT,\r\n      payload: { parent },\r\n      payback: null\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Create a new event for deleting a subject from a document.\r\n  *\r\n  * @param subject - Identifier of the subject to delete.\r\n  *\r\n  * @return An event for deleting a subject from a document.\r\n  */\r\n  export function deleteSubject (subject : number) : SubjectDeletionEvent {\r\n    return {\r\n      type: DocumentAction.CREATE_SUBJECT,\r\n      payload: { subject }\r\n    }\r\n  }\r\n\r\n  export function defineName (subject : number, name : string) : NameEvent {\r\n    return {\r\n      type: DocumentAction.DEFINE_NAME,\r\n      payload: { subject, name }\r\n    }\r\n  }\r\n\r\n  export function updateName (subject : number, name : string) : NameEvent {\r\n    return {\r\n      type: DocumentAction.UPDATE_NAME,\r\n      payload: { subject, name }\r\n    }\r\n  }\r\n\r\n  export function deleteName (subject : number) : NameEvent {\r\n    return {\r\n      type: DocumentAction.DELETE_NAME,\r\n      payload: { subject }\r\n    }\r\n  }\r\n\r\n  export function defineKey (subject : number, key : string) : KeyEvent {\r\n    return {\r\n      type: DocumentAction.DEFINE_KEY,\r\n      payload: { subject, key }\r\n    }\r\n  }\r\n\r\n  export function updateKey (subject : number, key : string) : KeyEvent {\r\n    return {\r\n      type: DocumentAction.UPDATE_KEY,\r\n      payload: { subject, key }\r\n    }\r\n  }\r\n\r\n  export function deleteKey (subject : number) : KeyEvent {\r\n    return {\r\n      type: DocumentAction.DELETE_KEY,\r\n      payload: { subject }\r\n    }\r\n  }\r\n}\r\n","import { DocumentAction } from './DocumentAction'\r\nimport { DocumentEvent } from './DocumentEvent'\r\nimport { Document } from './Document'\r\nimport { Subject } from './Subject'\r\n\r\nexport namespace DocumentReducer {\r\n  /**\r\n  * Create a subject in accordance with the given event into the given document.\r\n  *\r\n  * @param state - A document to update.\r\n  * @param action - An event that describe the action to execute.\r\n  *\r\n  * @return An updated instance copied from the given document.\r\n  */\r\n  function createSubject (\r\n    state : Document,\r\n    action : DocumentEvent.SubjectCreationEvent\r\n  ) : Document {\r\n    const result : Document = state.clone()\r\n\r\n    action.payback = result.create(action.payload.parent)\r\n\r\n    return result\r\n  }\r\n\r\n  function updateName (\r\n    state : Document,\r\n    action : DocumentEvent.NameEvent\r\n  ) : Document {\r\n    const result : Document = state.clone()\r\n\r\n    switch (action.type) {\r\n      case DocumentAction.DEFINE_NAME:\r\n        result.defineName(action.payload.subject, action.payload.name)\r\n        break\r\n      case DocumentAction.UPDATE_NAME:\r\n        result.updateName(action.payload.subject, action.payload.name)\r\n        break\r\n      case DocumentAction.DELETE_NAME:\r\n        result.deleteName(action.payload.subject)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  function updateKey (\r\n    state : Document,\r\n    action : DocumentEvent.KeyEvent\r\n  ) : Document {\r\n    const result : Document = state.clone()\r\n\r\n    switch (action.type) {\r\n      case DocumentAction.DEFINE_KEY:\r\n        result.defineKey(action.payload.subject, action.payload.key)\r\n        break\r\n      case DocumentAction.UPDATE_KEY:\r\n        result.updateKey(action.payload.subject, action.payload.key)\r\n        break\r\n      case DocumentAction.DELETE_KEY:\r\n        result.deleteKey(action.payload.subject)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  /**\r\n  *\r\n  */\r\n  export function reduce (\r\n    state : Document = new Document(),\r\n    action : DocumentEvent\r\n  ) : Document {\r\n    switch (action.type) {\r\n      case DocumentAction.CREATE_SUBJECT:\r\n        return createSubject(state, action as DocumentEvent.SubjectCreationEvent)\r\n      case DocumentAction.DEFINE_NAME:\r\n      case DocumentAction.UPDATE_NAME:\r\n      case DocumentAction.DELETE_NAME:\r\n        return updateName(state, action as DocumentEvent.NameEvent)\r\n      case DocumentAction.DEFINE_KEY:\r\n      case DocumentAction.UPDATE_KEY:\r\n      case DocumentAction.DELETE_KEY:\r\n        return updateKey(state, action as DocumentEvent.KeyEvent)\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n}\r\n","import { ReactElement } from 'react'\r\n\r\nimport { PackSet } from '@cedric-demongivert/gl-tool-collection'\r\nimport { NativeSet } from '@cedric-demongivert/gl-tool-collection'\r\n\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\n\r\nexport class Subject {\r\n  /**\r\n  * Identifier of the parent subject of this subject.\r\n  */\r\n  public parent : number\r\n\r\n  /**\r\n  * Unique number that identify this subject into it's parent document.\r\n  */\r\n  public identifier : number\r\n\r\n  /**\r\n  * Unique key associated to this subject.\r\n  */\r\n  public key : string\r\n\r\n  /**\r\n  * Name of this subject.\r\n  */\r\n  public name : string\r\n\r\n  /**\r\n  * A set of keywords related to this subject.\r\n  */\r\n  public keywords : NativeSet<string>\r\n\r\n  /**\r\n  * Identifier of each subject that are a children of this subject.\r\n  */\r\n  public children : PackSet<number>\r\n\r\n  /**\r\n  * The content of this subject.\r\n  */\r\n  public content : () => ReactElement<SubjectContent>\r\n\r\n  /**\r\n  * The summary of this subject.\r\n  */\r\n  public summary : () => ReactElement<SubjectSummary>\r\n\r\n  /**\r\n  * Instantiate a new subject instance.\r\n  */\r\n  public constructor () {\r\n    this.parent     = -1\r\n    this.identifier = 0\r\n    this.key        = null\r\n    this.name       = null\r\n    this.summary    = null\r\n    this.content    = null\r\n    this.keywords   = NativeSet.any()\r\n    this.children   = PackSet.uint32(16)\r\n  }\r\n  \r\n  /**\r\n  * @return A new subject model that is a copy of this one\r\n  */\r\n  public clone () : Subject {\r\n    const result : Subject = new Subject()\r\n\r\n    result.parent     = this.parent\r\n    result.identifier = this.identifier\r\n    result.key        = this.key\r\n    result.name       = this.name\r\n    result.summary    = this.summary\r\n    result.content    = this.content\r\n    result.keywords.copy(this.keywords)\r\n    result.children.copy(this.children)\r\n\r\n    return result\r\n  }\r\n\r\n  /**\r\n  * @see Object.equals\r\n  */\r\n  public equals (other : any) : boolean {\r\n    if (other == null) return false\r\n    if (other === this) return true\r\n\r\n    if (other instanceof Subject) {\r\n      return other.parent === this.parent &&\r\n             other.identifier === this.identifier &&\r\n             other.key === this.key &&\r\n             other.name === this.name &&\r\n             other.summary === this.summary &&\r\n             other.content === this.content &&\r\n             other.keywords.equals(this.keywords) &&\r\n             other.children.equals(this.children)\r\n    }\r\n\r\n    return false\r\n  }\r\n}\r\n\r\nexport namespace Subject {\r\n  export const EMPTY : Subject = new Subject()\r\n}\r\n","module.exports = dll_2adc2403d89adc16ead0;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AAEA;AAEA;AAEA;AAAA;AACA;AADA;AACA;AAAA;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AAFA;AAHA;AAOA;AAEA;;;;;;;AAbA;AAAA;AAAA;AAmBA;AAEA;AACA;AACA;AAFA;AAIA;AAEA;AAEA;;;;;;AA7BA;AAAA;AAAA;AAmCA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;;;;AA3CA;AAAA;AAAA;AA+CA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAvDA;AACA;AADA;AAAA;AACA;;AAsEA;AACA;AACA;AAfA;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAaA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAaA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AAGA;AAKA;AAAA;AACA;AADA;AACA;AAEA;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AACA;AACA;AAHA;AAIA;AACA;AAXA;AAAA;AAAA;AAaA;AAEA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAtCA;AAAA;AAAA;AAyCA;AACA;AA1CA;AAAA;AAAA;AA4CA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AApEA;AACA;AADA;AAAA;AACA;AAsEA;;;;;;;;;;;;;;;;;;;;AChFA;AAEA;AAEA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC5EA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAKA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACrDA;AAEA;AAEA;AAEA;AAGA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC/BA;AAGA;AAEA;AAEA;AAGA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAEA;AACA;AAGA;AAEA;AAEA;AAGA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC/DA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;;AAOA;AACA;AACA;AARA;;;;;;;;;;;;;;;;;;;;ACjBA;AAGA;AAEA;AACA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACvBA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACfA;AAGA;AAEA;AACA;AAGA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AAGA;AAIA;AACA;AAEA;AAAA;AACA;AADA;AACA;AAAA;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AADA;AAHA;AAMA;AAEA;;;;;AAZA;AAAA;AAAA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AAEA;;;;AA1CA;AAAA;AAAA;AA6CA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;;;;AA3DA;AAAA;AAAA;AA+DA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;;;;AAzEA;AAAA;AAAA;AA6EA;AAKA;AAlFA;AACA;AADA;AAAA;AACA;AAoFA;AACA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAcA;AACA;;AASA;AACA;AACA;AAVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7HA;AACA;AAGA;AAEA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAPA;AACA;AADA;AAAA;AACA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AAGA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;AACA;;;AAGA;AACA;AACA;;;AAEA;AACA;AAMA;;;AAEA;AACA;AACA;AAMA;AACA;;;AAEA;AACA;AAGA;;;;AAhCA;AACA;AAkCA;AACA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAcA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEA;AAIA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AAHA;AACA;AADA;AAAA;AAMA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AAKA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AAHA;AACA;AADA;AAAA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;AACA;;;;;;AAMA;AACA;AAEA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AASA;AAEA;;;;;;AAGA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;;;AAEA;AACA;AAMA;;;AAEA;AACA;AACA;AAMA;AACA;;;AAEA;AACA;AAGA;;;;AA5EA;AACA;AA8EA;AACA;AAUA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAcA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxHA;AAGA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AADA;AACA;AAIA;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AADA;AACA;AADA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAgBA;AAEA;;;;;AA1BA;AAAA;AAAA;AA8BA;AACA;AAEA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AA/CA;AAAA;AAAA;AAmDA;AAAA;AAAA;AAAA;AACA;AAEA;;;;AAtDA;AAAA;AAAA;AA0DA;AAAA;AAAA;AAAA;AACA;AAEA;;;;AA7DA;AAAA;AAAA;AAiEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAxEA;AAAA;AAAA;AA4EA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;;;;AAvFA;AAAA;AAAA;AA0FA;AACA;AAAA;AAIA;AAEA;AACA;AAFA;AADA;AAcA;AA7GA;AACA;AADA;AAAA;AACA;;AAgHA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzHA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;;;;AAOA;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAHA;AAIA;AAEA;;;;;AAjBA;AAAA;AAAA;AAqBA;AACA;AACA;AACA;AAEA;;;;AA1BA;AAAA;AAAA;AA8BA;AACA;AAAA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AApDA;AACA;AADA;AAAA;AACA;AADA;AAKA;AADA;AACA;AAkDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DA;AAGA;AAGA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AAAA;;;AADA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAVA;AACA;AADA;AAAA;AACA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AAXA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAatMA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;;;;;;;;;;;;;;;;;;;;;;ACxDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACtEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACvEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACxDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;AClCA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;ACrFA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;AC1EA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAarCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AC7FA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;ACtFA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACjFA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACzFA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACzFA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;AC7HA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AClKA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;AChHA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;ACpHA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;ACjHA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;ACnFA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;AC5HA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;AC3FA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AC3FA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaerNA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;ACpDA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACttCA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChtCA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAadaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AASA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;ACnJA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxDA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;ACjhIA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACvFA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;AC7EA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACbA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdnvthBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;ACbA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;ACfA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;ACbnCA;AACA;AAoCA;AACA;AACA;AACA;;;;;;AAIA;AACA;AAEA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;AC/HA;AACA;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAPA;AACA;AAOA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AANA;AAMA;AACA;AAfA;AAAA;AAAA;AAgBA;AACA;AACA;AAlBA;AAAA;AAAA;AAoBA;AACA;AArBA;AAAA;AAAA;AAuBA;AACA;AACA;AAzBA;AAAA;AAAA;AA2BA;AACA;AA5BA;AACA;AADA;AAAA;AA8BA;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChxtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AAEA;AACA;;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA1BA;;;;;;;;;;;;ACDA;AAAA;AAAA;AACA;;AAAA;AACA;AACA;AACA;;AAJA;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;;AAAA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhBA;;;;;;;;;;;;;;;;;;;;;ACFA;AAEA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;;AA1BA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAWA;AACA;;AAAA;AACA;AACA;AACA;AAEA;AAMA;AACA;;;AACA;AACA;AACA;AACA;;AAjBA;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AAEA;AAIA;AAQA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA;AAAA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AA1BA;AAAA;AAAA;AA6BA;AACA;AACA;AA/BA;AAAA;AAAA;AAkCA;AACA;AACA;AApCA;AAAA;AAAA;AAuCA;AACA;AACA;AAzCA;AAAA;AAAA;AA4CA;AACA;AACA;AA9CA;AAAA;AAAA;AAiDA;AACA;AACA;AAnDA;AAAA;AAAA;AAsDA;AACA;AACA;AAxDA;AAAA;AAAA;AA2DA;AACA;AACA;AA7DA;AAAA;AAAA;AAgEA;AACA;AACA;AAlEA;AAAA;AAAA;AAqEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AA7EA;AAAA;AAAA;AAgFA;AACA;AAEA;AACA;AApFA;AAAA;AAAA;AAuFA;AACA;AACA;AACA;AACA;AACA;AACA;AA7FA;AAAA;AAAA;AAgGA;AACA;AACA;AACA;AACA;AACA;AACA;AAtGA;AACA;AADA;AAAA;AACA;;AAyGA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;AAfA;;;;;;;;;;;;AChHA;AAAA;AAAA;AAAA;AAAA;AAEA;AAQA;AACA;;AAAA;AACA;AACA;AACA;AAEA;AAGA;AACA;;;AACA;AACA;AACA;AACA;;AAdA;;;;;;;;;;;;;;;;;;;;;;ACVA;AAEA;AAEA;AAKA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AAHA;AAKA;AAjBA;AAAA;AAAA;AAoBA;AACA;AACA;AACA;AAvBA;AAAA;AAAA;AA0BA;AACA;AACA;AA5BA;AAAA;AAAA;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AArCA;AAAA;AAAA;AAwCA;AACA;AACA;AA1CA;AAAA;AAAA;AA6CA;AACA;AACA;AA/CA;AAAA;AAAA;AAkDA;AACA;AACA;AACA;AArDA;AAAA;AAAA;AAwDA;AACA;AAEA;AACA;AA5DA;AAAA;AAAA;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvEA;AACA;AADA;AAAA;AACA;;AA0EA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;AAfA;;;;;;;;;;;;AC9EA;AAAA;AAAA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAUA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AATA;AAWA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AATA;AAWA;AACA;;AAhDA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAKA;AACA;;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;ACpBA;AAEA;AAEA;AACA;AAEA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACxDA;AAEA;AAEA;AACA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;AChCA;AAEA;AAEA;AACA;AAEA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACpEA;AAEA;AAEA;AACA;AAEA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACrDA;AAEA;AAEA;AACA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACnCA;AAEA;AAEA;AACA;AAEA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACnDA;AAEA;AAEA;AACA;AAEA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACpEA;AAEA;AAEA;AACA;AAEA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACnCA;AAEA;AAEA;AACA;AAEA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACtEA;AAEA;AAEA;AACA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACzCA;AAEA;AAEA;AACA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;AC3CA;AAEA;AAEA;AACA;AAEA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAagBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;AC/HA;AAIA;AACA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACvBA;AAEA;AAEA;AACA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACjCA;AAEA;AAEA;AACA;AAEA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACrDA;AAEA;AAEA;AACA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACjCA;AAEA;AAEA;AACA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACnCA;AAEA;AAEA;AACA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;AC1CA;AAEA;AAEA;AACA;AAEA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;AC9EA;AAEA;AAEA;AACA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACpCA;AAEA;AAEA;AACA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;AC3CA;AAEA;AAEA;AACA;AAEA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACtEA;AAEA;AAEA;AACA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;AC1CA;AAEA;AAEA;AACA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AClpDA;AACA;AACA;AAGA;AAEA;AACA;;;;AAKA;;;;AAKA;;;;AAKA;;;;AAKA;;;;AAKA;;;;;AAKA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;AAvCA;AAAA;AAAA;AA8CA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;AAxDA;AAAA;AAAA;AAkEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAKA;AACA;AACA;AAEA;;;;;;;;;;AAzFA;AAAA;AAAA;AAmGA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;AAzHA;AAAA;AAAA;AAkIA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAtJA;AAAA;AAAA;AAyJA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAKA;AACA;AACA;AA9KA;AAAA;AAAA;AAiLA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AArMA;AAAA;AAAA;AAwMA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AA5NA;AAAA;AAAA;AA+NA;AACA;AAhOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAmOA;AAEA;AArOA;AACA;AADA;AAuOA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AA7OA;AAAA;AAAA;AAAA;AAAA;AACA;AA8OA;AACA;AAhPA;AAAA;AAAA;AAAA;AAAA;AACA;AAiPA;AACA;AACA;AApPA;AAAA;AAAA;AAAA;AACA;AAqPA;AAtPA;AAwPA;AACA;AAzPA;AA0PA;AACA;AACA;AA5PA;AAAA;AACA;AADA;AA8PA;AACA;AACA;AAhQA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoQA;;;;;;;;AApQA;AAAA;AAAA;AA4QA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AA1RA;AAAA;AAAA;AA+RA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAtSA;AAAA;AAAA;AA0SA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAEA;;;;;;AA5TA;AAAA;AAAA;AAkUA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;;;;;;AAlVA;AAAA;AAAA;AAwVA;AACA;AAAA;AACA;AAEA;;;;AA5VA;AAAA;AAAA;AAkWA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAWA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AA4BA;AAEA;;;;AAhYA;AAAA;AAAA;AAuYA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;;AA1ZA;AAAA;AAAA;AAkaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;AA7aA;AAAA;AAAA;AAqbA;AACA;AAAA;AACA;AAEA;;;;AAzbA;AAAA;AAAA;AA6bA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;AAMA;;;;;;;;;;;;;;;;;AAmBA;;;;;;AAKA;;;;;;AAMA;;;;AA1eA;AAAA;AAAA;AA8eA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAxfA;AACA;AADA;AAAA;;;;;;;;;;;;ACLA;AAAA;AAAA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAVA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAKA;AACA;;AAAA;;;;AASA;;;;AAQA;;;;AAQA;;;AAeA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAKA;AACA;;;AAQA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;;AAxGA;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;;AAAA;;;;;;;;AAQA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAXA;AACA;AAaA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAXA;AACA;AAaA;AACA;AAEA;;;;;AAGA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAZA;AAcA;AACA;;AAxFA;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AAKA;AACA;;;;AAKA;;;;AAKA;;;;AAKA;;;;AAKA;;;;AAKA;;;;AAKA;;;;AAKA;;;;AAKA;;;AAGA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAvDA;AAAA;AAAA;AA2DA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;AAzEA;AAAA;AAAA;AA6EA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AA5FA;AACA;AADA;AAAA;AACA;;AA+FA;AADA;;;;;;;;;;;;;;;;;;;;;;;ACvGA;;;;A","sourceRoot":""}