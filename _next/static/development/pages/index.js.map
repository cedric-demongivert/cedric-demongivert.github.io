{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///./components/Document.tsx","webpack:///./components/LocalSummary.tsx","webpack:///./components/ParentSummary.tsx","webpack:///./components/Summary.tsx","webpack:///./components/subject/Subject.tsx","webpack:///./components/subject/SubjectContent.tsx","webpack:///./components/subject/SubjectIdentifier.tsx","webpack:///./components/subject/SubjectKeyword.tsx","webpack:///./components/subject/SubjectSummary.tsx","webpack:///./components/subject/SubjectTitle.tsx","webpack:///./components/table/Table2D.tsx","webpack:///./components/table/Table2DCell.tsx","webpack:///./components/table/Table2DRow.tsx","webpack:///./content/Content.tsx","webpack:///./content/Summary.tsx","webpack:///./content/alchemy/Alchemy.tsx","webpack:///./content/alchemy/EtherPoisoning.tsx","webpack:///./content/alchemy/Introduction.tsx","webpack:///./content/alchemy/Processing.tsx","webpack:///./content/alchemy/index.tsx","webpack:///./content/characteristics/Constitution.tsx","webpack:///./content/characteristics/Control.tsx","webpack:///./content/characteristics/Dexterity.tsx","webpack:///./content/characteristics/Luck.tsx","webpack:///./content/characteristics/Power.tsx","webpack:///./content/characteristics/Strength.tsx","webpack:///./content/characteristics/characteristics.tsx","webpack:///./content/characteristics/index.ts","webpack:///./content/echoes/Affinity.tsx","webpack:///./content/echoes/Categories.tsx","webpack:///./content/echoes/Echoes.tsx","webpack:///./content/echoes/Introduction.tsx","webpack:///./content/echoes/Manifestations.tsx","webpack:///./content/echoes/Mastery.tsx","webpack:///./content/echoes/index.tsx","webpack:///./content/feats/AcrobaticDodgingFeat.tsx","webpack:///./content/feats/AcrobaticParryFeat.tsx","webpack:///./content/feats/AtlasBurdenFeat.tsx","webpack:///./content/feats/BloodBathFeat.tsx","webpack:///./content/feats/BloodThirstFeat.tsx","webpack:///./content/feats/BullChargeFeat.tsx","webpack:///./content/feats/CatGraceFeat.tsx","webpack:///./content/feats/ChainAttackFeat.tsx","webpack:///./content/feats/ChainDodgeFeat.tsx","webpack:///./content/feats/CounterAttackFeat.tsx","webpack:///./content/feats/DefensiveStyleFeat.tsx","webpack:///./content/feats/DiehardFeat.tsx","webpack:///./content/feats/DoubleSkinFeat.tsx","webpack:///./content/feats/EagleChargeFeat.tsx","webpack:///./content/feats/Feats.tsx","webpack:///./content/feats/FlashDodgeFeat.tsx","webpack:///./content/feats/FullDodgeFeat.tsx","webpack:///./content/feats/HackerFeat.tsx","webpack:///./content/feats/TwistedFeat.tsx","webpack:///./content/feats/WindDanceFeat.tsx","webpack:///./content/feats/index.ts","webpack:///./content/knowledges/Knowledges.tsx","webpack:///./content/knowledges/index.ts","webpack:///./content/masteries/Introduction.tsx","webpack:///./content/masteries/Masteries.tsx","webpack:///./content/masteries/armorMasteries/ArmorMasteries.tsx","webpack:///./content/masteries/armorMasteries/HeavyArmorMastery.tsx","webpack:///./content/masteries/armorMasteries/LightArmorMastery.tsx","webpack:///./content/masteries/armorMasteries/MediumArmorMastery.tsx","webpack:///./content/masteries/armorMasteries/index.ts","webpack:///./content/masteries/index.ts","webpack:///./content/masteries/martialStyleMasteries/MartialStyleMasteries.tsx","webpack:///./content/masteries/martialStyleMasteries/OneHandedWeaponFightingMastery.tsx","webpack:///./content/masteries/martialStyleMasteries/TwoHandedWeaponFightingMastery.tsx","webpack:///./content/masteries/martialStyleMasteries/TwoWeaponFightingMastery.tsx","webpack:///./content/masteries/martialStyleMasteries/UnarmedFightingMastery.tsx","webpack:///./content/masteries/martialStyleMasteries/WeaponAndShieldFightingMastery.tsx","webpack:///./content/masteries/martialStyleMasteries/index.ts","webpack:///./content/masteries/supportMasteries/AcrobaticsMastery.tsx","webpack:///./content/masteries/supportMasteries/ClimbingMastery.tsx","webpack:///./content/masteries/supportMasteries/DiscretionMastery.tsx","webpack:///./content/masteries/supportMasteries/DodgeMastery.tsx","webpack:///./content/masteries/supportMasteries/HorseRidingMastery.tsx","webpack:///./content/masteries/supportMasteries/LockPickingMastery.tsx","webpack:///./content/masteries/supportMasteries/PerceptionMastery.tsx","webpack:///./content/masteries/supportMasteries/SearchMastery.tsx","webpack:///./content/masteries/supportMasteries/SleightOfHandMastery.tsx","webpack:///./content/masteries/supportMasteries/SupportMasteries.tsx","webpack:///./content/masteries/supportMasteries/SwimingMastery.tsx","webpack:///./content/masteries/supportMasteries/index.ts","webpack:///./content/masteries/weaponMasteries/AxeMastery.tsx","webpack:///./content/masteries/weaponMasteries/BastardSwordMastery.tsx","webpack:///./content/masteries/weaponMasteries/DaggerMastery.tsx","webpack:///./content/masteries/weaponMasteries/HammerMastery.tsx","webpack:///./content/masteries/weaponMasteries/HeavyCrossbowMastery.tsx","webpack:///./content/masteries/weaponMasteries/LightCrossbowMastery.tsx","webpack:///./content/masteries/weaponMasteries/LongBowMastery.tsx","webpack:///./content/masteries/weaponMasteries/LongSwordMastery.tsx","webpack:///./content/masteries/weaponMasteries/RodMastery.tsx","webpack:///./content/masteries/weaponMasteries/ShieldMastery.tsx","webpack:///./content/masteries/weaponMasteries/ShortBowMastery.tsx","webpack:///./content/masteries/weaponMasteries/ShortSwordMastery.tsx","webpack:///./content/masteries/weaponMasteries/SpearMastery.tsx","webpack:///./content/masteries/weaponMasteries/WarAxeMastery.tsx","webpack:///./content/masteries/weaponMasteries/WarHammerMastery.tsx","webpack:///./content/masteries/weaponMasteries/WeaponMasteries.tsx","webpack:///./content/masteries/weaponMasteries/index.ts","webpack:///./content/rules/core/AdversialTestRule.tsx","webpack:///./content/rules/core/CooperationRule.tsx","webpack:///./content/rules/core/CoreRules.tsx","webpack:///./content/rules/core/CriticalHitRule.tsx","webpack:///./content/rules/core/RerollRule.tsx","webpack:///./content/rules/core/SelfResolutionRule.tsx","webpack:///./content/rules/core/SituationalDiceRule.tsx","webpack:///./content/rules/core/index.ts","webpack:///./content/rules/fight/ArmorRule.tsx","webpack:///./content/rules/fight/AttackRule.tsx","webpack:///./content/rules/fight/ComaRule.tsx","webpack:///./content/rules/fight/DamageRule.tsx","webpack:///./content/rules/fight/DeathRule.tsx","webpack:///./content/rules/fight/FightRules.tsx","webpack:///./content/rules/fight/HealthPointRule.tsx","webpack:///./content/rules/fight/InitiativeRule.tsx","webpack:///./content/rules/fight/Introduction.tsx","webpack:///./content/rules/fight/WeigthPointRule.tsx","webpack:///./content/rules/fight/WoundsRule.tsx","webpack:///./content/rules/fight/index.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/@cedric-demongivert/gl-tool-collection/index.js","webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js","webpack:///./node_modules/next/dist/next-server/lib/amp-context.js","webpack:///./node_modules/next/dist/next-server/lib/amp.js","webpack:///./node_modules/next/dist/next-server/lib/head-manager-context.js","webpack:///./node_modules/next/dist/next-server/lib/head.js","webpack:///./node_modules/next/dist/next-server/lib/side-effect.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/inherits.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js","webpack:///delegated ./node_modules/react/index.js from dll-reference dll_2adc2403d89adc16ead0","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./pages/index.tsx","webpack:///./typescript/redux/document/Document.ts","webpack:///./typescript/redux/document/DocumentAction.ts","webpack:///./typescript/redux/document/DocumentEvent.ts","webpack:///./typescript/redux/document/DocumentReducer.ts","webpack:///./typescript/redux/document/Subject.ts","webpack:///external \"dll_2adc2403d89adc16ead0\""],"sourcesContent":["import React from 'react'\r\nimport { PureComponent } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport { ReactElement } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport { Document as DocumentModel } from '../typescript/redux/document/Document'\r\nimport { DocumentEvent } from '../typescript/redux/document/DocumentEvent'\r\nimport { DocumentReducer } from '../typescript/redux/document/DocumentReducer'\r\n\r\nexport class Document extends PureComponent<Document.Properties, Document.State> {\r\n  /**\r\n  * @see PureComponent.constructor\r\n  */\r\n  public constructor (props : Document.Properties, context : any) {\r\n    super(props, context)\r\n\r\n    this.state = {\r\n      document: new DocumentModel(8),\r\n      onChange: this.handleDocumentChange.bind(this)\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Handle an update request of this component document model.\r\n  *\r\n  * @param event - Event that describe the change to operate upon this component document model.\r\n  */\r\n  public handleDocumentChange (event : DocumentEvent, callback ? : () => void) : void {\r\n    this.setState(\r\n      function update (state : Document.State) : Document.State {\r\n        return {\r\n          document: DocumentReducer.reduce(state.document, event),\r\n          onChange: state.onChange\r\n        }\r\n      }, callback\r\n    )\r\n  }\r\n\r\n  /**\r\n  * Handle an update request of this component document model.\r\n  *\r\n  * @param event - Event that describe the change to operate upon this component document model.\r\n  */\r\n  public handleSubjectAllocation (event : DocumentEvent) : void {\r\n    this.setState(function update (state : Document.State) : Document.State {\r\n      return {\r\n        document: DocumentReducer.reduce(state.document, event),\r\n        onChange: state.onChange\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n  * @see PureComponent.render\r\n  */\r\n  public render () : ReactElement {\r\n    const className : string = classNames('document', this.props.className)\r\n    return (\r\n      <Document.Provider value={this.state}>\r\n        <div className={className}>\r\n          { this.props.children }\r\n        </div>\r\n      </Document.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport namespace Document {\r\n  export type ChangeListener = (event : DocumentEvent, callback? : () => void) => void\r\n\r\n  export type Properties = {\r\n    children?: ReactNode,\r\n    className?: string\r\n  }\r\n\r\n  export type State = {\r\n    document: DocumentModel,\r\n    onChange: ChangeListener\r\n  }\r\n\r\n  export const Context : React.Context<State> = React.createContext(null)\r\n  export const Provider : React.Provider<State> = Context.Provider\r\n  export const Consumer : React.Consumer<State> = Context.Consumer\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { Document } from './Document'\r\nimport { Summary } from './Summary'\r\nimport { Subject } from './subject/Subject'\r\n\r\nexport function LocalSummary (props : LocalSummary.Properties) : ReactElement {\r\n  return (\r\n    <Subject.Consumer>{\r\n      (subjectState : Subject.State) => (\r\n        <Document.Consumer>{\r\n          (documentState : Document.State) => (\r\n            <Summary\r\n              subjects={[subjectState.subject]}\r\n              document={documentState.document}\r\n              {...props}\r\n            />\r\n          )\r\n        }</Document.Consumer>\r\n      )\r\n    }</Subject.Consumer>\r\n  )\r\n}\r\n\r\nexport namespace LocalSummary {\r\n  export type Properties = {\r\n    className?: string\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { Document } from './Document'\r\nimport { Summary } from './Summary'\r\nimport { Subject } from './subject/Subject'\r\n\r\nexport function ParentSummary (props : ParentSummary.Properties) : ReactElement {\r\n  return (\r\n    <Subject.Consumer>{\r\n      (subjectState : Subject.State) => (\r\n        <Document.Consumer>{\r\n          (documentState : Document.State) => (\r\n            <Summary\r\n              subjects={[documentState.document.getParent(subjectState.subject)]}\r\n              document={documentState.document}\r\n              {...props}\r\n            />\r\n          )\r\n        }</Document.Consumer>\r\n      )\r\n    }</Subject.Consumer>\r\n  )\r\n}\r\n\r\nexport namespace ParentSummary {\r\n  export type Properties = {\r\n    className?: string\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { PureComponent } from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport { Subject as SubjectModel } from '../typescript/redux/document/Subject'\r\nimport { Document as DocumentModel } from '../typescript/redux/document/Document'\r\n\r\nexport class Summary extends PureComponent<Summary.Properties> {\r\n  private _base : number\r\n\r\n  /**\r\n  * @see PureComponent.constructor\r\n  */\r\n  public constructor (props : Summary.Properties, context : any) {\r\n    super(props, context)\r\n    this.renderElement = this.renderElement.bind(this)\r\n    this._base = 0\r\n  }\r\n\r\n  public renderElement (element : SubjectModel, index : number) : ReactElement {\r\n    const depth : number = this.props.document.getDepth(element)\r\n\r\n    const className : string = classNames(\r\n      'summary-element',\r\n      'summary-element-depth-' + depth\r\n    )\r\n\r\n    if (element.key) {\r\n      return (\r\n        <a\r\n          href={'#' + element.key}\r\n          className={className}\r\n          key={index}\r\n          style={{ paddingLeft: ((depth - this._base) * 10) + 'px' }}\r\n        > { element.name } </a>\r\n      )\r\n    } else {\r\n      return (\r\n        <div\r\n          className={className + ' is-disabled'}\r\n          key={index}\r\n          style={{paddingLeft: ((depth - this._base) * 10) + 'px'}}\r\n        > { element.name } </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  public renderColumn (elements : SubjectModel[]) : ReactNode {\r\n    return elements.map(this.renderElement)\r\n  }\r\n\r\n  public render () : ReactElement {\r\n    const className : string = classNames('summary', this.props.className)\r\n    const content : SubjectModel[] = [\r\n      ...this.props.document.walkInChildren(this.props.subjects)\r\n    ]\r\n\r\n    this._base = content.length > 0 ? content.map(\r\n      (x : SubjectModel) : number => this.props.document.getDepth(x)\r\n    ).reduce(\r\n      (a : number, b : number) : number => Math.min(a, b)\r\n    ) : 0\r\n\r\n    return (\r\n      <div className={className}>\r\n        <div className='row justify-content-center'>\r\n          <div className='col-xs-12 col-md-5'>\r\n            { this.renderColumn(content.slice(0, Math.ceil(content.length / 2))) }\r\n          </div>\r\n          <div className='col-xs-12 col-md-5'>\r\n            { this.renderColumn(content.slice(Math.ceil(content.length / 2))) }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport namespace Summary {\r\n  export type Properties = {\r\n    subjects: Iterable<SubjectModel | number>,\r\n    document: DocumentModel,\r\n    className?: string\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { PureComponent } from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport { Subject as SubjectModel } from '../../typescript/redux/document/Subject'\r\nimport { Document as DocumentModel } from '../../typescript/redux/document/Document'\r\nimport { DocumentEvent } from '../../typescript/redux/document/DocumentEvent'\r\nimport { Document } from '../Document'\r\n\r\nexport class RawSubject extends PureComponent<RawSubject.Properties, Subject.State> {\r\n  /**\r\n  * @see PureComponent.constructor\r\n  */\r\n  public constructor (props : RawSubject.Properties, context : any) {\r\n    super(props, context)\r\n\r\n    this.state = {\r\n      subject: null\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @see PureComponent.render\r\n  */\r\n  public render () : ReactElement {\r\n    if (this.state.subject == null) {\r\n      return null\r\n    }\r\n\r\n    const className : string = classNames('subject', this.props.className)\r\n\r\n    if (this.state.subject.key == null) {\r\n      return (\r\n        <Subject.Provider value={this.state}>\r\n          <div className={className}>\r\n            { this.props.children }\r\n          </div>\r\n        </Subject.Provider>\r\n      )\r\n    } else {\r\n      return (\r\n        <Subject.Provider value={this.state}>\r\n          <div className={className} id={this.state.subject.key}>\r\n            { this.props.children }\r\n          </div>\r\n        </Subject.Provider>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n  * @see PureComponent.componentDidMount\r\n  */\r\n  public componentDidMount () : void {\r\n    let creation : DocumentEvent.SubjectCreationEvent\r\n\r\n    if (this.props.parent) {\r\n      creation = DocumentEvent.createSubject(this.props.parent.identifier)\r\n    } else {\r\n      creation = DocumentEvent.createSubject()\r\n    }\r\n\r\n    this.props.onDocumentChange(creation, () : void => {\r\n      this.setState({ subject: creation.payback })\r\n    })\r\n  }\r\n\r\n  /**\r\n  * @see PureComponent.componentDidUpdate\r\n  */\r\n  public componentDidUpdate (oldProperties : RawSubject.Properties, oldState : Subject.State) : void {\r\n    if (oldProperties.document !== this.props.document && this.state.subject) {\r\n      const oldSubject : SubjectModel = oldState.subject\r\n      const newSubject : SubjectModel = this.props.document.get(oldSubject.identifier)\r\n\r\n      if (newSubject !== oldSubject) {\r\n        this.setState({ subject: newSubject })\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @see PureComponent.componentWillUnmount\r\n  */\r\n  public componentWillUnmount () : void {\r\n    this.props.onDocumentChange(\r\n      DocumentEvent.deleteSubject(\r\n        this.state.subject.identifier\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nnamespace RawSubject {\r\n  export type Properties = {\r\n    document: DocumentModel,\r\n    onDocumentChange: Document.ChangeListener,\r\n    parent?: SubjectModel,\r\n    children?: ReactNode,\r\n    className?: string\r\n  }\r\n}\r\n\r\nexport function Subject (props : Subject.Properties) : ReactElement {\r\n  return (\r\n    <Subject.Consumer>{\r\n      (subjectState : Subject.State) => (\r\n        <Document.Consumer>{\r\n          (documentState : Document.State) => (\r\n            <RawSubject\r\n              parent={subjectState ? subjectState.subject : null}\r\n              document={documentState.document}\r\n              onDocumentChange={documentState.onChange}\r\n              {...props}\r\n            />\r\n          )\r\n        }</Document.Consumer>\r\n      )\r\n    }</Subject.Consumer>\r\n  )\r\n}\r\n\r\nexport namespace Subject {\r\n  export type Properties = {\r\n    children?: ReactNode,\r\n    className?: string\r\n  }\r\n\r\n  export type State = { subject: SubjectModel }\r\n\r\n  export const Context : React.Context<State> = React.createContext(null)\r\n  export const Provider : React.Provider<State> = Context.Provider\r\n  export const Consumer : React.Consumer<State> = Context.Consumer\r\n}\r\n","import React from 'react'\r\nimport { PureComponent } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport { ReactElement } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nexport class SubjectContent extends PureComponent<SubjectContent.Properties> {\r\n  public render () : ReactElement {\r\n    return (\r\n      <div className={classNames('subject-content', this.props.className)}>\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport namespace SubjectContent {\r\n  export type Properties = {\r\n    children: ReactNode,\r\n    className?: string\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { PureComponent } from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { Subject } from './Subject'\r\nimport { Document } from '../Document'\r\nimport { DocumentEvent } from '../../typescript/redux/document/DocumentEvent'\r\nimport { Subject as SubjectModel } from '../../typescript/redux/document/Subject'\r\nimport { Document as DocumentModel } from '../../typescript/redux/document/Document'\r\n\r\nclass RawSubjectIdentifier extends PureComponent<RawSubjectIdentifier.Properties> {\r\n  /**\r\n  * @see React.render\r\n  */\r\n  public render () : ReactElement {\r\n    return null\r\n  }\r\n\r\n  public componentDidMount () {\r\n    this.props.onDocumentChange(\r\n      DocumentEvent.defineKey(\r\n        this.props.subject.identifier,\r\n        this.props.children\r\n      )\r\n    )\r\n  }\r\n\r\n  public componentDidUpdate (oldProps : RawSubjectIdentifier.Properties) {\r\n    if (this.props.children !== oldProps.children) {\r\n      this.props.onDocumentChange(\r\n        DocumentEvent.updateKey(\r\n          this.props.subject.identifier,\r\n          this.props.children\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount () {\r\n    this.props.onDocumentChange(\r\n      DocumentEvent.deleteKey(this.props.subject.identifier)\r\n    )\r\n  }\r\n}\r\n\r\nnamespace RawSubjectIdentifier {\r\n  export type Properties = {\r\n    subject: SubjectModel,\r\n    document: DocumentModel,\r\n    onDocumentChange: Document.ChangeListener\r\n    children: string\r\n  }\r\n}\r\n\r\nexport function SubjectIdentifier (props : SubjectIdentifier.Properties) : ReactElement {\r\n  return (\r\n    <Subject.Consumer>{\r\n      (subjectState : Subject.State) => (\r\n        <Document.Consumer>{\r\n          (documentState : Document.State) => (\r\n            <RawSubjectIdentifier\r\n              subject={subjectState ? subjectState.subject : null}\r\n              document={documentState.document}\r\n              onDocumentChange={documentState.onChange}\r\n              {...props}\r\n            />\r\n          )\r\n        }</Document.Consumer>\r\n      )\r\n    }</Subject.Consumer>\r\n  )\r\n}\r\n\r\nexport namespace SubjectIdentifier {\r\n  export type Properties = {\r\n    children: string\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { PureComponent } from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { classNames } from 'classnames'\r\n\r\nexport class SubjectKeyword extends PureComponent<SubjectSummary.Properties> {\r\n  public render () : ReactElement {\r\n    return null\r\n  }\r\n}\r\n\r\nexport namespace SubjectSummary {\r\n  export type Properties = {\r\n    children: string\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { PureComponent } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { classNames } from 'classnames'\r\n\r\nexport class SubjectSummary extends PureComponent<SubjectSummary.Properties> {\r\n  public render () : ReactElement {\r\n    return null\r\n  }\r\n}\r\n\r\nexport namespace SubjectSummary {\r\n  export type Properties = {\r\n    children: ReactNode\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { PureComponent } from 'react'\r\nimport { ReactElement } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport { Subject } from './Subject'\r\nimport { Document } from '../Document'\r\nimport { DocumentEvent } from '../../typescript/redux/document/DocumentEvent'\r\nimport { Subject as SubjectModel } from '../../typescript/redux/document/Subject'\r\nimport { Document as DocumentModel } from '../../typescript/redux/document/Document'\r\n\r\nclass RawSubjectTitle extends PureComponent<RawSubjectTitle.Properties> {\r\n  /**\r\n  * Render the heading element of this title in accordance with this title\r\n  * related subject depth.\r\n  *\r\n  * @return The heading element of this title component.\r\n  */\r\n  public renderHeading () : ReactElement {\r\n    const depth : number = this.props.document.getDepth(this.props.subject)\r\n\r\n    const className : string = classNames(\r\n      'title',\r\n      'title-' + (depth + 1)\r\n    )\r\n\r\n    switch (depth) {\r\n      case 0: return <h1 className={className}>{this.props.children}</h1>\r\n      case 1: return <h2 className={className}>{this.props.children}</h2>\r\n      case 2: return <h3 className={className}>{this.props.children}</h3>\r\n      case 3: return <h4 className={className}>{this.props.children}</h4>\r\n      case 4: return <h5 className={className}>{this.props.children}</h5>\r\n      case 5: return <h6 className={className}>{this.props.children}</h6>\r\n      default: return <div className={className}>{this.props.children}</div>\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @see React.render\r\n  */\r\n  public render () : ReactElement {\r\n    const className : string = classNames(\r\n      'subject-title text-center',\r\n      this.props.className\r\n    )\r\n\r\n    if (this.props.subject.key) {\r\n      return (\r\n        <div className={className}>\r\n          <a href={'#' + this.props.subject.key}>\r\n            {this.renderHeading()}\r\n          </a>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className={className}>\r\n          {this.renderHeading()}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  public componentDidMount () {\r\n    this.props.onDocumentChange(\r\n      DocumentEvent.defineName(\r\n        this.props.subject.identifier,\r\n        this.props.children\r\n      )\r\n    )\r\n  }\r\n\r\n  public componentDidUpdate (oldProps : RawSubjectTitle.Properties) {\r\n    if (this.props.children !== oldProps.children) {\r\n      this.props.onDocumentChange(\r\n        DocumentEvent.updateName(\r\n          this.props.subject.identifier,\r\n          this.props.children\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount () {\r\n    this.props.onDocumentChange(\r\n      DocumentEvent.deleteName(this.props.subject.identifier)\r\n    )\r\n  }\r\n}\r\n\r\nnamespace RawSubjectTitle {\r\n  export type Properties = {\r\n    subject: SubjectModel,\r\n    document: DocumentModel,\r\n    onDocumentChange: Document.ChangeListener\r\n    children: string,\r\n    className?: string\r\n  }\r\n}\r\n\r\n\r\nexport function SubjectTitle (props : SubjectTitle.Properties) : ReactElement {\r\n  return (\r\n    <Subject.Consumer>{\r\n      (subjectState : Subject.State) => (\r\n        <Document.Consumer>{\r\n          (documentState : Document.State) => (\r\n            <RawSubjectTitle\r\n              subject={subjectState ? subjectState.subject : null}\r\n              document={documentState.document}\r\n              onDocumentChange={documentState.onChange}\r\n              {...props}\r\n            />\r\n          )\r\n        }</Document.Consumer>\r\n      )\r\n    }</Subject.Consumer>\r\n  )\r\n}\r\n\r\nexport namespace SubjectTitle {\r\n  export type Properties = {\r\n    children: string,\r\n    className?: string\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport { Component } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport { Table2DCell } from './Table2DCell'\r\nimport { Table2DRow } from './Table2DRow'\r\n\r\nexport class Table2D extends Component<Table2D.Properties, Table2D.State> {\r\n  private _rows : number\r\n  private _columns : number\r\n  private _handlers : (() => void)[]\r\n\r\n  /**\r\n  * @see Component.constructor\r\n  */\r\n  public constructor (props : Table2D.Properties) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      column: -1,\r\n      row: -1\r\n    }\r\n\r\n    this._rows = 0\r\n    this._columns = 0\r\n    this._handlers = []\r\n\r\n    this.computeCellSelectionHandlers(props.children)\r\n\r\n    this.handleDeselection = this.handleDeselection.bind(this)\r\n    this.renderRow = this.renderRow.bind(this)\r\n  }\r\n\r\n  /**\r\n  *\r\n  */\r\n  private computeCellSelectionHandlers (children : ReactNode) : void {\r\n    this._rows = React.Children.count(children)\r\n    this._columns = React.Children.map(\r\n      children,\r\n      (child : ReactElement<Table2DRow.Properties>) => React.Children.count(\r\n        child.props.children\r\n      )\r\n    ).reduce((a : number, b : number) => Math.max(a, b), 0)\r\n\r\n    this._handlers.length = 0\r\n\r\n    for (let row = 0; row < this._rows; ++row) {\r\n      for (let column = 0; column < this._columns; ++column) {\r\n        this._handlers.push(this.handleCellSelection.bind(this, column, row))\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n  *\r\n  */\r\n  public handleCellSelection (column : number, row : number) : void {\r\n    this.setState({ row, column })\r\n  }\r\n\r\n  /**\r\n  *\r\n  */\r\n  public handleDeselection () : void {\r\n    this.setState({ row: -1, column: -1 })\r\n  }\r\n\r\n  /**\r\n  * @param Component.shouldComponentUpdate\r\n  */\r\n  public shouldComponentUpdate (nextProps : Table2D.Properties) : boolean {\r\n    if (nextProps.children !== this.props.children) {\r\n      this.computeCellSelectionHandlers(nextProps.children)\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  /**\r\n  * @param Component.render\r\n  */\r\n  public render () : ReactElement {\r\n    const className : string = classNames('table-2d', this.props.className)\r\n\r\n    return (\r\n      <table className={className} onMouseOut={this.handleDeselection}>\r\n        <tbody>\r\n          { React.Children.map(this.props.children, this.renderRow) }\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n\r\n  /**\r\n  *\r\n  */\r\n  private renderRow (children : ReactElement<Table2DRow.Properties>, row : number) : ReactElement<Table2DRow.Properties> {\r\n    return React.cloneElement(\r\n      children, {},\r\n      React.Children.map(\r\n        children.props.children,\r\n        (cell : ReactElement<Table2DCell.Properties>, column : number) : ReactElement<Table2DCell.Properties> => React.cloneElement(\r\n          cell, {\r\n            onSelect: this._handlers[row * this._columns + column],\r\n            selected: (\r\n              this.state.row === this._rows - 1 && column === this.state.column ||\r\n              this.state.column === 0 && row === this.state.row  ||\r\n              this.state.row  !== this._rows - 1 && this.state.column !== 0 && (\r\n                column === this.state.column || row === this.state.row\r\n              )\r\n            )\r\n          }\r\n        )\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nexport namespace Table2D {\r\n  export const Cell = Table2DCell\r\n  export const Row = Table2DRow\r\n\r\n  export type Properties = {\r\n    className?: string,\r\n    children?: ReactNode\r\n  }\r\n\r\n  export type State = {\r\n    row: number,\r\n    column: number\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport { PureComponent } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nfunction nothing () : void { }\r\n\r\nexport class Table2DCell extends PureComponent<Table2DCell.Properties> {\r\n  /**\r\n  * @see PureComponent.defaultProps\r\n  */\r\n  public static defaultProps : Table2DCell.Properties = {\r\n    onSelect: nothing\r\n  }\r\n\r\n  /**\r\n  * @see PureComponent.constructor\r\n  */\r\n  public constructor (props : Table2DCell.Properties) {\r\n    super(props)\r\n\r\n    this.handleMouseOver = this.handleMouseOver.bind(this)\r\n  }\r\n\r\n  /**\r\n  *\r\n  */\r\n  public handleMouseOver () : void {\r\n    if (!this.props.selected) {\r\n      this.props.onSelect()\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @param PureComponent.render\r\n  */\r\n  public render () : ReactElement {\r\n    const className : string = classNames(\r\n      { 'is-selected': this.props.selected },\r\n      this.props.className\r\n    )\r\n\r\n    if (this.props.heading) {\r\n      return (\r\n        <th\r\n          className={className}\r\n          onMouseOver={this.handleMouseOver}\r\n          style={{ width: this.props.width }}\r\n        > {this.props.children} </th>\r\n      )\r\n    } else {\r\n      return (\r\n        <td\r\n          className={className}\r\n          onMouseOver={this.handleMouseOver}\r\n          style={{ width: this.props.width }}\r\n        > {this.props.children} </td>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport namespace Table2DCell {\r\n  export type Properties = {\r\n    children?: ReactNode,\r\n    className?: string,\r\n    heading?: boolean,\r\n    selected?: boolean,\r\n    width?: string,\r\n    onSelect?: () => void\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\nimport { PureComponent } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nexport class Table2DRow extends PureComponent<Table2DRow.Properties> {\r\n  /**\r\n  * @param PureComponent.render\r\n  */\r\n  public render () : ReactElement {\r\n    return (\r\n      <tr className={this.props.className}>\r\n        { this.props.children }\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport namespace Table2DRow {\r\n  export type Properties = {\r\n    children?: ReactNode,\r\n    className?: string\r\n  }\r\n\r\n  export type Element = ReactElement<Properties>\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../components/subject/SubjectTitle'\r\nimport { SubjectIdentifier } from '../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../components/subject/Subject'\r\n\r\nimport { Characteristics } from './characteristics'\r\nimport { Masteries } from './masteries'\r\nimport { Knowledges } from './knowledges'\r\nimport { Summary } from './Summary'\r\nimport { Feats } from './feats'\r\nimport { CoreRules } from './rules/core'\r\nimport { FightRules } from './rules/fight'\r\nimport { Echoes } from './echoes'\r\nimport { Alchemy } from './alchemy'\r\n\r\nexport function Content () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules</SubjectIdentifier>\r\n      <SubjectTitle>Table des lois</SubjectTitle>\r\n      <SubjectSummary>\r\n        <p> Règles du jeu corvus </p>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <Summary />\r\n        <Characteristics />\r\n        <Masteries />\r\n        <Knowledges />\r\n        <Feats />\r\n        <CoreRules />\r\n        <FightRules />\r\n        <Echoes />\r\n        <Alchemy />\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../components/subject/Subject'\r\nimport { ParentSummary } from '../components/ParentSummary'\r\n\r\nexport function Summary () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>summary</SubjectIdentifier>\r\n      <SubjectTitle>Sommaire</SubjectTitle>\r\n      <SubjectKeyword>Sommaire</SubjectKeyword>\r\n      <SubjectSummary>\r\n        <p> Sommaire du document. </p>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <ParentSummary />\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\nimport { LocalSummary } from '../../components/LocalSummary'\r\n\r\nimport { Introduction } from './Introduction'\r\nimport { EtherPoisoning } from './EtherPoisoning'\r\nimport { Processing } from './Processing'\r\n\r\nexport function Alchemy () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectTitle>Alchimie</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <LocalSummary />\r\n\r\n        <Introduction />\r\n        <EtherPoisoning />\r\n        <Processing />\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nfunction * range (count : number) : Iterator<number> {\r\n  for (let index = 0; index < count; ++index) {\r\n    yield index\r\n  }\r\n}\r\n\r\nexport function EtherPoisoning () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-ether-poisoning</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectKeyword>Éther</SubjectKeyword>\r\n      <SubjectKeyword>Poison</SubjectKeyword>\r\n      <SubjectTitle>Intoxication à l'éther</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          L'éther est une substance nocive résiduelle méconue conséquence de la\r\n          pratique de la magie, de la consomation de produits alchimiques ou de\r\n          l'usage d'enchantement. C'est un poison lent qui s'accumule dans le\r\n          corps et qui peut provoquer de nombreux problèmes comme des délires,\r\n          de la fièvre, des vertiges, des hémorragies, de la dépendance, des\r\n          mutations ou encore la mort. On parle alors d'intoxication à l'éther.\r\n        </p>\r\n\r\n        <p>\r\n          L'intoxication à l'éther est appréciée par un nombre naturel. Chaque\r\n          palier représente une certaine concentration d'éther dans le sang\r\n          ainsi que la durée nécessaire pour qu'une partie de la toxine soit\r\n          éliminée naturellement. Pour perdre un niveau d'intoxication il faut\r\n          attendre un nombre d'heure qui lui est équivalent. Ainsi, un\r\n          personnage ayant un niveau d'intoxication de 5 points mettra 5 heures\r\n          à réduire son intoxication à 4 points, 9 heures pour le réduire à 3\r\n          points et 15 heures au total pour retomber à zéro points.\r\n        </p>\r\n\r\n        <table className=\"table-1d\">\r\n          <tbody>\r\n            <tr>\r\n              <td style={{width: '120px'}} rowSpan={2}> Guérison </td>\r\n              {\r\n                [...range(20)].map(function renderCell (index : number) : ReactElement {\r\n                  return (\r\n                    <td style={{width: '40px'}} key={index + 1}>\r\n                      {(((index + 1) * (index + 2))/(2 * 24)).toFixed(1)}j\r\n                    </td>\r\n                  )\r\n                })\r\n              }\r\n            </tr>\r\n            <tr>\r\n              {\r\n                [...range(20)].map(function renderCell (index : number) : ReactElement {\r\n                  return (\r\n                    <td style={{width: '40px'}} key={index + 1}>\r\n                      {((index + 1) * (index + 2))/2}h\r\n                    </td>\r\n                  )\r\n                })\r\n              }\r\n            </tr>\r\n            <tr>\r\n              <th> Intoxication </th>\r\n              {\r\n                [...range(20)].map(function renderCell (index : number) : ReactElement {\r\n                  return (\r\n                    <th key={index + 1}>{index + 1}</th>\r\n                  )\r\n                })\r\n              }\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Un personnage est toujours immunisé aux effets de l'intoxication à\r\n          l'éther à hauteur de la moitiée de ses points de constitution. Au\r\n          delà, il doit réussir un test d'opposition entre sa constitution et\r\n          son niveau d'empoisonement une fois par jour et à chaque fois que son\r\n          niveau d'intoxication augmente. Si le test est une réussite le joueur\r\n          ne fait l'objet d'aucun effet indésirable supplémentaire, si le test\r\n          échoue le joueur doit alors lancer un nombre de dé 6 équivalent au\r\n          tiers de son niveau d'intoxication retranché de la moitié de sa\r\n          constitution et subir les conséquences du résultat obtenu sur la table\r\n          des effets indésirables exposée ci-dessous.\r\n        </p>\r\n\r\n        <table className=\"table-1d table-vertical\">\r\n          <thead>\r\n            <tr>\r\n              <th style={{width: '100px'}}> Score </th>\r\n              <th style={{width: '300px'}}> Effet </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td> ≤ 3 </td>\r\n              <td>\r\n                Effet éclair sans impact notoire. <br/>\r\n                Hyper-sensibilité, douleur articulaire, fatigue passagère.\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td> 4 - 9 </td>\r\n              <td>\r\n                Épisodes nauséeux et vertiges passagers. <br />\r\n                Perte de deux points de dextérité pendant 1D4 jours. <br />\r\n                Les effets peuvent être divisé par deux avec la consomation\r\n                d'une drogue tonique de qualité 5+. <br />\r\n                Cet effet est cumulable. <br />\r\n                Cet effet disparrais si le niveau d'empoisonement\r\n                est inférieur à la moitiée de la constitution du personnage.\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td> 10 - 14 </td>\r\n              <td>\r\n                Fièvre et douleurs articulaires. <br />\r\n                Pendant 1D6 jours : <br />\r\n                <ul>\r\n                  <li>Perte de deux points de constitution.</li>\r\n                  <li>Perte de deux points de contrôle.</li>\r\n                </ul>\r\n                Cet effet est cumulable <br />\r\n                Cet effet peut être divisés par deux avec l'administration d'un\r\n                anti-douleur et d'une drogue tonique de qualité 10+. <br />\r\n                Cet effet disparrais si le niveau d'empoisonement\r\n                est inférieur à la moitiée de la constitution du\r\n                personnage + 3.\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td> 15 - 16 </td>\r\n              <td>\r\n                Épisode d'hypotermie. <br />\r\n                Perte de quatre points de constitution pendant 1D6 / 3 jours. <br />\r\n                Les effets peuvent être divisés par deux avec l'administration\r\n                d'une drogue tonique de qualité 20+. <br />\r\n                Cet effet est cumulable.\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td> 17 - 20 </td>\r\n              <td>\r\n                Hémoragie. <br />\r\n                Le personnage est sujet à une hémoragie temporaire et perd 1D4\r\n                points de vie. <br />\r\n                Pendant 1D6/2 jours : <br />\r\n                <ul>\r\n                  <li>Perte de deux points de constitution.</li>\r\n                  <li>Perte de deux points de force.</li>\r\n                  <li>Perte de deux points de contrôle.</li>\r\n                </ul>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td> 21 - 25 </td>\r\n              <td>\r\n                Mutation. <br />\r\n                Test opposé de constitution et de volonté contre le niveau\r\n                d'empoisonement, en cas d'échec le personnage gagne un trait de\r\n                d'adaptation à l'éther.\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td> 26 - 36 </td>\r\n              <td>\r\n                Test opposé de constitution et de volonté contre le niveau\r\n                d'empoisonement. Si le test échoue le personnage meurt. <br />\r\n                En cas de réussite, le même test est rejoué cette fois pour\r\n                déterminer si le personnage est l'objet d'une mutation, en cas\r\n                d'échec le personnage gagne un trait d'adaptation à l'éther.\r\n                <br />\r\n                Un personnage avec quatre mutation ou plus réalisant un score de\r\n                26 ou plus devient une abbération d'éther et n'est plus jouable.\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Introduction () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-introduction</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectTitle>Introduction</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          L'alchimie est l'art de produire des substances aux propriétés\r\n          ésotériques par la composition d'éléments intermédiaires chargés tant\r\n          en puissance qu'en symbolique, elle se distingue de la magie\r\n          principalement par l'absence d'évocation verbale ou écrite.\r\n          Contrairement à la magie, l'alchimie ne nécéssite aucune\r\n          prédisposition particulière pour être étudiée et exercée.\r\n        </p>\r\n\r\n        <p>\r\n          Pratiquer l'alchimie c'est d'abord accumuler des connaissances puis\r\n          ensuite trouver les moyens et le temps permettant de les mettres en\r\n          oeuvre. Le domaine se scinde en plusieurs sous-domaines spécialisés\r\n          dans la production de certains type de substances particulières comme\r\n          les drogues, les poisons, les solutions, les sels ou les gaz.\r\n        </p>\r\n\r\n        <p>\r\n          Bien que la discipline biomantique soit originairement une branche de\r\n          l'alchimie elle est considéré comme un domaine à part nécéssitant une\r\n          spécialisation complète, cette technique est l'objet d'un chapitre\r\n          complet de ce manuel.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Processing () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>alchemy-processing</SubjectIdentifier>\r\n      <SubjectKeyword>Alchimie</SubjectKeyword>\r\n      <SubjectTitle>Méthodes</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { Alchemy } from './Alchemy'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Constitution () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>characteristics-constitution</SubjectIdentifier>\r\n      <SubjectKeyword>Caractéristique</SubjectKeyword>\r\n      <SubjectKeyword>Constitution</SubjectKeyword>\r\n      <SubjectTitle>Constitution</SubjectTitle>\r\n      <SubjectSummary>\r\n        <p>\r\n          La constitution est la caractéristique qui représente la résistance\r\n          physique du corps. Cette caractéristique mesure notamment le nombre de\r\n          point de vie d'un personnage.\r\n        </p>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p className='text-center'>\r\n          <img src='./images/characteristics/constitution.svg' width='200' />\r\n        </p>\r\n\r\n        <p>\r\n          La constitution représente la résistance physique du corps, elle mesure\r\n          notamment le nombre de point de vie. Un bon niveau de constitution permet\r\n          d'encaisser plus de coups, de supporter des climats difficiles,\r\n          de résister aux maladies et de fournir des efforts sur de plus longues\r\n          périodes.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Control () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>characteristics-control</SubjectIdentifier>\r\n      <SubjectKeyword>Caractéristique</SubjectKeyword>\r\n      <SubjectKeyword>Contrôle</SubjectKeyword>\r\n      <SubjectTitle>Contrôle</SubjectTitle>\r\n      <SubjectSummary>\r\n        <p>\r\n          Le contrôle est la caractéristique qui représente la maîtrise consciente\r\n          de soi et le recul vis-à-vis de ses sentiments. Cette caractéristique\r\n          mesure notamment la volonté d'un personnage.\r\n        </p>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p className='text-center'>\r\n          <img src='./images/characteristics/control.svg' width='200' />\r\n        </p>\r\n\r\n        <p>\r\n          Le contrôle représente la maîtrise consciente de soi et le recul vis-à-vis\r\n          de ses sentiments, elle mesure aussi la volonté d'un personnage. Un bon\r\n          niveau de contrôle permet de résister aux manipulations mentales et de\r\n          garder son sang froid dans les situations difficiles.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Dexterity () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>characteristics-dexterity</SubjectIdentifier>\r\n      <SubjectKeyword>Caractéristique</SubjectKeyword>\r\n      <SubjectKeyword>Dextérité</SubjectKeyword>\r\n      <SubjectTitle>Dextérité</SubjectTitle>\r\n      <SubjectSummary>\r\n        <p>\r\n          Le dextérité est la caractéristique qui représente la précision des sens\r\n          d'un personnage. Cette caractéristique mesure notamment l'initiative\r\n          d'un personnage en combat.\r\n        </p>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p className='text-center'>\r\n          <img src='./images/characteristics/dexterity.svg' width='200' />\r\n        </p>\r\n\r\n        <p>\r\n          La dextérité représente la précision des sens, elle mesure aussi\r\n          l'initiative d'un personnage en combat. Un bon niveau de dextérité\r\n          permet d'agir le premier, de se mouvoir sans faire de bruit, d'esquiver\r\n          et de maîtriser les armes de jet et les armes légères.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Luck () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>characteristics-luck</SubjectIdentifier>\r\n      <SubjectKeyword>Caractéristique</SubjectKeyword>\r\n      <SubjectKeyword>Chance</SubjectKeyword>\r\n      <SubjectTitle>Chance</SubjectTitle>\r\n      <SubjectSummary>\r\n        <p>\r\n          Le chance est la caractéristique qui représente la capacité d'un\r\n          personnage à se créer des opportunités. Cette caractéristique\r\n          mesure notamment le nombre de point de destin du personnage.\r\n        </p>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p className='text-center'>\r\n          <img src='./images/characteristics/luck.svg' width='200' />\r\n        </p>\r\n\r\n        <p>\r\n          La chance représente la capacité à se créer des opportunités, elle\r\n          mesure aussi le nombre de point de destin du personnage. Un bon niveau\r\n          de chance permet de trouver plus facilement des biens précieux et de\r\n          créer des situations bénéfiques aux allures de deus ex machina.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Power () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>characteristics-power</SubjectIdentifier>\r\n      <SubjectKeyword>Caractéristique</SubjectKeyword>\r\n      <SubjectKeyword>Pouvoir</SubjectKeyword>\r\n      <SubjectTitle>Pouvoir</SubjectTitle>\r\n      <SubjectSummary>\r\n        <p>\r\n          Le pouvoir est la caractéristique qui représente la capacité d'un\r\n          personnage à plier la réalité à sa volonté en usant de prouesses\r\n          mentales. Cette caractéristique mesure notamment l'affinité à la magie.\r\n        </p>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p className='text-center'>\r\n          <img src='./images/characteristics/power.svg' width='200' />\r\n        </p>\r\n\r\n        <p>\r\n          Le pouvoir représente la capacité à plier la réalité à sa volonté en\r\n          usant de prouesses mentales, il mesure aussi l'affinité à la magie. Un\r\n          bon niveau de pouvoir permet de résister aux effets magiques et de\r\n          lancer des sorts plus puissant.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Strength () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>characteristics-strength</SubjectIdentifier>\r\n      <SubjectKeyword>Caractéristique</SubjectKeyword>\r\n      <SubjectKeyword>Force</SubjectKeyword>\r\n      <SubjectTitle>Force</SubjectTitle>\r\n      <SubjectSummary>\r\n        <p>\r\n          La force est la caractéristique qui représente la capacité d'un\r\n          personnage à altérer le réel par l'usage de moyens physiques. Cette\r\n          caractéristique mesure notamment la capacité de charge.\r\n        </p>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p className='text-center'>\r\n          <img src='./images/characteristics/strength.svg' width='200' />\r\n        </p>\r\n\r\n        <p>\r\n          La force représente la capacité à altérer le réel par l'usage\r\n          de moyens physiques, elle mesure aussi la capacité de charge. Un bon\r\n          niveau de force permet d'équiper plus de matériel, de maîtriser les\r\n          armures et armes lourdes et de faire plus de dégât physique.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\nimport { LocalSummary } from '../../components/LocalSummary'\r\n\r\nimport { Constitution } from './Constitution'\r\nimport { Control } from './Control'\r\nimport { Dexterity } from './Dexterity'\r\nimport { Luck } from './Luck'\r\nimport { Power } from './Power'\r\nimport { Strength } from './Strength'\r\n\r\nexport function Characteristics () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>characteristics</SubjectIdentifier>\r\n      <SubjectKeyword>Caractéristique</SubjectKeyword>\r\n      <SubjectTitle>Charactéristiques</SubjectTitle>\r\n      <SubjectSummary>\r\n        <p>\r\n          Les caractéristiques dépeignent les capacités innées d'un personnage et\r\n          influencent de nombreuses ressources connexes. Chaque caractéristique\r\n          est appréciée par un entier relatif.\r\n        </p>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='row'>\r\n          <div className='col'>\r\n            <LocalSummary />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col'>\r\n            <p>\r\n              Les caractéristiques dépeignent les capacités innées d'un\r\n              personnage et influencent de nombreuses ressources connexes.\r\n              Chaque caractéristique est appréciée par un entier relatif. Les\r\n              caractéristiques d'un personnage humain sont initialement évaluées\r\n              à -9 et il est possible d'y répartir un total de 62 points. Une\r\n              caractéristique humaine ne peut pas être supérieure à 10 points.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <Luck />\r\n          </div>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <Constitution />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <Control />\r\n          </div>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <Dexterity />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <Strength />\r\n          </div>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <Power />\r\n          </div>\r\n        </div>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { Characteristics } from './characteristics'\r\nexport { Constitution } from './Constitution'\r\nexport { Control } from './Control'\r\nexport { Dexterity } from './Dexterity'\r\nexport { Luck } from './Luck'\r\nexport { Power } from './Power'\r\nexport { Strength } from './Strength'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Affinity () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>echoes-affinity</SubjectIdentifier>\r\n      <SubjectKeyword>Écho</SubjectKeyword>\r\n      <SubjectKeyword>Affinité</SubjectKeyword>\r\n      <SubjectTitle>Affinité</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          L'affinité est une mesure de la cohésion entre l'hôte et son echo. Elle\r\n          est appréciée sur une échelle de 1 à 100 et connue uniquement du maître du\r\n          jeu. Une affinité ne peut pas être négative ou nulle et une affinité ne\r\n          peut pas avoir une valeur supérieure à 100. L'affinité entre un hôte et un\r\n          Écho influence l'efficacité des atouts de celui-ci, son obéissance et les\r\n          chances d'en augmenter la maîtrise.\r\n        </p>\r\n\r\n        <p>\r\n          L'affinité de départ de tout hôte est égale à 1 et plusieurs types\r\n          d'évènement peuvent influencer ce score. Certains évènements impliqueront\r\n          une augmentation ou une réduction immédiate de l'affinité entre l'hôte et\r\n          son Écho, d'autres nécéssiteront de réaliser un test d'affinité négatif\r\n          ou positif pour déterminer l'impact exact de l'évènement.\r\n        </p>\r\n\r\n        <p>\r\n          Lors d'un test d'affinité négatif l'hôte doit lancer un dé 100 et faire un\r\n          score inférieur ou égal à un degré de difficulté équivalent à son score\r\n          d'affinité actuel additionné de son score de contrôle multipliée par 5. Si\r\n          l'hôte réussi son jet alors son affinité subira un malus d'1D10 points.\r\n          Bien entendu toute perte d'affinité s'accompagne d'une réaction adéquate\r\n          de l'Écho.\r\n        </p>\r\n\r\n        <p>\r\n          Lors d'un test d'affinité positif l'hôte doit lancer un dé 100 et faire un\r\n          score strictement supérieur à un degré de difficulté équivalent à score\r\n          d'affinité actuel retranché de son score de contrôle multipliée par 5. Si\r\n          l'hôte réussi son jet alors son affinité obtiendra un bonus d'1D10 points.\r\n          Bien entendu tout gain d'affinité s'accompagne d'une réaction adéquate de\r\n          l'Écho.\r\n        </p>\r\n\r\n        <p>\r\n          Le résultat d'un test d'affinité ne peut pas déboucher sur un score\r\n          supérieur à 100 ou sur un score inférieur à 1. Si le résultat d'un jet\r\n          provoque un dépassement d'une des deux limites, alors le score est\r\n          considéré comme égal à la limite ainsi dépassée. Tous les tests sont\r\n          réalisés à l'aveugle sur demande du maître du jeu, les joueurs ne peuvent\r\n          se baser que sur le comportement de leur Écho pour avoir une idée de leur\r\n          score d'affinité actuel.\r\n        </p>\r\n\r\n        <p>\r\n          Les tests d'affinités sont plus évident à faire jouer pour les hôtes\r\n          ayant un Écho qui se manifeste régulièrement. Pour les hôtes ayant un\r\n          Écho ad nihil les tests d'affinités sont joués en fonction de leur\r\n          comportement. Les hôtes suivant une morale stricte ont plus de chance\r\n          d'augmenter leur affinité avec leur Écho que les hôtes ayant un\r\n          comportement plus ératiques, moins prédictible. Les hôtes ad nihil ayant\r\n          un score de contrôle négatif augmentent naturellement leur affinité à\r\n          chaque fois qu'ils réalisent un haut-fait.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Categories () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>echoes-categories</SubjectIdentifier>\r\n      <SubjectKeyword>Écho</SubjectKeyword>\r\n      <SubjectKeyword>Catégorie</SubjectKeyword>\r\n      <SubjectTitle>Catégories</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Il est difficile de se représenter la société des Échos car celle-ci\r\n          évolue dans un univers libéré de la matière et du temps. Il semble\r\n          cependant évident que leurs intérêts ne convergent pas vers un but\r\n          commun et que les Échos s'opposent les uns aux autres constamment.\r\n        </p>\r\n\r\n        <p>\r\n          Considérer que la relation entre Échos soit proche du chaos total est\r\n          cependant une simplification extrême de la réalité. Dans les faits il\r\n          existe une forme de hiérarchie des Échos principalement basé sur leur\r\n          rôle au sein du jeu politique constant qui est le leur. Ainsi, certains\r\n          Échos, par ce qu'ils sont plus anciens, plus intelligents ou plus\r\n          puissants que les autres ont une capacité plus importante à imposer leur\r\n          volonté à leurs congénères.\r\n        </p>\r\n\r\n        <p>\r\n          La catégorie d'Écho dont un personnage est hôte impacte les effets de\r\n          celui-ci en fonction du type de manifestation. Les Échos les plus\r\n          puissants peuvent prodiguer de prodigieux pouvoirs en contrepartie d'un\r\n          contrôle bien plus difficile, et d'une vie bien plus mouvementée. Certains\r\n          Écho peuvent évoluer d'une catégorie à l'autre, aux prix de difficiles\r\n          épreuves.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les apostats</em>, environ 1% de la masse connue des Échos sont des\r\n          irrégularités qui ne jouent pas le jeu politique de leurs frères et\r\n          soeurs. La course au pouvoir ne les motives pas et ils vivent leur propre\r\n          vie relégué aux marges de la civilisation. Bien qu'ils soit considérés\r\n          comme particulièrement faibles certains des Échos les plus puissants\r\n          seraient bien en fait des apostats et non des primitifs. Il est assez\r\n          difficile de dessiner le portrait d'une catégorie si hétérogène.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les satellites</em> représentent 50%, soit une certaine forme de\r\n          majorité des Échos. Ce sont des faibles sans grandes ambitions qui jouent\r\n          tout de même à leur échelle le jeu de leur plan. Quand un satellite ce\r\n          fait remarqué, par ces faits ou sa puissance, il a de forte chance de se\r\n          faire des contacts et de devenir nobles. Ils sont donc en compétition\r\n          constante les uns vis-à-vis des autres dans une certaine forme de chaos\r\n          contrôlé par des Échos plus intelligents.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les nobles</em> représentent 25% des Échos, ce sont des exécutants\r\n          à la loyauté douteuse dont le seul objectif est d'accumuler suffisamment\r\n          de pouvoir pour gravir l'échelon suppérieur. Ils sont assez libre de faire\r\n          ce qu'ils veulent, et bien qu'ils répondent le plus clair de leur temps à\r\n          des tâches confiés par des princes ils aiment tout de même parachever des\r\n          petits complots visant à saper le pouvoir accumulé par leurs congénères.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les princes</em>, environ 14% des Échos, appartiennent à\r\n          des cours formées autour de primitifs cherchant à obtenir les faveurs d'un\r\n          puissant pour devenir à leur tour des ainés. Ils sont cependant bien plus\r\n          libres que les Échos appartenant à la catégorie qu'ils visent et peuvent\r\n          changer d'obédience sans grandes conséquences sur leur statut bien que le\r\n          manque de fidelité ne soit pas la première qualité recherchée pour un\r\n          ainé. La rude compétition qui a lieue entre les princes représente le\r\n          principal danger de rétrogradation auxquels ils sont confrontés car leur\r\n          statut est avant tout liée à leur influence sur les nobles. En général,\r\n          les princes sont des superviseurs chargés de déleguer les tâches qui leur\r\n          sont confiées pas les ainés.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les ainés</em>, environ 7% des Échos, sont les conseilliers\r\n          directs des primitifs. Bien que suffisamment puissant pour se tenir en\r\n          dehors de la mêlée génerale de leur plan, ils ne sont pas assez légitimes\r\n          pour être indépendants des primitif qu'ils servent aveuglément. Certains,\r\n          rares, peuvent parfois fomanter avec succès un complot pour ce isser au\r\n          sommet du pouvoir, mais échouer une telle entreprise n'est pas sans\r\n          conséquences. Les ainés vivent une vie assez paisible dans l'ensemble et\r\n          laissent court à leur nature profonde tout en tentant de glanner le\r\n          maximum d'information et de moyen possible pour aider le primitif qu'ils\r\n          servent.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les primitifs</em> représente environ 3% des Échos. Ce sont des\r\n          intriguants passés maîtres incontestés du jeu politique de leur plan.\r\n          Ils ont une volonté de fer et un pouvoir quasiment sans limite mais ce\r\n          sont des Échos qui préfèrent les conflits indirects plutôt que les\r\n          confrontations musclées. De par leur rareté les primitifs se connaissent\r\n          tous les uns-les autres, ils semblent former une sorte de conseil d'Échos\r\n          et décident des grandes règles qui ont cours sur leur plan. Comme tout\r\n          conseil d'individus surpuissant, tous les primitifs aimeraient bien\r\n          défaire leurs congénère pour n'être plus que les seuls maîtres à bord de\r\n          leur vaisseau.\r\n        </p>\r\n\r\n        <table className='table-1d' style={{ width: '100%'}}>\r\n          <tbody>\r\n            <tr>\r\n              <td> Jet </td>\r\n              <td style={{ width: '150px'}}> ≤ 3% </td>\r\n              <td style={{ width: '150px'}}> ≤ 10% </td>\r\n              <td style={{ width: '150px'}}> ≤ 24% </td>\r\n              <td style={{ width: '150px'}}> ≤ 49% </td>\r\n              <td style={{ width: '150px'}}> ≤ 99% </td>\r\n              <td style={{ width: '150px'}}> = 100% </td>\r\n            </tr>\r\n            <tr>\r\n              <th> Catégorie de l'Écho </th>\r\n              <th> Primitifs </th>\r\n              <th> Ainés </th>\r\n              <th> Princes </th>\r\n              <th> Nobles </th>\r\n              <th> Satellites </th>\r\n              <th> Apostats </th>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n\r\n\r\n<div class='topic' id='Écho-category' data-keywords='catégorie'>\r\n  <div class='topic-heading  text-center'>\r\n    <h3>Catégories</h3>\r\n  </div>\r\n  <div class='topic-content'>\r\n\r\n  </div>\r\n</div>\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\nimport { LocalSummary } from '../../components/LocalSummary'\r\n\r\nimport { Introduction } from './Introduction'\r\nimport { Affinity } from './Affinity'\r\nimport { Categories } from './Categories'\r\nimport { Manifestations } from './Manifestations'\r\nimport { Mastery } from './Mastery'\r\n\r\nexport function Echoes () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>echoes</SubjectIdentifier>\r\n      <SubjectKeyword>Écho</SubjectKeyword>\r\n      <SubjectTitle>Échos</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <LocalSummary />\r\n        \r\n        <Introduction />\r\n        <Manifestations />\r\n        <Categories />\r\n        <Affinity />\r\n        <Mastery />\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Introduction () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>echoes-introduction</SubjectIdentifier>\r\n      <SubjectKeyword>Écho</SubjectKeyword>\r\n      <SubjectTitle>Introduction</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Les <strong>Échos</strong> sont la plus naturelle des formes d'ésotérisme. Un\r\n          Écho est une créature consciente et indépendante de forme inconnue qui\r\n          représente une idée, un concept, un évènement ou une personnalité dans sa plus\r\n          cristalline des formes. Il existe une quantité infinie d'Échos catégorisés\r\n          par leur rôle dans la géopolitique particulière de leur société.\r\n        </p>\r\n\r\n        <p>\r\n          Chaque individu faisant preuve de libre arbitre est forcément lié à un Écho\r\n          à la naissance, on dit alors de la créature qu'elle est <strong>hôte</strong>\r\n          de son Écho. La nature de la relation entre un hôte et un Écho est appelé\r\n          une <strong>manifestation</strong>. Bien que le phénomène soit excessivement\r\n          commun, rares sont les individus ayant une connaissance pointue de la nature\r\n          profonde des Échos. Aussi, les individus ayant la capacité de manifester leur\r\n          Écho, même dans la plus simple des formes, sont largement minoritaires.\r\n        </p>\r\n\r\n        <p>\r\n          Les Échos sont un moyen unique d'avoir un accès illimité à une forme\r\n          primitive de magie. Contrairement à l'arcane, utiliser une magie Écho ne\r\n          requiert aucune prédisposition biologique et n'implique aucune forme\r\n          d'empoisonnement à l'éther. Cependant abuser d'un tel pouvoir n'est pas sans\r\n          conséquences sur le long terme.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Manifestations () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>echoes-manifestations</SubjectIdentifier>\r\n      <SubjectKeyword>Écho</SubjectKeyword>\r\n      <SubjectKeyword>Manifestation</SubjectKeyword>\r\n      <SubjectTitle>Manifestations</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          La nature de la relation entre un <strong>hôte</strong> et son\r\n          <strong>Écho</strong> est communément appelé une\r\n          <strong>manifestation</strong>. Le type de manifestation d'un Écho dépend\r\n          de l'affinité entre celui-ci et son hôte. La manifestation d'un Écho peut\r\n          apporter divers bonus comme malus.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Ad nihil.</em> C'est la manifestation la plus répandue, elle relève\r\n          d'une situation où l'hôte et l'Écho ne communiquent pas. Bien que\r\n          pour le profane cette situation puisse être assimilée à l'absence pure et\r\n          simple d'Écho il ne faut pas se tromper : l'Écho est tout de même\r\n          bien présent bien que rien ne le motive à s'ingérer dans les affaires de\r\n          son hôte. Un Écho ad nihil n'apporte aucun avantage ni inconvénient.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Ad mentis.</em> Cette manifestation se résume principalement en un\r\n          dialogue interne plus ou moins constant entre l'hôte et l'Écho. Les\r\n          Échos profitent de ce type de situation pour orienter leur hôte pour\r\n          qu'ils exécutent leurs plans à moyen - long terme. Cependant dans cet état\r\n          les Échos sont incapable de communiquer simplement, ils peuvent parler du\r\n          présent, du futur, du passé ou de sujets qui n'ont aucun rapport avec le\r\n          plan de l'hôte. Sous cette forme seulement le joueur reçoit gratuitement\r\n          l'atout <strong>Écho oracle</strong>.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Ad naturam.</em> Ce type de manifestation consiste essentiellement en\r\n          la matérialisation de l'Écho sous une forme quelconque. En fonction de\r\n          l'Écho cette manifestation peut débloquer un <strong>atout d'Écho\r\n          ad naturam</strong>. Un Écho matérialisé perd entièrement sa capacité\r\n          d'omniscience entrainant la perte de l'atout\r\n          <strong>Écho oracle</strong>. Bien que la forme matérielle de l'Écho\r\n          puisse se battre et réaliser des tâches simples elles restent des\r\n          incarnations complètement indépendantes de leur hôte et peuvent donc ne\r\n          pas répondre aux ordres donnés si ceux-ci ne leur conviennent pas.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Ad commutationem</em> Dans cette situation l'hôte peut prendre le\r\n          contrôle de l'incarnation de l'Écho. Celui-ci est aussi plus enclin à\r\n          suivre les ordres qui lui sont donnés et peut prendre le contrôle du corps\r\n          de l'hôte tant que celui-ci l'y autorise. Cette situation peut entraîner\r\n          un bonus de caractéristique mentale, ainsi que l'ajout d'un <strong>atout\r\n          d'Écho ad commutationem</strong>. Cette situation permet de plus\r\n          d'accéder à tous les atouts <strong>ad commutationem</strong> génériques\r\n          comme le <strong>sommeil du guetteur</strong>.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Ad hominem.</em> C'est la situation la plus instable de manifestation,\r\n          l'hôte peut manifester un certain nombre de mutations mineures. Cette\r\n          situation entraîne l'apparition d'un bonus de caractéristique physique,\r\n          mais aussi l'ajout d'un <strong>atout d'Écho ad hominem</strong>. Dans\r\n          cette situation la démarcation entre Écho et hôte est extrêmement floue\r\n          et l'hôte peut perdre le contrôle de son corps si son score de contrôle\r\n          est trop faible.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Ad fusionem.</em> La manifestation ad fusionem est la forme la plus\r\n          forte de manifestation et consiste en la destruction complète de la\r\n          personnalité et de la volonté de l'hôte qui laisse entièrement place à\r\n          l'Écho. L'Écho peut toujours contrôler sa manifestation matérielle qui\r\n          n'est alors plus qu'une coquille vide. Un état de fusion est équivalent à\r\n          une mort définitive pour tout personnage joueur.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Mastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>echoes-mastery</SubjectIdentifier>\r\n      <SubjectKeyword>Écho</SubjectKeyword>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectTitle>Maîtrise</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { Echoes } from './Echoes'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function AcrobaticDodgingFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-accrobatic-dodging</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Esquive</SubjectKeyword>\r\n      <SubjectKeyword>Esquive acrobatique</SubjectKeyword>\r\n      <SubjectTitle>Esquive acrobatique</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Acrobatie</td>\r\n              <td>5+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le personnage gagne une esquive acrobatique supplémentaire par round, une\r\n          esquive acrobatique est résolue comme une acrobatie dont le succès aboutit\r\n          aux effets d'une esquive standard. Lors d'une esquive acrobatique le\r\n          personnage subit un malus de 20% sur sa tentative d'esquive.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Acrobatie</td>\r\n              <td>10+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Esquive</td>\r\n              <td>5+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le personnage gagne deux esquives acrobatiques supplémentaires par round,\r\n          une esquive acrobatique est résolue comme une acrobatie dont le succès\r\n          aboutit aux effets d'une esquive standard. Lors d'une esquive acrobatique\r\n          le personnage subit un malus de 20% sur sa tentative d'esquive.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function AcrobaticParryFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-accrobatic-parry</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Parade</SubjectKeyword>\r\n      <SubjectKeyword>Parade acrobatique</SubjectKeyword>\r\n      <SubjectTitle>Parade acrobatique</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Acrobatie</td>\r\n              <td>15+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le personnage gagne une parade supplémentaire par round, cette parade est\r\n          résolue comme une acrobatie dont le succès aboutit aux effets d'une parade\r\n          standard avec l'arme choisie. Lors d'une parade acrobatique le personnage\r\n          subit un malus de 20% sur sa tentative.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function AtlasBurdenFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-atlas-burden</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Fardeau d'Atlas</SubjectKeyword>\r\n      <SubjectTitle>Fardeau d'Atlas</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Constitution</td>\r\n              <td>14+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Gagnez 1 point de charge supplémentaire tous les 4 point de charge\r\n          effectif.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Constitution</td>\r\n              <td>18+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Fardeau d'Atlas</td>\r\n              <td>I</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Gagnez 1 point de charge supplémentaire tous les 2 point de charge\r\n          effectif.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function BloodBathFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-blood-bath</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Bain de sang</SubjectKeyword>\r\n      <SubjectTitle>Bain de sang (α)</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Haches ou Dagues</td>\r\n              <td>8+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Contrôle</td>\r\n              <td>14-</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Infligez 1 point de dégât supplémentaire tous les 4 points de vie\r\n          perdus.\r\n        </p>\r\n\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Haches ou Dagues</td>\r\n              <td>16+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Contrôle</td>\r\n              <td>10-</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Bain de sang</td>\r\n              <td>I</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Infligez 1 point de dégât supplémentaire tous les 2 points de vie\r\n          perdus.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function BloodThirstFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-blood-thirst</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Soif de sang</SubjectKeyword>\r\n      <SubjectTitle>Soif de sang (α)</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Constitution</td>\r\n              <td>14+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Contrôle</td>\r\n              <td>14-</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Gagnez 1 point d'initiative supplémentaire tous les 4 points de vie\r\n          perdus.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Constitution</td>\r\n              <td>18+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Contrôle</td>\r\n              <td>10-</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Soif de sang</td>\r\n              <td>I</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Gagnez 1 point d'initiative supplémentaire tous les 2 points de vie\r\n          perdus.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function BullChargeFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-bull-charge</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Charge</SubjectKeyword>\r\n      <SubjectKeyword>Charge du taureau</SubjectKeyword>\r\n      <SubjectTitle>Charge du taureau</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Force</td>\r\n              <td>12+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Armures lourdes</td>\r\n              <td>5+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Lors d'une charge, ajouter autant de dégât physique que la totalité des\r\n          points de charge utilisé divisé par 4.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Force</td>\r\n              <td>14+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Armures lourdes</td>\r\n              <td>10+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Charge du taureau</td>\r\n              <td>I</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Lors d'une charge, ajouter autant de dégât physique que la totalité des\r\n          points de charge utilisé divisé par 2.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            III\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Force</td>\r\n              <td>18+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Armures lourdes</td>\r\n              <td>18+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Charge du taureau</td>\r\n              <td>II</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Lors d'une charge, ajouter autant de dégât physique que la totalité des\r\n          points de charge utilisé.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function CatGraceFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-cat-grace</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Vol contrôlé</SubjectKeyword>\r\n      <SubjectTitle>Vol contrôlé</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Dextérité</td>\r\n              <td>14+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Acrobatie</td>\r\n              <td>15+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Si une acrobatie visant un autre personnage échoue alors l'acteur de\r\n          l'acrobatie peut tenter de se rattraper in-extremis en passant un test\r\n          d'acrobatie de difficulté 18 afin d'annuler tous les effets de la parade\r\n          ou de l'esquive de sa victime. Si l'acteur réussi son jet, la parade ou\r\n          l'esquive de sa victime est annulée et décomptée de la quantité de parade\r\n          ou d'esquive de son tour.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function ChainAttackFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-chain-attack</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Attaque en chaîne</SubjectKeyword>\r\n      <SubjectTitle>Attaque en chaîne</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Épées courtes ou Épées batardes</td>\r\n              <td>5+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Peut échanger lors d'une attaque à outrance une parade à l'épée courte ou\r\n          à l'épée batarde contre une attaque supplémentaire. Les attaques\r\n          supplémentaires se résolvent comme des attaques standards avec un malus de\r\n          10% par attaque déjà portée.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Épées courtes</td>\r\n              <td>10+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Attaque en chaîne</td>\r\n              <td>I</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Peut échanger lors d'une attaque à outrance jusqu'à deux parades à l'épée\r\n          courte contre une attaque supplémentaire. Les attaques supplémentaires se\r\n          résolvent comme des attaques standards avec un malus de 10% par attaque\r\n          déjà portée. Il est toujours possible d'échanger une seule parade à l'épée\r\n          batarde contre une attaque supplémentaire.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            III\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Épées courtes</td>\r\n              <td>15+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Dextérité</td>\r\n              <td>12+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Attaque en chaîne</td>\r\n              <td>II</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Peut échanger lors d'une attaque à outrance jusqu'à trois parades à l'épée\r\n          courte contre une attaque supplémentaire. Les attaques supplémentaires se\r\n          résolvent comme des attaques standard avec un malus de 10% par attaque\r\n          déjà portée. Il est toujours possible d'échanger une seule parade à l'épée\r\n          batarde contre une attaque supplémentaire.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            IV\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Épées courtes</td>\r\n              <td>20+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Dextérité</td>\r\n              <td>20+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Attaque en chaîne</td>\r\n              <td>III</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Peut échanger lors d'une attaque à outrance jusqu'à quatre parades à l'épée\r\n          courte contre une attaque supplémentaire. Les attaques supplémentaires se\r\n          résolvent comme des attaques standard avec un malus de 10% par attaque\r\n          déjà portée. Il est toujours possible d'échanger une seule parade à l'épée\r\n          batarde contre une attaque supplémentaire.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function ChainDodgeFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-chain-dodge</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Esquive</SubjectKeyword>\r\n      <SubjectKeyword>Esquive en chaîne</SubjectKeyword>\r\n      <SubjectTitle>Esquive en chaîne</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Esquive</td>\r\n              <td>8+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le personnage gagne une esquive supplémentaire par round, chaque esquive\r\n          supplémentaire jouée durant un round se voit attribuée un malus de 10%\r\n          cumulatif.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Esquive</td>\r\n              <td>12+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le personnage gagne deux esquives supplémentaires par round, chaque\r\n          esquive supplémentaire jouée durant un round se voit attribuée un malus de\r\n          10% cumulatif.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            III\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Esquive</td>\r\n              <td>16+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Dextérité</td>\r\n              <td>16+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le personnage gagne trois esquives supplémentaire par round, chaque\r\n          esquive supplémentaire jouée durant un round se voit attribuée un malus de\r\n          10% cumulatif.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function CounterAttackFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-counter-attack</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Contre attaque</SubjectKeyword>\r\n      <SubjectTitle>Contre attaque</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Maîtrise d'arme légère</td>\r\n              <td>6+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Une fois par round, un personnage équipé d'une arme légère possédant cet\r\n          atout et venant de parer un coup peut toujours choisir de contre attaquer\r\n          gratuitement. Les rôles du défenseur et de l'attaquant sont alors inversé.\r\n        </p>\r\n\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Maîtrise d'arme légère</td>\r\n              <td>12+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Contre attaque</td>\r\n              <td>I</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Deux fois par round, un personnage équipé d'une arme légère possédant cet\r\n          atout et venant de parer un coup peut toujours choisir de contre attaquer\r\n          gratuitement. Les rôles du défenseur et de l'attaquant sont alors inversé.\r\n        </p>\r\n\r\n\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            III\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Maîtrise d'arme légère</td>\r\n              <td>20+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Contre attaque</td>\r\n              <td>II</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Trois fois par round, un personnage équipé d'une arme légère possédant cet\r\n          atout et venant de parer un coup peut toujours choisir de contre attaquer\r\n          gratuitement. Les rôles du défenseur et de l'attaquant sont alors inversé.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function DefensiveStyleFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-defensive-style</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Style défensif</SubjectKeyword>\r\n      <SubjectTitle>Style défensif</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Épées courtes</td>\r\n              <td>5+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Gagne une parade supplémentaire à l'épée courte par round.\r\n        </p>\r\n\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Épées courtes</td>\r\n              <td>10+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Style défensif</td>\r\n              <td>I</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Gagne deux parades supplémentaires à l'épée courte par round.\r\n        </p>\r\n\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            III\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Épées courtes</td>\r\n              <td>17+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Dextérité</td>\r\n              <td>12+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Style défensif</td>\r\n              <td>II</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Gagne trois parades supplémentaires à l'épée courte par round.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function DiehardFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-diehard</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Dur à cuir</SubjectKeyword>\r\n      <SubjectTitle>Dur à cuir</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Constitution</td>\r\n              <td>14+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Gagnez 1 point de vie supplémentaire tous les 4 points de vie effectif.\r\n          Vous mourrez toujours si vous accumulez plus de 150% de votre\r\n          <strong>constitution</strong> en dégât.\r\n        </p>\r\n\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Constitution</td>\r\n              <td>18+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Dur à cuir</td>\r\n              <td>I</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Gagnez 1 point de vie supplémentaire tous les 2 points de vie effectif.\r\n          Vous mourrez toujours si vous accumulez plus de 150% de votre\r\n          <strong>constitution</strong> en dégât.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function DoubleSkinFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-double-skin</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Seconde peau</SubjectKeyword>\r\n      <SubjectTitle>Seconde peau</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Armures légères</td>\r\n              <td>8+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Toutes les armures légères voient leur malus de charge réduit de 1 point.\r\n        </p>\r\n\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Armures légères</td>\r\n              <td>16+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Seconde peau</td>\r\n              <td>I</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Toutes les armures légères voient leur malus de charge réduit de 2 point.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function EagleChargeFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-eagle-charge</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Charge</SubjectKeyword>\r\n      <SubjectKeyword>Charge de l'aigle</SubjectKeyword>\r\n      <SubjectTitle>Charge de l'aigle</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Épées courtes</td>\r\n              <td>10+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Lors d'une charge un personnage possédant cet atout peut toujours choisir\r\n          d'échanger une parade à l'épée courte contre une attaque supplémentaire.\r\n          Les attaques supplémentaires se résolvent comme des attaques standard avec\r\n          un malus de 10% par attaque déjà portée. Les bénefices de la charge\r\n          s'appliquent à l'ensemble des coups portés.\r\n        </p>\r\n\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Épées courtes</td>\r\n              <td>20+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Dextérité</td>\r\n              <td>14+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Lors d'une charge un personnage possédant cet atout peut toujours choisir\r\n          d'échanger jusqu'à deux parades à l'épée courte contre une attaque\r\n          supplémentaire. Les attaques supplémentaires se résolvent comme des\r\n          attaques standard avec un malus de 10% par attaque déjà portée. Les\r\n          bénefices de la charge s'appliquent à l'ensemble des coups portés.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\nimport { LocalSummary } from '../../components/LocalSummary'\r\n\r\nimport { AcrobaticDodgingFeat } from './AcrobaticDodgingFeat'\r\nimport { AcrobaticParryFeat } from './AcrobaticParryFeat'\r\nimport { AtlasBurdenFeat } from './AtlasBurdenFeat'\r\nimport { BloodBathFeat } from './BloodBathFeat'\r\nimport { BloodThirstFeat } from './BloodThirstFeat'\r\nimport { BullChargeFeat } from './BullChargeFeat'\r\nimport { CatGraceFeat } from './CatGraceFeat'\r\nimport { ChainAttackFeat } from './ChainAttackFeat'\r\nimport { ChainDodgeFeat } from './ChainDodgeFeat'\r\nimport { CounterAttackFeat } from './CounterAttackFeat'\r\nimport { DefensiveStyleFeat } from './DefensiveStyleFeat'\r\nimport { DiehardFeat } from './DiehardFeat'\r\nimport { DoubleSkinFeat } from './DoubleSkinFeat'\r\nimport { EagleChargeFeat } from './EagleChargeFeat'\r\nimport { FlashDodgeFeat } from './FlashDodgeFeat'\r\nimport { FullDodgeFeat } from './FullDodgeFeat'\r\nimport { HackerFeat } from './HackerFeat'\r\nimport { TwistedFeat } from './TwistedFeat'\r\nimport { VulcanStrikeFeat } from './VulcanStrikeFeat'\r\nimport { WindDanceFeat } from './WindDanceFeat'\r\n\r\nexport function Feats () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectTitle>Atouts</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <LocalSummary />\r\n        \r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <CatGraceFeat />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <AcrobaticParryFeat />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <AcrobaticDodgingFeat />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <AtlasBurdenFeat />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <BullChargeFeat />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <DiehardFeat />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <FullDodgeFeat />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <ChainDodgeFeat />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <WindDanceFeat />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <FlashDodgeFeat />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <BloodBathFeat />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <BloodThirstFeat />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <DefensiveStyleFeat />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <ChainAttackFeat />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <DoubleSkinFeat />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <TwistedFeat />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <CounterAttackFeat />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <EagleChargeFeat />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <HackerFeat />\r\n          </div>\r\n        </div>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function FlashDodgeFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-flash-dodge</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Esquive</SubjectKeyword>\r\n      <SubjectKeyword>Esquive instinctive</SubjectKeyword>\r\n      <SubjectTitle>Esquive instinctive</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Esquive</td>\r\n              <td>14+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Contrôle</td>\r\n              <td>12-</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le personnage peut tenter d'esquiver les flèches moyennant un malus de 30%\r\n          sur son jet d'esquive.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function FullDodgeFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-full-dodge</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Esquive</SubjectKeyword>\r\n      <SubjectKeyword>Esquive totale</SubjectKeyword>\r\n      <SubjectTitle>Esquive totale</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className=\"feat-iteration\">\r\n          <div className=\"feat-iteration-value\">\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"feat-conditions\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Esquive</td>\r\n              <td>5+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Au prix d'une action de mouvement, le personnage peut toujours choisir de\r\n          jouer en dernier et de gagner une esquive supplémentaire lors du round en\r\n          cours.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function HackerFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-hacker</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Hacker</SubjectKeyword>\r\n      <SubjectTitle>Hacker (α)</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Maîtrise de la dague</td>\r\n              <td>10+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Un fois par round, en guise d'attaque à outrance, un personnage armé\r\n          d'une dague peut toujours choisir d'ignorer tout ou partie de l'armure de\r\n          son adversaire. A cette fin le personnage doit réussir une attaque normale\r\n          plus un jet d'opposition entre sa maîtrise de la dague et le nombre de\r\n          point d'armure à ignorer multiplié par quatre. Si le second jet réussi\r\n          l'assassin porte alors un coup ignorant tout ou partie de l'armure de son\r\n          adversaire.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Maîtrise de la dague</td>\r\n              <td>20+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Dextérité</td>\r\n              <td>14+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Un fois par round, en guise d'attaque à outrance, un personnage armé\r\n          d'une dague peut toujours choisir d'ignorer tout ou partie de l'armure de\r\n          son adversaire. A cette fin le personnage doit réussir une attaque normale\r\n          plus un jet d'opposition entre sa maîtrise de la dague et le nombre de\r\n          point d'armure à ignorer multiplié par deux. Si le second jet réussi\r\n          l'assassin porte alors un coup ignorant tout ou partie de l'armure de son\r\n          adversaire.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function TwistedFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-twisted</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Coup retord</SubjectKeyword>\r\n      <SubjectTitle>Coup retord</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Maîtrise d'arme</td>\r\n              <td>15+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Une fois par round quand le personnage échoue une tentative d'attaque il\r\n          peut retenter sa chance moyennant un malus supplémentaire de 40% sur le\r\n          jet de touche. Si le second coup porte les dégâts sont divisés par deux et\r\n          arrondi à l'entier inférieur, minimum un point de dégât de chaque type\r\n          proposé par l'arme.\r\n        </p>\r\n\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            II\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Maîtrise d'arme</td>\r\n              <td>20+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Dextérité</td>\r\n              <td>16+</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Coup retord</td>\r\n              <td>I</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Deux fois par round quand le personnage échoue une tentative d'attaque il\r\n          peut retenter sa chance moyennant un malus supplémentaire de 40% sur le\r\n          jet de touche. Si le second coup porte les dégâts sont divisés par deux et\r\n          arrondi à l'entier inférieur, minimum un point de dégât de chaque type\r\n          proposé par l'arme.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function WindDanceFeat () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>feats-wind-dance</SubjectIdentifier>\r\n      <SubjectKeyword>Feat</SubjectKeyword>\r\n      <SubjectKeyword>Danse des vents</SubjectKeyword>\r\n      <SubjectTitle>Danse des vents</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='feat-iteration'>\r\n          <div className='feat-iteration-value'>\r\n            I\r\n          </div>\r\n        </div>\r\n\r\n        <table className='feat-conditions'>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan={2}>\r\n                Prérequis:\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Esquive</td>\r\n              <td>20+</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Avec cet atout le malus attribué à un enchaînement d'esquive durant un\r\n          round est réduit à 5% cumulatif.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { Feats } from './Feats'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\nimport { LocalSummary } from '../../components/LocalSummary'\r\n\r\nexport function Knowledges () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>knowledges</SubjectIdentifier>\r\n      <SubjectKeyword>Connaissance</SubjectKeyword>\r\n      <SubjectTitle>Connaissances</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <LocalSummary />\r\n\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { Knowledges } from './Knowledges'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\n\r\nexport function Introduction () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-introduction</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectTitle>Introduction</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Les maîtrises sont des champs disciplinaires appréciés sur une échelle\r\n          relative divisé en deux modificateurs : un modificateur inné et un\r\n          modificateur acquis.\r\n        </p>\r\n\r\n        {/*<Math\r\n          value={\r\n            '$$\\\\text{Niveau de maîtrise} = \\\\text{Modificateur inné} + ' +\r\n            ' \\\\text{Modificateur acquis}$$'\r\n          }\r\n        />*/}\r\n\r\n        <p>\r\n          Le <strong>modificateur d'acquis</strong> d'une maîtrise dépend du total de\r\n          point d'expérience investit dans celle-ci. Les 5 premiers points d'acquis\r\n          coûtent 1 point d'expérience, les 5 suivants 3 points d'expérience, les 5\r\n          encore suivant 6 points d'expérience et les 5 derniers 10 points\r\n          d'expérience. Il faut un total de 100 points d'expérience pour acquérir les\r\n          20 premiers point d'acquis d'une maîtrise.\r\n        </p>\r\n\r\n        <table className=\"table-1d\">\r\n          <tbody>\r\n            <tr>\r\n              <td style={{width: '120px'}}> Expérience </td>\r\n              <td style={{width: '35px'}}>   0 </td>\r\n              <td style={{width: '35px'}}>   1 </td>\r\n              <td style={{width: '35px'}}>   2 </td>\r\n              <td style={{width: '35px'}}>   3 </td>\r\n              <td style={{width: '35px'}}>   4 </td>\r\n              <td style={{width: '35px'}}>   5 </td>\r\n              <td style={{width: '35px'}}>   8 </td>\r\n              <td style={{width: '35px'}}>  11 </td>\r\n              <td style={{width: '35px'}}>  14 </td>\r\n              <td style={{width: '35px'}}>  17 </td>\r\n              <td style={{width: '35px'}}>  20 </td>\r\n              <td style={{width: '35px'}}>  26 </td>\r\n              <td style={{width: '35px'}}>  32 </td>\r\n              <td style={{width: '35px'}}>  38 </td>\r\n              <td style={{width: '35px'}}>  44 </td>\r\n              <td style={{width: '35px'}}>  50 </td>\r\n              <td style={{width: '35px'}}>  60 </td>\r\n              <td style={{width: '35px'}}>  70 </td>\r\n              <td style={{width: '35px'}}>  80 </td>\r\n              <td style={{width: '35px'}}>  90 </td>\r\n              <td style={{width: '35px'}}> 100 </td>\r\n            </tr>\r\n            <tr>\r\n              <th> Points d'acquis </th>\r\n              <th>  0 </th>\r\n              <th>  1 </th>\r\n              <th>  2 </th>\r\n              <th>  3 </th>\r\n              <th>  4 </th>\r\n              <th>  5 </th>\r\n              <th>  6 </th>\r\n              <th>  7 </th>\r\n              <th>  8 </th>\r\n              <th>  9 </th>\r\n              <th> 10 </th>\r\n              <th> 11 </th>\r\n              <th> 12 </th>\r\n              <th> 13 </th>\r\n              <th> 14 </th>\r\n              <th> 15 </th>\r\n              <th> 16 </th>\r\n              <th> 17 </th>\r\n              <th> 18 </th>\r\n              <th> 19 </th>\r\n              <th> 20 </th>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Au-delà de 20 points d'acquis le coût de chaque groupe de 5 points consécutif\r\n          continue de suivre une croissance triangulaire.\r\n        </p>\r\n\r\n        { /* <Math\r\n          value={\r\n            '$$\\\\forall n \\\\in \\\\mathbb{N}, \\\\text{Coût}(n) = \\\\frac{' +\r\n              '\\\\left \\\\lceil{\\\\frac{n}{5}}\\\\right \\\\rceil \\\\times \\\\left ( ' +\r\n                '\\\\left \\\\lceil{\\\\frac{n}{5}}\\\\right \\\\rceil + 1 ' +\r\n              '\\\\right )' +\r\n            '}{2}$$'\r\n          }\r\n        /> */ }\r\n\r\n        <p>\r\n          Le <strong>modificateur d'inné</strong> dépend des caractéristiques et\r\n          varie de -5 points à 5 points. Un modificateur d'inné est égal à la valeur de\r\n          la caractéristique qui lui est  associé divisé par 2, arrondie à l'entier\r\n          inférieur. Si le modificateur est associé à deux caractéristiques la\r\n          caractéristique dite majeure peut impacter le personnage jusqu'à 3 points\r\n          maximum et la caractéristique secondaire peut impacter le personnage jusqu'à\r\n          2 points maximum.\r\n        </p>\r\n\r\n        <table className=\"table-1d\">\r\n          <tbody>\r\n            <tr>\r\n              <td colSpan={2} style={{borderRightColor: 'transparent'}}></td>\r\n              <td colSpan={7} style={{borderLeftColor: 'transparent'}}></td>\r\n              <td colSpan={1} style={{borderLeftColor: 'transparent'}}>&larr;</td>\r\n              <td colSpan={4} style={{borderLeftColor: 'transparent'}}>Influence totale</td>\r\n              <td colSpan={1} style={{borderLeftColor: 'transparent'}}>&rarr;</td>\r\n              <td colSpan={2} style={{borderLeftColor: 'transparent'}}></td>\r\n              <td colSpan={2} style={{borderLeftColor: 'transparent'}}></td>\r\n              <td colSpan={3} style={{borderLeftColor: 'transparent'}}></td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan={5} style={{borderTopColor: 'transparent'}}></td>\r\n              <td colSpan={4}></td>\r\n              <td colSpan={1} style={{borderLeftColor: 'transparent'}}>&larr;</td>\r\n              <td colSpan={4} style={{borderLeftColor: 'transparent'}}>Influence majeure </td>\r\n              <td colSpan={1} style={{borderLeftColor: 'transparent'}}>&rarr;</td>\r\n              <td colSpan={2} style={{borderLeftColor: 'transparent'}}></td>\r\n              <td colSpan={2} style={{borderLeftColor: 'transparent'}}></td>\r\n              <td colSpan={3} style={{borderTopColor: 'transparent'}}></td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan={5} style={{borderTopColor: 'transparent'}}></td>\r\n              <td colSpan={2} style={{borderTopColor: 'transparent'}}></td>\r\n              <td colSpan={2}></td>\r\n              <td colSpan={1} style={{borderLeftColor: 'transparent'}}>&larr;</td>\r\n              <td colSpan={4} style={{borderLeftColor: 'transparent'}}>Influence mineure</td>\r\n              <td colSpan={1} style={{borderLeftColor: 'transparent'}}>&rarr;</td>\r\n              <td colSpan={2} style={{borderLeftColor: 'transparent'}}></td>\r\n              <td colSpan={2} style={{borderTopColor: 'transparent'}}></td>\r\n              <td colSpan={3} style={{borderTopColor: 'transparent'}}></td>\r\n            </tr>\r\n            <tr>\r\n              <td style={{width: '120px'}}> Caractéristique </td>\r\n              <td style={{width: '35px'}}> -10 </td>\r\n              <td style={{width: '35px'}}>  -9 </td>\r\n              <td style={{width: '35px'}}>  -8 </td>\r\n              <td style={{width: '35px'}}>  -7 </td>\r\n              <td style={{width: '35px'}}>  -6 </td>\r\n              <td style={{width: '35px'}}>  -5 </td>\r\n              <td style={{width: '35px'}}>  -4 </td>\r\n              <td style={{width: '35px'}}>  -3 </td>\r\n              <td style={{width: '35px'}}>  -2 </td>\r\n              <td style={{width: '35px'}}>  -1 </td>\r\n              <td style={{width: '35px'}}>   0 </td>\r\n              <td style={{width: '35px'}}>   1 </td>\r\n              <td style={{width: '35px'}}>   2 </td>\r\n              <td style={{width: '35px'}}>   3 </td>\r\n              <td style={{width: '35px'}}>   4 </td>\r\n              <td style={{width: '35px'}}>   5 </td>\r\n              <td style={{width: '35px'}}>   6 </td>\r\n              <td style={{width: '35px'}}>   7 </td>\r\n              <td style={{width: '35px'}}>   8 </td>\r\n              <td style={{width: '35px'}}>   9 </td>\r\n              <td style={{width: '35px'}}>  10 </td>\r\n            </tr>\r\n            <tr>\r\n              <th> Points d'inné </th>\r\n              <th> -5 </th>\r\n              <th> -5 </th>\r\n              <th> -4 </th>\r\n              <th> -4 </th>\r\n              <th> -3 </th>\r\n              <th> -3 </th>\r\n              <th> -2 </th>\r\n              <th> -2 </th>\r\n              <th> -1 </th>\r\n              <th> -1 </th>\r\n              <th> +0 </th>\r\n              <th> +0 </th>\r\n              <th> +1 </th>\r\n              <th> +1 </th>\r\n              <th> +2 </th>\r\n              <th> +2 </th>\r\n              <th> +3 </th>\r\n              <th> +3 </th>\r\n              <th> +4 </th>\r\n              <th> +4 </th>\r\n              <th> +5 </th>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Une maîtrise permet de résoudre des actions aux conséquences incertaines par\r\n          des <strong>résolutions par opposition</strong> ou des <strong>tests\r\n          d'auto-résolution</strong>. Certaines maîtrises ont des effets supplémentaires\r\n          en fonction de leur niveau, dans ce cas la nature des effets sont spécifiés\r\n          dans la description de chaque maîtrise.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../components/subject/Subject'\r\nimport { LocalSummary } from '../../components/LocalSummary'\r\n\r\nimport { Introduction } from './Introduction'\r\nimport { WeaponMasteries } from './weaponMasteries'\r\nimport { MartialStyleMasteries } from './martialStyleMasteries'\r\nimport { ArmorMasteries } from './armorMasteries'\r\nimport { SupportMasteries } from './supportMasteries'\r\n\r\nexport function Masteries () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectTitle>Maîtrises</SubjectTitle>\r\n      <SubjectSummary>\r\n        <p>\r\n          Les caractéristiques dépeignent les capacités innées d'un personnage\r\n          et influencent de nombreuses ressources connexes. Chaque\r\n          caractéristique est appréciée par un entier relatif.\r\n        </p>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <LocalSummary />\r\n\r\n        <Introduction />\r\n        <WeaponMasteries />\r\n        <MartialStyleMasteries />\r\n        <ArmorMasteries />\r\n        <SupportMasteries />\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nimport { HeavyArmorMastery } from './HeavyArmorMastery'\r\nimport { LightArmorMastery } from './LightArmorMastery'\r\nimport { MediumArmorMastery } from './MediumArmorMastery'\r\n\r\nexport function ArmorMasteries () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-armor</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Armure</SubjectKeyword>\r\n      <SubjectTitle>Maîtrises d'armure</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='row'>\r\n          <div className='col'>\r\n            <p>\r\n              Une maîtrise d'armure apprécie l'aisance d'un personnage vis-à-vis\r\n              d'une certaine classe d'armure ainsi que des manoeuvres qui lui sont\r\n              associé. Tous les 5 points investi dans la maîtrise d'une certaine\r\n              classe d'armure permet de profiter d'un bonus d'un point d'armure\r\n              supplémentaire quand une armure du type considéré est équipée par le\r\n              personnage.\r\n            </p>\r\n\r\n            <p>\r\n              En outre, une bonne spécialisation est essentielle pour débloquer des\r\n              effets uniques liés au style martial associé à la classe d'armure que\r\n              la maîtrise représente.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <MediumArmorMastery />\r\n          </div>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <LightArmorMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row justify-content-center'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <HeavyArmorMastery />\r\n          </div>\r\n        </div>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function HeavyArmorMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-armor-heavy-armor</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Armure</SubjectKeyword>\r\n      <SubjectKeyword>Armure lourde</SubjectKeyword>\r\n      <SubjectTitle>Armures lourdes</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Cette maîtrise apprécie l'aisance d'un personnage vis-à-vis d'une certaine\r\n          classe d'armure ainsi que des manoeuvres qui lui sont associé. Tous les 5\r\n          points investi dans la maîtrise d'une certaine classe d'armure permet de\r\n          profiter d'un bonus d'un point d'armure supplémentaire quand une armure du\r\n          type considéré est équipée par le personnage.\r\n        </p>\r\n\r\n        <p>\r\n          En outre, une bonne spécialisation est essentielle pour débloquer des\r\n          effets uniques liés au style martial associé à la classe d'armure que la\r\n          maîtrise représente.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function LightArmorMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-armor-light-armor</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Armure</SubjectKeyword>\r\n      <SubjectKeyword>Armure légère</SubjectKeyword>\r\n      <SubjectTitle>Armures légères</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Cette maîtrise apprécie l'aisance d'un personnage vis-à-vis d'une certaine\r\n          classe d'armure ainsi que des manoeuvres qui lui sont associé. Tous les 5\r\n          points investi dans la maîtrise d'une certaine classe d'armure permet de\r\n          profiter d'un bonus d'un point d'armure supplémentaire quand une armure du\r\n          type considéré est équipée par le personnage.\r\n        </p>\r\n\r\n        <p>\r\n          En outre, une bonne spécialisation est essentielle pour débloquer des\r\n          effets uniques liés au style martial associé à la classe d'armure que la\r\n          maîtrise représente.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function MediumArmorMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-armor-medium-armor</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Armure</SubjectKeyword>\r\n      <SubjectKeyword>Armure intermédiaire</SubjectKeyword>\r\n      <SubjectTitle>Armures intermédiaires</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg'/></td>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Cette maîtrise apprécie l'aisance d'un personnage vis-à-vis d'une certaine\r\n          classe d'armure ainsi que des manoeuvres qui lui sont associé. Tous les 5\r\n          points investi dans la maîtrise d'une certaine classe d'armure permet de\r\n          profiter d'un bonus d'un point d'armure supplémentaire quand une armure du\r\n          type considéré est équipée par le personnage.\r\n        </p>\r\n\r\n        <p>\r\n          En outre, une bonne spécialisation est essentielle pour débloquer des\r\n          effets uniques liés au style martial associé à la classe d'armure que la\r\n          maîtrise représente.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { ArmorMasteries } from './ArmorMasteries'\r\n","export { Masteries } from './Masteries'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nimport { OneHandedWeaponFightingMastery } from './OneHandedWeaponFightingMastery'\r\nimport { TwoHandedWeaponFightingMastery } from './TwoHandedWeaponFightingMastery'\r\nimport { TwoWeaponFightingMastery } from './TwoWeaponFightingMastery'\r\nimport { UnarmedFightingMastery } from './UnarmedFightingMastery'\r\nimport { WeaponAndShieldFightingMastery } from './WeaponAndShieldFightingMastery'\r\n\r\nexport function MartialStyleMasteries () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-martial-style</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Style martial</SubjectKeyword>\r\n      <SubjectTitle>Maîtrises de style martial</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='row'>\r\n          <div className='col'>\r\n            <p>\r\n              Les maîtrises de style martial apprécient la capacité d'un personnage à ce\r\n              battre en combinant des classes d'arme spécifiques. Ce sont des maîtrises qui\r\n              permettent d'améliorer les chances de touche d'une famille d'arme au complet,\r\n              cependant, a contrario des maîtrises d'arme l'augmentation des chances est\r\n              bien moins importante.\r\n            </p>\r\n\r\n            <p>\r\n              Une maîtrise de style martial peut toujours remplacer la maîtrise d'une\r\n              certaine arme en combat lors d'un test par opposition d'attaque, dans ce cas\r\n              le niveau de maîtrise de l'arme de l'attaquant est égal à sa maîtrise du style\r\n              martial considéré divisé par 2.\r\n            </p>\r\n\r\n            <p>\r\n              La seule exception concerne la maîtrise du combat à mains nues qui se comporte\r\n              comme une maîtrise d'arme standard.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <TwoHandedWeaponFightingMastery />\r\n          </div>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <OneHandedWeaponFightingMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <WeaponAndShieldFightingMastery />\r\n          </div>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <TwoWeaponFightingMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row justify-content-center'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <UnarmedFightingMastery />\r\n          </div>\r\n        </div>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function OneHandedWeaponFightingMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-martial-style-one-handed-weapon-fighting</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Style martial</SubjectKeyword>\r\n      <SubjectKeyword>Combat à l'arme à une main</SubjectKeyword>\r\n      <SubjectTitle>Combat à l'arme à une main</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function TwoHandedWeaponFightingMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-martial-style-two-handed-weapon-fighting</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Style martial</SubjectKeyword>\r\n      <SubjectKeyword>Combat à l'arme à deux mains</SubjectKeyword>\r\n      <SubjectTitle>Combat à l'arme à deux mains</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function TwoWeaponFightingMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-martial-style-two-weapon-fighting</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Style martial</SubjectKeyword>\r\n      <SubjectKeyword>Combat à deux armes</SubjectKeyword>\r\n      <SubjectTitle>Combat à deux armes</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function UnarmedFightingMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-martial-style-unarmed-combat</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Style martial</SubjectKeyword>\r\n      <SubjectKeyword>Combat à mains nues</SubjectKeyword>\r\n      <SubjectTitle>Combat à mains nues</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n              <td><img src='./images/characteristics/strength.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function WeaponAndShieldFightingMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-martial-style-weapon-and-shield-fighting</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Style martial</SubjectKeyword>\r\n      <SubjectKeyword>Combat à l'arme et au bouclier</SubjectKeyword>\r\n      <SubjectTitle>Combat à l'arme et au bouclier</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n              <td><img src='./images/characteristics/strength.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { MartialStyleMasteries } from './MartialStyleMasteries'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function AcrobaticsMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc-acrobatic</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectKeyword>Acrobatie</SubjectKeyword>\r\n      <SubjectTitle>Acrobatie</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg' /></td>\r\n              <td><img src='./images/characteristics/strength.svg' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La maîtrise de l'acrobatie apprécie la capacité à utiliser son corps de\r\n          manière ingénieuse pour s'extirper d'une situation délicate. Sauter en\r\n          travers d'un ravin, passer sous les jambes d'un adversaire ou courrir en\r\n          terrain difficile sont des exemples de situation où un test d'acrobatie\r\n          est nécéssaire.\r\n        </p>\r\n\r\n        <p>\r\n          La maîtrise de l'acrobatie est complémentaire à la maîtrise de l'esquive\r\n          et permet d'augmenter le nombre d'esquive disponible par round grâce aux\r\n          atouts qui lui sont associés.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function ClimbingMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc-climbing</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectKeyword>Escalade</SubjectKeyword>\r\n      <SubjectTitle>Escalade</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n              <td><img src='./images/characteristics/strength.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function DiscretionMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc-discretion</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectKeyword>Discrétion</SubjectKeyword>\r\n      <SubjectTitle>Discrétion</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg' width='100' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La maîtrise de la discrétion apprécie la capacité d'un personnage à ne\r\n          pas se faire voir ni entendre. Un jet de discrétion se fait toujours\r\n          en opposition avec la perception des éventuels adversaires. Un test de\r\n          discrétion n'est joué que dans le cas où l'individu cherchant à ce faire\r\n          discret est observable, aussi, si la vision de l'observateur est obstruée\r\n          ou que son audition est extrêmement mauvaise aucun jet de perception ne\r\n          peut être opposé à une tentative de discrétion.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function DodgeMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc-dodge</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectKeyword>Esquive</SubjectKeyword>\r\n      <SubjectTitle>Esquive</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg' width='100' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La maîtrise de l'esquive apprécie la capacité d'un personnage à se mouvoir\r\n          dans l'objectif d'échapper à une menace. L'esquive est une maîtrise\r\n          importante pour les combats car elle permet d'éviter un coup par tour tout\r\n          en se repositionnant. Elle est aussi la seule compétence permettant\r\n          d'échapper à certains pièges ou sortilèges.\r\n        </p>\r\n\r\n        <p>\r\n          L'esquive se joue toujours en opposition avec le degré de difficulté de la\r\n          menace. Esquiver une attaque influera les chances de succès de l'attaquant\r\n          vis-à-vis de sa propre maîtrise de son arme. Esquiver un sort ou un piège\r\n          influera ses chances de succès vis-à-vis de son propre degré de\r\n          difficulté. Le succès d'une esquive peut être mitigé dans certaines\r\n          situations.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n\r\n\r\n\r\n/**\r\n    <table class='table'>\r\n      <thead>\r\n        <tr>\r\n          <th colspan='2'>Atouts</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td><strong>Esquive totale</strong></td>\r\n          <td>Esquive: 4+</td>\r\n        </tr>\r\n        <tr>\r\n          <td colspan='2'>\r\n            Le personnage peut toujours choisir de jouer en dernier et de gagner une\r\n            esquive supplémentaire lors du round en cours en échange d'une action\r\n            de mouvement.\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td><strong>Esquive en chaîne I</strong></td>\r\n          <td>Esquive: 8+</td>\r\n        </tr>\r\n        <tr>\r\n          <td colspan='2'>\r\n            Le personnage gagne une esquive supplémentaire par round, chaque esquive\r\n            supplémentaire jouée durant un round se voit attribuée un malus de 10%\r\n            cumulatif.\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td><strong>Esquive en chaîne II</strong></td>\r\n          <td>Esquive: 12+</td>\r\n        </tr>\r\n        <tr>\r\n          <td colspan='2'>\r\n            Le personnage gagne une esquive supplémentaire par round, chaque esquive\r\n            supplémentaire jouée durant un round se voit attribuée un malus de 10%\r\n            cumulatif.\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td><strong>Esquive instinctive</strong></td>\r\n          <td>Esquive: 14+</td>\r\n        </tr>\r\n        <tr>\r\n          <td colspan='2'>\r\n            Le personnage peut tenter d'esquiver les flèches avec un malus de 25%\r\n            sur son jet d'esquive.\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td><strong>Danse des vents</strong></td>\r\n          <td>Esquive: 16+</td>\r\n        </tr>\r\n        <tr>\r\n          <td colspan='2'>\r\n            Le personnage gagne une esquive supplémentaire par round. Avec cet atout\r\n            le malus attribué à un enchaînement d'esquive durant un round est réduit\r\n            à 5% cumulatif.\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n*/\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function HorseRidingMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc-horse-riding</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectKeyword>Équitation</SubjectKeyword>\r\n      <SubjectTitle>Équitation</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg' width='100' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function LockPickingMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc-lock-picking</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectKeyword>Crochetage</SubjectKeyword>\r\n      <SubjectTitle>Crochetage</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg' /></td>\r\n              <td><img src='./images/characteristics/luck.svg' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La compétence crochetage évalue la capacité d'un personnage à\r\n          se jouer de toutes sortes de serrures et de mécanismes. Tenter\r\n          d'ouvrir une porte ou un coffre sans sa clef, de désactiver une\r\n          éventuelle alarme ou désamorcer un piège sont des exemples de\r\n          situations ou un test de crochetage est nécéssaire.\r\n        </p>\r\n\r\n        <p>\r\n          Une tentative de crochetage se joue toujours en opposition avec le\r\n          niveau de difficulté du mécanisme à forcer.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function PerceptionMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc-perception</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectKeyword>Perception</SubjectKeyword>\r\n      <SubjectTitle>Perception</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg' width='100' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La perception représente la capacité d'un personnage à utiliser ses\r\n          sens pour analyser son environnement. Tenter d'écouter des\r\n          conversations lointaines, de trouver un autre personnage cherchant\r\n          à se faire discret ou chercher des mécanismes cachés dans le sol et\r\n          les murs sont des actions nécéssitant un jet de perception.\r\n        </p>\r\n\r\n        <p>\r\n          Si la perception se fait à l'encontre d'un autre personnage elle se\r\n          joue contre la compétence qu'il utilise au moment où la perception\r\n          est joué. Un test de perception contre discrétion est un cas\r\n          d'école. Dans le cas où la perception se joue contre l'environnement\r\n          elle se fera contre son degré de difficulté.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function SearchMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc-search</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectKeyword>Fouille</SubjectKeyword>\r\n      <SubjectTitle>Fouille</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/luck.svg' width='100' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La compétence fouille évalue la capacité d'un personnage à trouver\r\n          ce qu'il cherche dans un environnement étranger. Un personnage avec\r\n          une bonne compétence fouille est donc capable d'estimer précisément\r\n          si un document est présent dans une pièce qu'il vient de forcer, de\r\n          délester un cadavre de ses biens de valeur en un temps record ou de\r\n          rechercher d'éventuels passages secrets et pièges.\r\n        </p>\r\n\r\n        <p>\r\n          La compétence fouille se joue toujours en opposition du degré de\r\n          difficulté de l'objet ou du sujet recherché. Si le sujet de la\r\n          fouille à été intentionellement dissimulé la fouille se joue contre\r\n          le degré de succès de la tentative de dissimulation. Quand aux\r\n          éléments en évidence ils doivnet toujours être portées à la\r\n          connaissance du joueur.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function SleightOfHandMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc-sleight-of-hand</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectKeyword>Vol à la tire</SubjectKeyword>\r\n      <SubjectTitle>Vol à la tire</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg' /></td>\r\n              <td><img src='./images/characteristics/luck.svg' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La compétence vol à la tire évalue la capacité d'un personnage\r\n          à subtiliser les biens d'un portées par un autre sans éveiller son\r\n          attention. Une tentative de vol à la tire s'effectue toujours en\r\n          opposition avec la compétence de perception de la victime. Tout\r\n          comme la compétence discrétion, un test de vol à la tire n'a lieu\r\n          que si la victime est capable de percevoir le voleur d'une\r\n          quelconque manière.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nimport { AcrobaticsMastery } from './AcrobaticsMastery'\r\nimport { ClimbingMastery } from './ClimbingMastery'\r\nimport { DiscretionMastery } from './DiscretionMastery'\r\nimport { DodgeMastery } from './DodgeMastery'\r\nimport { HorseRidingMastery } from './HorseRidingMastery'\r\nimport { LockPickingMastery } from './LockPickingMastery'\r\nimport { PerceptionMastery } from './PerceptionMastery'\r\nimport { SearchMastery } from './SearchMastery'\r\nimport { SleightOfHandMastery } from './SleightOfHandMastery'\r\nimport { SwimingMastery } from './SwimingMastery'\r\n\r\nexport function SupportMasteries () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectTitle>Maîtrises utilitaires</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <p>\r\n              Les maîtrises utilitaires sont divers champs disciplinaire permettant de\r\n              garantir le succès d'action spécifique en jeu comme l'escalade d'une muraille\r\n              ou une tentative de larcin. Ce sont principalement des maîtrises visant à être\r\n              l'objet de résolution par opposition ou pour certaines de test\r\n              d'auto-résolution.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <AcrobaticsMastery />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <LockPickingMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <DiscretionMastery />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <HorseRidingMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <ClimbingMastery />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <DodgeMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <SearchMastery />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <SwimingMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <PerceptionMastery />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <SleightOfHandMastery />\r\n          </div>\r\n        </div>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function SwimingMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-misc-swiming</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Utilitaire</SubjectKeyword>\r\n      <SubjectKeyword>Natation</SubjectKeyword>\r\n      <SubjectTitle>Natation</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg' /></td>\r\n              <td><img src='./images/characteristics/constitution.svg' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { SupportMasteries } from './SupportMasteries'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function AxeMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-axe</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Hache</SubjectKeyword>\r\n      <SubjectTitle>Haches</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg' /></td>\r\n              <td><img src='./images/characteristics/dexterity.svg' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La hache est une arme à une main légère parfaite pour découper les armures\r\n          et les boucliers des adversaire tout en affligeant des blessures\r\n          dangereuse. C'est une arme associé à un style agressif visant d'abord à\r\n          réduire la présence des blindés sur le champ de bataille.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function BastardSwordMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-bastard-sword</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Épée</SubjectKeyword>\r\n      <SubjectKeyword>Épée bâtarde</SubjectKeyword>\r\n      <SubjectTitle>Épées bâtardes</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg' /></td>\r\n              <td><img src='./images/characteristics/dexterity.svg' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          L'épée bâtarde, ou épée à une main et demie est une arme hybride située\r\n          entre l'épée courte et l'épée longue pouvant donc être manié aussi bien à\r\n          une main qu'à deux. C'est une arme associé à un style hybride de petits\r\n          enchainement d'attaque suivi de coups plus lent mais plus puissant.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function DaggerMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-dagger</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Dague</SubjectKeyword>\r\n      <SubjectTitle>Dagues</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La dague est une arme au corps à corps très précise mais souffrant d'une\r\n          alonge faible et de dégâts réduit. Cette arme est associé à un style\r\n          agressif dont l'objectif principal est d'aller chercher les points faibles\r\n          de son adversaire pour infliger un maximum de dégât. La dague permet de\r\n          bonifier les coups critiques et de se spécialiser dans l'application\r\n          d'effets négatifs via des frappes chirugicales.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function HammerMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-hammer</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Marteau</SubjectKeyword>\r\n      <SubjectTitle>Marteau</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg' /></td>\r\n              <td><img src='./images/characteristics/dexterity.svg' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le marteau est une arme à une main légère parfaite pour infliger des\r\n          dégâts contondant ignorant l'armure, c'est cependant une arme très vite\r\n          limitée en présence d'un bouclier pour la parrer.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function HeavyCrossbowMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-heavy-crossbow</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Arbalète</SubjectKeyword>\r\n      <SubjectKeyword>Arbalète lourde</SubjectKeyword>\r\n      <SubjectTitle>Arbalètes lourdes</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n              <td><img src='./images/characteristics/strength.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          L'arbalète lourde est une arme à distance précise infligeant de lourds\r\n          dégâts avec une excelente pénétration des armures mais elle souffre\r\n          cependant d'une cadence de tir très faible. C'est une arme associée à un\r\n          style martial permettant d'éliminer des cibles importantes à très bonne\r\n          distance.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function LightCrossbowMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-light-crossbow</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Arbalète</SubjectKeyword>\r\n      <SubjectKeyword>Arbalète légère</SubjectKeyword>\r\n      <SubjectTitle>Arbalètes légères</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          L'arbalète légère est une arme à distance à la cadence de tir lente mais\r\n          infligeant de bon dégâts avec une capacité de pénétration des armures.\r\n          C'est une arme exotique associé à un style martial hybride de combat au\r\n          corps à corps et à distance bien que sa recharge puisse rapidement poser\r\n          un problème aux individus les moins préparés.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function LongBowMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-long-bow</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Arc long</SubjectKeyword>\r\n      <SubjectKeyword>Arc</SubjectKeyword>\r\n      <SubjectTitle>Arcs longs</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg'/></td>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          L'arc long est une arme à distance à moyenne et longue portée avec une\r\n          recharge rapide. C'est une arme parfaite pour les personnage d'arrière\r\n          ligne souhaitant appliquer une pression constante sur l'infanterie légère\r\n          et intermédiaire. Malheureusement les arcs rencontrent rapidement leurs\r\n          limite face aux armures les plus lourdes et leur épaisse couche d'acier.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function LongSwordMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-long-sword</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Épée longue</SubjectKeyword>\r\n      <SubjectKeyword>Épée</SubjectKeyword>\r\n      <SubjectTitle>Épées longues</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          L'épée longue, ou épée à deux main est une arme au corps à corps\r\n          dévastatrice permettant d'appliquer de gros dégâts de zone au détriment\r\n          du nombre de coup porté par round. C'est une arme associé à un style\r\n          martial de première ligne particulièrement dangereux pour l'infanterie\r\n          légère.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function RodMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-rod</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Bâton</SubjectKeyword>\r\n      <SubjectTitle>Bâtons</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le bâton est une arme exotique à deux main permettant un excelent contrôle\r\n          des foules grâce à son allonge.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function ShieldMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-shield</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Bouclier</SubjectKeyword>\r\n      <SubjectTitle>Boucliers</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le bouclier est un outil parfait arrêter les projectiles, parrer les coups\r\n          et réduire la pression exercée par les armes contondentes. C'est aussi en\r\n          soit une arme capable de faire de gros dégât quand elle est projetée sur\r\n          ses adversaire lors d'une charge. Le bouclier est l'outil parfait pour\r\n          dessiner et maintenir une ligne de front sur le long terme.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function ShortBowMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-short-bow</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Arc court</SubjectKeyword>\r\n      <SubjectKeyword>Arc</SubjectKeyword>\r\n      <SubjectTitle>Arcs courts</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function ShortSwordMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-short-sword</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Épée courte</SubjectKeyword>\r\n      <SubjectKeyword>Épée</SubjectKeyword>\r\n      <SubjectTitle>Épées courtes</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n              <th>Mineure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n              <td><img src='./images/characteristics/strength.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          L'épée courte est une arme légère de corp à corp manipulable à une\r\n          main. C'est une arme permettant à la fois d'enchaîner rapidement les\r\n          coups ou les parades. Contrairement à sa version lourde, l'épée courte\r\n          est l'outil parfait pour les amateurs d'un style martial mobile\r\n          permettant d'éxécuter rapidement les cibles les plus vulnérables.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function SpearMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-spear</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Lance</SubjectKeyword>\r\n      <SubjectTitle>Lances</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/dexterity.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La lance est une arme à une main mortelle avec une excelente allonge\r\n          permettant un très bon contrôle du champ de bataille. Cette arme est\r\n          associé à un style martial plutôt statique permettant d'imposer une\r\n          présence constante sur un champ de bataille en réduisant grandement la\r\n          mobilité des autres personnages.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function WarAxeMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-war-axe</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Hache de guerre</SubjectKeyword>\r\n      <SubjectKeyword>Hache</SubjectKeyword>\r\n      <SubjectTitle>Haches de guerre</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg' /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          La hache de guerre est une arme lourde à deux main dévastatrice pour\r\n          l'équipement adverse. C'est une arme associé à un style extrêmement\r\n          agressif visant d'abord à réduire la présence des blindés sur le champ\r\n          de bataille.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function WarHammerMastery () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons-war-hammer</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Marteau de guerre</SubjectKeyword>\r\n      <SubjectKeyword>Marteau</SubjectKeyword>\r\n      <SubjectTitle>Marteaux de guerre</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <table className='instinct-modifier'>\r\n          <thead>\r\n            <tr>\r\n              <th>Majeure</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src='./images/characteristics/strength.svg'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <p>\r\n          Le marteau de guerre est une arme lourde de corps à corps manipulable \r\n          à deux main. C'est une arme extrêmement lente mais parfaite pour\r\n          nullifier les parades par l'utilisation d'un effet de levier\r\n          dévastateur. Le marteau de guerre n'offre pas d'option défensive et\r\n          est associé a un style de combat blindé de première ligne visant à\r\n          fracasser l'infanterie en appliquant de gros dégâts bruts.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nimport { AxeMastery } from './AxeMastery'\r\nimport { BastardSwordMastery } from './BastardSwordMastery'\r\nimport { DaggerMastery } from './DaggerMastery'\r\nimport { HammerMastery } from './HammerMastery'\r\nimport { HeavyCrossbowMastery } from './HeavyCrossbowMastery'\r\nimport { LightCrossbowMastery } from './LightCrossbowMastery'\r\nimport { LongBowMastery } from './LongBowMastery'\r\nimport { LongSwordMastery } from './LongSwordMastery'\r\nimport { RodMastery } from './RodMastery'\r\nimport { ShieldMastery } from './ShieldMastery'\r\nimport { ShortBowMastery } from './ShortBowMastery'\r\nimport { ShortSwordMastery } from './ShortSwordMastery'\r\nimport { SpearMastery } from './SpearMastery'\r\nimport { WarAxeMastery } from './WarAxeMastery'\r\nimport { WarHammerMastery } from './WarHammerMastery'\r\n\r\nexport function WeaponMasteries () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>masteries-weapons</SubjectIdentifier>\r\n      <SubjectKeyword>Maîtrise</SubjectKeyword>\r\n      <SubjectKeyword>Arme</SubjectKeyword>\r\n      <SubjectTitle>Maîtrises d'arme</SubjectTitle>\r\n      <SubjectSummary>\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <div className='row'>\r\n          <div className='col'>\r\n            <p>\r\n              Les maîtrises d'arme apprécient l'aisance avec laquelle un\r\n              personnage manie une arme particulière ainsi que l'étendue de sa\r\n              connaissance de l'art martial qui lui est associé. Ce type de\r\n              maîtrise est utilisé par l'attaquant dans ses tests d'opposition\r\n              pour toucher et par le défenseur dans ses tests d'opposition pour\r\n              parer. Toutes les armes sont associées à un ou plusieurs styles de\r\n              combat, et une bonne spécialisation est essentielle pour débloquer\r\n              des effets uniques liés à l'arme que la maîtrise représente.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <LightCrossbowMastery />\r\n          </div>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <HeavyCrossbowMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <ShortBowMastery />\r\n          </div>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <LongBowMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <RodMastery />\r\n          </div>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <ShieldMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <DaggerMastery />\r\n          </div>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <BastardSwordMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <ShortSwordMastery />\r\n          </div>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <LongSwordMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <AxeMastery />\r\n          </div>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <WarAxeMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <SpearMastery />\r\n          </div>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <HammerMastery />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row justify-content-center'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <WarHammerMastery />\r\n          </div>\r\n        </div>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { AxeMastery } from './AxeMastery'\r\nexport { BastardSwordMastery } from './BastardSwordMastery'\r\nexport { DaggerMastery } from './DaggerMastery'\r\nexport { HammerMastery } from './HammerMastery'\r\nexport { HeavyCrossbowMastery } from './HeavyCrossbowMastery'\r\nexport { LightCrossbowMastery } from './LightCrossbowMastery'\r\nexport { LongBowMastery } from './LongBowMastery'\r\nexport { LongSwordMastery } from './LongSwordMastery'\r\nexport { RodMastery } from './RodMastery'\r\nexport { ShieldMastery } from './ShieldMastery'\r\nexport { ShortBowMastery } from './ShortBowMastery'\r\nexport { ShortSwordMastery } from './ShortSwordMastery'\r\nexport { SpearMastery } from './SpearMastery'\r\nexport { WarAxeMastery } from './WarAxeMastery'\r\nexport { WarHammerMastery } from './WarHammerMastery'\r\nexport { WeaponMasteries } from './WeaponMasteries'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\nimport { Table2D } from '../../../components/table/Table2D'\r\n\r\nfunction range (value : number) : number[] {\r\n  const result : number[] = []\r\n\r\n  for (let index = 0; index <= value; ++index) {\r\n    result.push(index)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport function AdversialTestRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-core-adversial-test</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle principale</SubjectKeyword>\r\n      <SubjectKeyword>Résolution</SubjectKeyword>\r\n      <SubjectKeyword>Résolution par opposition</SubjectKeyword>\r\n      <SubjectTitle>Résolution par opposition</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          La résolution par opposition décide de l'issue d'une confrontation entre\r\n          deux éléments du récit. C'est le test type pour résoudre le succès des\r\n          attaques d'un épéiste ou la résistance d'une serrure à une tentative de\r\n          crochetage.\r\n        </p>\r\n\r\n        <p>\r\n          Le joueur qui lance les dés est dit acteur de la résolution et c'est de\r\n          son point de vue que les chances de succès sont calculées. Le joueur qui\r\n          subit le test est dit opposant à la résolution. Un joueur est toujours\r\n          acteur de la résolution lorsqu'il se confronte à un élément du récit. Dans\r\n          le cas où deux joueurs se confrontent, l'acteur est décidé d'un commun\r\n          accord ou à pile ou face. Finalement, si deux éléments du récit\r\n          interagissent entre-eux, c'est au maître du jeu de répartir les rôles.\r\n        </p>\r\n\r\n        <p>\r\n          Une résolution par opposition compare une compétence de l'acteur appelée\r\n          compétence offensive à une compétence de l'opposant dite compétence\r\n          défensive. Pour que l'issue du test soit favorable pour l'acteur celui-ci\r\n          doit obtenir un score inférieur ou égal à son seuil de succès sur un dé\r\n          100. Le seuil de succès est la différence entre la compétence offensive et\r\n          la compétence défensive multipliée par 5 et ajoutée à une constante de 50.\r\n          Par exemple un personnage avec une compétence de 10 en discrétion tentant\r\n          de se faire discret en escaladant une muraille surveillée par un garde\r\n          ayant une compétence de 12 en perception aura un seuil de succès de 40%.\r\n          Et ce sera toujours au joueur de résoudre le test.\r\n        </p>\r\n\r\n        <table className='table-1d'>\r\n          <tbody>\r\n            <tr>\r\n              <td style={{width: '35px'}}>  5<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}>  5<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 10<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 15<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 20<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 25<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 30<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 35<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 40<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 45<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 50<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 55<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 60<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 65<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 70<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 75<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 80<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 85<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 90<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 95<span className='percent'>%</span> </td>\r\n              <td style={{width: '35px'}}> 95<span className='percent'>%</span> </td>\r\n            </tr>\r\n            <tr>\r\n              <th> -∞ </th>\r\n              <th> -9 </th>\r\n              <th> -8 </th>\r\n              <th> -7 </th>\r\n              <th> -6 </th>\r\n              <th> -5 </th>\r\n              <th> -4 </th>\r\n              <th> -3 </th>\r\n              <th> -2 </th>\r\n              <th> -1 </th>\r\n              <th>  0 </th>\r\n              <th> +1 </th>\r\n              <th> +2 </th>\r\n              <th> +3 </th>\r\n              <th> +4 </th>\r\n              <th> +5 </th>\r\n              <th> +6 </th>\r\n              <th> +7 </th>\r\n              <th> +8 </th>\r\n              <th> +9 </th>\r\n              <th> +∞ </th>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <Table2D className='text-center'>\r\n          {\r\n            range(20).map(function renderRow (index : number) : ReactNode {\r\n              return (\r\n                <Table2D.Row key={index}>\r\n                  <Table2D.Cell heading>{index}</Table2D.Cell>\r\n                  {\r\n                    range(20).map((other : number) : ReactNode => (\r\n                      <Table2D.Cell key={other}>\r\n                        {Math.min(Math.max(index - other, -9), +9) * 5 + 50}\r\n                        <span className='percent'>%</span>\r\n                      </Table2D.Cell>\r\n                    ))\r\n                  }\r\n                </Table2D.Row>\r\n              )\r\n            }).reverse()\r\n          }\r\n          <Table2D.Row>\r\n            <Table2D.Cell heading width='35px' />\r\n            {\r\n              range(20).map((index : number) : ReactNode => (\r\n                <Table2D.Cell key={index} heading width='35px'>\r\n                  {index}\r\n                </Table2D.Cell>\r\n              ))\r\n            }\r\n          </Table2D.Row>\r\n        </Table2D>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","\r\nimport React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function CooperationRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-core-cooperation</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle principale</SubjectKeyword>\r\n      <SubjectKeyword>Coopération</SubjectKeyword>\r\n      <SubjectTitle>Coopération</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Lors d'une auto-résolution ou d'un test d'opposition l'autorisant une\r\n          entitée peut se faire aider par une ou plusieurs entitée tierce. Cette\r\n          situation est alors appellée une résolution en coopération. En cas\r\n          de coopération il y a toujours une entitée maître choisie au préalable\r\n          qui sera chargée de résoudre le test et d'organiser les opérations,\r\n          toute entitée voulant coopérer à la réussite de l'entitée maître peut\r\n          alors lui faire profiter d'un bonus dégressif en fonction de son\r\n          expertise propre.\r\n        </p>\r\n\r\n        <p>\r\n          L'organisation de la coopération ce fait par étape, à chaque étape,\r\n          une nouvelle entitée peut proposer son aide au groupe déjà préparé.\r\n          Pour ce faire l'entitée souhaitant coopérer doit avoir une expertise\r\n          au moins équivalente à la moitiée de l'expertise du groupe. Si une\r\n          entitée peut rejoindre le groupe, l'expertise de celui-ci devient\r\n          équivalente à l'expertise de l'entitée maître, plus le quart de\r\n          l'expertise de la première entitée ayant rejoint le groupe, plus le\r\n          sixième de l'expertise de la seconde entitée ayant rejointe le groupe,\r\n          plus le huitième de la troisième entitée ayant rejointe le groupe, et\r\n          ainsi de suite.\r\n        </p>\r\n\r\n        <p>\r\n          Dans certaines situations la coopération peut avoir des effets\r\n          supplémantaires comme une réduction du temps nécéssaire à la\r\n          production d'une arme par exemple. Dans ce cas précis, l'action doit\r\n          préciser les bonus résultant d'une coopération dans sa description.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\nimport { LocalSummary } from '../../../components/LocalSummary'\r\n\r\nimport { AdversialTestRule } from './AdversialTestRule'\r\nimport { CooperationRule } from './CooperationRule'\r\nimport { CriticalHitRule } from './CriticalHitRule'\r\nimport { RerollRule } from './RerollRule'\r\nimport { SelfResolutionRule } from './SelfResolutionRule'\r\nimport { SituationalDiceRule } from './SituationalDiceRule'\r\n\r\nexport function CoreRules () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-core</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle principale</SubjectKeyword>\r\n      <SubjectTitle>Règles principales</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <LocalSummary />\r\n\r\n        <AdversialTestRule />\r\n        <SelfResolutionRule />\r\n        <CooperationRule />\r\n        <CriticalHitRule />\r\n        <RerollRule />\r\n        <SituationalDiceRule />\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","\r\nimport React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function CriticalHitRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-core-critical-hit</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle principale</SubjectKeyword>\r\n      <SubjectKeyword>Critique</SubjectKeyword>\r\n      <SubjectTitle>Critiques</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Lors d'un test, un score supérieur à 95% est un échec critique aux\r\n          répercussions désastreuses. À l'inverse, un score inférieur ou égal à\r\n          5% est un succès critique aux conséquences bénéfiques. Les critiques\r\n          priment sur les chances de succès réelles d'un personnage. Ainsi, un\r\n          personnage qui devrait réussir systématiquement une action à toujours\r\n          5% de chance de l'échouer, et un personnage qui devrait échouer\r\n          systématiquement une action à toujours 5% de chance de la réussir.\r\n        </p>\r\n\r\n        <p>\r\n          Les conséquences d'un critique sont déterminées par le maître du\r\n          jeu et peuvent avoir lieu immédiatement comme dans un avenir proche.\r\n          Certaines règles supplémentaires peuvent s'appliquer. Les conséquences\r\n          d'un critique lors d'un test d'auto-résolution sont laissés à la\r\n          discrétion du maître du jeu.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","\r\nimport React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function RerollRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-core-reroll</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle principale</SubjectKeyword>\r\n      <SubjectKeyword>Pousser le test</SubjectKeyword>\r\n      <SubjectTitle>Pousser le test</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Lors d'un échec qui n'est pas un échec critique et moyennant une\r\n          justification acceptée par le maître du jeu, un personnage peut tenter de\r\n          repasser un test qu'il vient juste d'échouer. Si celui-ci réussi la\r\n          seconde tentative alors le test est passé, s'il échoue une seconde fois\r\n          alors le joueur est sujet à un échec critique.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\nimport { Table2D } from '../../../components/table/Table2D'\r\n\r\nfunction range (value : number) : number[] {\r\n  const result : number[] = []\r\n\r\n  for (let index = 0; index <= value; ++index) {\r\n    result.push(index)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport function SelfResolutionRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-core-self-resolution</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle principale</SubjectKeyword>\r\n      <SubjectKeyword>Résolution</SubjectKeyword>\r\n      <SubjectKeyword>Auto-résolution</SubjectKeyword>\r\n      <SubjectTitle>Auto-résolution</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          L'auto-résolution permet de mesurer la qualité de la réussite d'une action\r\n          en fonction des capacités seules d'un personnage. C'est le test pour\r\n          mesurer la dangerosité d'un piège installé, la fiabilité d'une serrure ou\r\n          la qualité d'une production d'alchimie. L'auto-résolution produit donc un\r\n          degré de difficulté ou une qualité dépendamment que la production soit\r\n          une épreuve ou un objet.\r\n        </p>\r\n\r\n        <table className='table-1d'>\r\n          <tbody>\r\n            <tr>\r\n              <td style={{width: '35px'}}> +3</td>\r\n              <td style={{width: '35px'}}> +2</td>\r\n              <td style={{width: '35px'}}> +2</td>\r\n              <td style={{width: '35px'}}> +1</td>\r\n              <td style={{width: '35px'}}> +1</td>\r\n              <td style={{width: '35px'}}> +1</td>\r\n              <td style={{width: '35px'}}> +0</td>\r\n              <td style={{width: '35px'}}> +0</td>\r\n              <td style={{width: '35px'}}> +0</td>\r\n              <td style={{width: '35px'}}> +0</td>\r\n              <td style={{width: '35px'}}> +0</td>\r\n              <td style={{width: '35px'}}> +0</td>\r\n              <td style={{width: '35px'}}> -1</td>\r\n              <td style={{width: '35px'}}> -1 </td>\r\n              <td style={{width: '35px'}}> -2 </td>\r\n              <td style={{width: '35px'}}> -2 </td>\r\n              <td style={{width: '35px'}}> &lfloor;&divide;3&rfloor; </td>\r\n              <td style={{width: '35px'}}> &lfloor;&divide;3&rfloor; </td>\r\n              <td style={{width: '35px'}}> &lfloor;&divide;4&rfloor; </td>\r\n              <td style={{width: '35px'}}> &lfloor;&divide;5&rfloor; </td>\r\n            </tr>\r\n            <tr>\r\n              {\r\n                range(19).map(function renderRow (index : number) : ReactNode {\r\n                  return (\r\n                    <th key={index} style={{width: '35px'}}>\r\n                      {(index + 1) * 5}<span className='percent'>%</span>\r\n                    </th>\r\n                  )\r\n                })\r\n              }\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <Table2D className='text-center'>\r\n            {\r\n              range(18).map(function renderRow (index : number) : ReactNode {\r\n                return (\r\n                  <Table2D.Row key={index}>\r\n                    <Table2D.Cell heading>{index}</Table2D.Cell>\r\n                    <Table2D.Cell>{index + 3}</Table2D.Cell>\r\n                    <Table2D.Cell>{index + 2}</Table2D.Cell>\r\n                    <Table2D.Cell>{index + 2}</Table2D.Cell>\r\n                    <Table2D.Cell>{index + 1}</Table2D.Cell>\r\n                    <Table2D.Cell>{index + 1}</Table2D.Cell>\r\n                    <Table2D.Cell>{index + 1}</Table2D.Cell>\r\n                    <Table2D.Cell>{index}</Table2D.Cell>\r\n                    <Table2D.Cell>{index}</Table2D.Cell>\r\n                    <Table2D.Cell>{index}</Table2D.Cell>\r\n                    <Table2D.Cell>{index}</Table2D.Cell>\r\n                    <Table2D.Cell>{index}</Table2D.Cell>\r\n                    <Table2D.Cell>{index}</Table2D.Cell>\r\n                    <Table2D.Cell>{Math.max(index - 1, 0)}</Table2D.Cell>\r\n                    <Table2D.Cell>{Math.max(index - 1, 0)}</Table2D.Cell>\r\n                    <Table2D.Cell>{Math.max(index - 2, 0)}</Table2D.Cell>\r\n                    <Table2D.Cell>{Math.max(index - 2, 0)}</Table2D.Cell>\r\n                    <Table2D.Cell>{Math.floor(index / 3)}</Table2D.Cell>\r\n                    <Table2D.Cell>{Math.floor(index / 3)}</Table2D.Cell>\r\n                    <Table2D.Cell>{Math.floor(index / 4)}</Table2D.Cell>\r\n                    <Table2D.Cell>{Math.floor(index / 5)}</Table2D.Cell>\r\n                  </Table2D.Row>\r\n                )\r\n              }).reverse()\r\n            }\r\n            <Table2D.Row>\r\n              <th style={{width: '35px'}}></th>\r\n              {\r\n                range(19).map(function renderRow (index : number) : ReactNode {\r\n                  return (\r\n                    <Table2D.Cell heading key={index} width='35px'>\r\n                      {(index + 1) * 5}<span className='percent'>%</span>\r\n                    </Table2D.Cell>\r\n                  )\r\n                })\r\n              }\r\n            </Table2D.Row>\r\n        </Table2D>\r\n\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","\r\nimport React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function SituationalDiceRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-core-situationnal-dice</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle principale</SubjectKeyword>\r\n      <SubjectKeyword>Résolution</SubjectKeyword>\r\n      <SubjectKeyword>Bonus et malus situationnel</SubjectKeyword>\r\n      <SubjectTitle>Bonus et malus situationnel</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Quand une action intentée est bien argumentée, l'acteur peut se voir\r\n          attribuer un ou plusieurs dés de bonus situationnel. L'acteur lance alors\r\n          des dés de dizaines supplémentaires et garde la dizaine la plus basse\r\n          quand il calcule son score. De la même manière quand une action intentée\r\n          est douteuse ou mal argumentée, l'acteur peut se voir attribuer un ou\r\n          plusieurs dés de malus situationnel. L'acteur lance alors des dés de\r\n          dizaines supplémentaires et garde la dizaine la plus haute quand il\r\n          calcule son score.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { CoreRules } from './CoreRules'\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function ArmorRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight-armor</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectKeyword>Armure</SubjectKeyword>\r\n      <SubjectTitle>Armure</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Toute entitée possède un score d'armure physique et un score d'armure\r\n          magique. L'armure physique diminue le nombre de dégâts physiques reçus\r\n          mais s'avère inefficace contre les dégâts magiques. L'armure magique\r\n          diminue le nombre de dégâts magiques reçus mais s'avère inefficace\r\n          contre les dégâts physique. Un score d'armure peut, comme les points\r\n          de vie d'une entitée, faire l'objet de dégâts. Quand un score d'armure\r\n          est supérieur aux dégâts pris, l'entité ne prends aucun dégâts.\r\n        </p>\r\n\r\n        <p>\r\n          Une entitée peut s'équiper de trois types d'armure en même temps, une\r\n          armure légère, une armure intermédiaire et une armure lourde. Si elle\r\n          équipe plusieurs couche d'armure elle somme alors l'ensemble des\r\n          effets de celles-ci, y compris les effets négatifs. Certaines armures\r\n          peuvent interdire l'utilisation d'autres pièces d'armure, comme\r\n          l'utilisation d'une plaque seule, interdisant l'armure de plaque\r\n          complète.\r\n        </p>\r\n\r\n        <p>\r\n          Si une pièce d'armure accumule plus de dégâts d'armure qu'elle n'offre\r\n          de points elle est alors détruite. C'est toujours la couche d'armure\r\n          la plus à l'extérieure qui prends les dégâts en premier. Pour qu'une\r\n          pièce d'armure récupère les points d'armure perdus en combat elle doit\r\n          être réparée.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function AttackRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight-attack</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectKeyword>Attaque</SubjectKeyword>\r\n      <SubjectTitle>Attaque</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Une attaque est une action simple qui nécéssite d'être à porté de sa\r\n          cible. Les attaques ne peuvent pas faire l'objet d'une quelconque\r\n          coopération mais leur succès peuvent être influencé par l'environnement.\r\n          Une attaque se déroule toujours en deux temps : la touche et la\r\n          résolution des dégâts.\r\n        </p>\r\n\r\n        <p>\r\n          Lors de la phase de touche, le défenseur peut s'il en a la capacité\r\n          choisir d'esquiver, de parer ou de ne rien faire. La touche est un test\r\n          d'opposition standard entre la maîtrise de l'arme de l'attaquant et la\r\n          maîtrise choisie par le défenseur. Si le défenseur ne fait rien ou ne peut\r\n          ni esquiver le coup ni le parer, l'attaquant touche automatiquement.\r\n        </p>\r\n\r\n        <p>\r\n          Une entitée à le droit à une esquive par tour. Lors d'une esquive, le\r\n          défenseur oppose sa maîtrise de l'esquive à la maîtrise de l'arme de\r\n          l'attaquant et choisi une direction dans laquelle esquiver. Si l'esquive\r\n          est réussie, le défenseur peut alors réaliser un pas de placement dans la\r\n          direction qu'il a choisie et l'attaquant échoue son action. Le nombre\r\n          d'esquive par tour peut varier en fonction des atouts et autres effets. Le\r\n          défenseur doit toujours equiver dans une direction qui est libre d'accès.\r\n        </p>\r\n\r\n        <p>\r\n          Une entitée à le droit à une parade par tour. Lors d'une parade, le\r\n          défenseur oppose la maîtrise de sa propre arme, ou de son bouclier à la\r\n          maîtrise de l'attaquant. Si la parade réussie, l'attaquant échoue son\r\n          action. Le nombre de parade par tour peut varier en fonction des atouts et\r\n          des effets.\r\n        </p>\r\n\r\n        <p>\r\n          Certaines situations sont à l'avantage de l'attaquant. Si le défenseur\r\n          esquive pour sortir de la zone de contrôle de son adversaire il se voit\r\n          alors attribuer un malus de 2 points sur sa maîtrise de l'esquive. Pour\r\n          chaque entitée hostile autour de lui dont le défenseur est l'objet de\r\n          l'attention, le défenseur se voit en plus attribuer un malus de 2 points\r\n          supplémentaire sur la maîtrise qu'il utilise pour se défendre.\r\n        </p>\r\n\r\n        <p>\r\n          Certaines situations sont à l'avantage du défenseur. Pour chaque entitée\r\n          hostile autour de lui dont l'attaquant est l'objet de l'attention, le\r\n          défenseur se voit en plus attribuer un bonus de 2 points supplémtaire sur\r\n          la maîtrise qu'il utilise pour se défendre. Si l'attaquant doit réaliser\r\n          un pas de placement pour attaquer le défenseur, celui-ci gagne 2 points\r\n          supplémentaire sur la maîtrise qu'il utilise pour se défendre.\r\n        </p>\r\n\r\n        <p>\r\n          Certaines règles supplémentaire peuvent encore modifier le niveau de\r\n          maîtrise de l'attaquant ou du défenseur en fonction du type d'action\r\n          entrepris ou des effets actifs.\r\n        </p>\r\n\r\n        <p>\r\n          Si l'attaquant réussi sa touche, il peut alors calculer les dégâts qu'il\r\n          va infliger au défenseur.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function ComaRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight-coma</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectKeyword>Coma</SubjectKeyword>\r\n      <SubjectTitle>Coma</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Quand un personnage accumule autant de dégâts qu'il possède de points de\r\n          vie il tombe alors immédiatement dans le coma. Un personnage qui tombe\r\n          dans le coma des suites d'une attaque est automatiquement affligé d'une\r\n          blessure grave liée à l'arme responsable du coup final.\r\n        </p>\r\n\r\n        <p>\r\n          Le coma est un statut intermédiaire entre la vie et la mort qui peut aussi\r\n          être la conséquence d'un sort ou de certains poisons. Le coma est un état\r\n          critique impliquant une perte de conaissance associée à une aggravation de\r\n          certains statuts. Un personnage dans le coma tombe à terre, ne peut plus\r\n          effectuer d'actions et est considéré sans défense et peut donc faire\r\n          l'objet d'une tentative d'exécution.\r\n        </p>\r\n\r\n        <p>\r\n          Tout coma est associé à un degré de difficulté calculé en fonction de\r\n          l'état général du personnage commateux. Le degré de difficulté d'un coma\r\n          est calculé de la manière suivante :\r\n        </p>\r\n\r\n        <ul>\r\n          <li>\r\n            Les paires de points de dégât ajoutent chacune 1 point de difficulté.\r\n          </li>\r\n          <li>\r\n            Les blessures légères ajoutent chacune 2 points de difficulté.\r\n          </li>\r\n          <li>\r\n            Les blessures graves ajoutent chacune 5 points de difficulté.\r\n          </li>\r\n          <li>\r\n            Certaines causes de coma ainsi que certains status peuvent aussi ajouter\r\n            des points de difficulté, dans ce cas le nombre de point à ajouter doit\r\n            apparaitre dans la description du sort, du poison ou de l'état.\r\n          </li>\r\n        </ul>\r\n\r\n        <p>\r\n          Un personnage peut sortir de l'état de coma après un certain temps de\r\n          repos équivalent au degré de difficulté du coma retranché\r\n          du bonus de constitution du personnage le tout multiplié par 4. Certains\r\n          status comme l'empoisonement ou le saignement interdisent à un personnage\r\n          commateux de se rétablir seul et requiert qu'une tierce personne le\r\n          stabilise au préalable.\r\n        </p>\r\n\r\n        <p>\r\n          Stabiliser un personnage commateux est une action complexe nécéssitant un\r\n          calme relatif, des connaissances précises en premiers soins et un bon\r\n          quart d'heure de travail. Un personnage effectuant une tentative de\r\n          stabilisation doit réussir un test d'opposition entre ses connaissances en\r\n          premiers soins et le degré de difficulté du coma. En cas de succès le\r\n          processus naturel de guérison du coma reprend et la durée nécéssaire pour\r\n          perdre naturellement le status est divisé par deux.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function DamageRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight-coma</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectKeyword>Dégât</SubjectKeyword>\r\n      <SubjectTitle>Dégâts</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Il existe plusieurs types de dégâts : les dégâts physiques, les dégâts\r\n          magiques, les dégâts bruts, les dégâts de rupture et les dégâts mystiques.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les dégâts physiques</em> affectent les points de vie de la cible, ils\r\n          ignorent l'armure magique mais sont retranchés de l'armure physique de la\r\n          cible.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les dégâts magiques</em> affectent les points de vie de la cible, ils\r\n          ignorent l'armure physique mais sont retranchés de l'armure magique de la\r\n          cible.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les dégâts bruts</em> affectent les points de vie de la cible et\r\n          ignorent tout type d'armure.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les dégâts de rupture</em> affectent l'armure physique de la cible.\r\n          Si la cible ne possède plus d'armure les dégâts sont convertis en dégâts\r\n          physiques.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Les dégâts mystiques</em> affectent l'armure magique de la cible.\r\n          Si la cible ne possède plus d'armure les dégâts sont convertis en dégâts\r\n          magiques.\r\n        </p>\r\n\r\n        <p>\r\n          Ces grands types de dégâts peuvent être raffinés en y ajoutant des trais\r\n          complémentaires comme pour les dégâts élémentaires de feu, de glace,\r\n          de terre ou d'électricité. Ces traits sont cependant complémentaires, et\r\n          les dégâts se comporteront comme ce comportent tous les dégâts de leur\r\n          catégorie.\r\n        </p>\r\n\r\n        <p>\r\n          Toute attaque peut porter une certaine quantité de dégâts exprimé en dés.\r\n          Pour résoudre le nombre de dégâts affligés par une attaque il faut alors\r\n          lancer autant de dés six que de points de dégâts infligeable. Tous les dés\r\n          pairs sont alors considéré comme un point de dégât infligé. Le défenseur\r\n          peut alors déduire ceux-ci de ses points de vie ou de son armure en\r\n          fonction du type de dégât. Les dégâts visant l'armure sont toujours\r\n          appliqués après les dégâts visant les points de vie.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function DeathRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight-death</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectKeyword>Mort</SubjectKeyword>\r\n      <SubjectTitle>Mort</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Quand un personnage accumule plus de 150% du nombre de ses points de vie\r\n          en dégâts est alors considéré comme mort. Le décès est immédiat et le\r\n          personnage n'est alors plus jouable.\r\n        </p>\r\n\r\n        <p className='text-center'>\r\n          La mort est définitive, mais rassurez-vous, le deuil ne l'est pas.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\nimport { LocalSummary } from '../../../components/LocalSummary'\r\n\r\nimport { ArmorRule } from './ArmorRule'\r\nimport { AttackRule } from './AttackRule'\r\nimport { ComaRule } from './ComaRule'\r\nimport { DamageRule } from './DamageRule'\r\nimport { DeathRule } from './DeathRule'\r\nimport { HealthPointRule } from './HealthPointRule'\r\nimport { InitiativeRule } from './InitiativeRule'\r\nimport { Introduction } from './Introduction'\r\nimport { WeigthPointRule } from './WeigthPointRule'\r\nimport { WoundsRule } from './WoundsRule'\r\n\r\nexport function FightRules () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectTitle>Règles de combat</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <LocalSummary />\r\n\r\n        <Introduction />\r\n        <InitiativeRule />\r\n        <HealthPointRule />\r\n        <ComaRule />\r\n        <WoundsRule />\r\n        <WeigthPointRule />\r\n        <AttackRule />\r\n        <DamageRule />\r\n        <ArmorRule />\r\n        <DeathRule />\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function HealthPointRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight-health-point</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectKeyword>Point de vie</SubjectKeyword>\r\n      <SubjectTitle>Points de vie</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Les points de vie bruts d'un personnage sont égaux à 10 plus son nombre de\r\n          points de constitution. Si un personnage accumule autant de dégât qu'il a\r\n          de points de vie il tombe dans le coma et ne peut plus agir. Si les dégâts\r\n          subis viennent à dépasser 150% de ses points de vie bruts il meurt.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function InitiativeRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight-initiative</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectKeyword>Initiative</SubjectKeyword>\r\n      <SubjectTitle>Initiative</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          <em>Score d'initiative.</em> Le score d'initiative est une quantité\r\n          relative qui mesure la capacité d'action d'une entité. Ce score\r\n          représente à la fois la priorité d'une entité sur les autres et la\r\n          quantité d'action qu'elle peut effectuer lors d'une manche. L'initiative\r\n          d'une entité est égale à la valeur de la caractéristique de dextérité de\r\n          celle-ci augmentée de dix points.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Déclarer un tour.</em> Au début d'une manche, une entité peut\r\n          déclarer un tour par tranche de 20 points d'initiative qu'elle possède.\r\n          Une entité doit toujours déclarer au moins un tour lors d'une manche mais\r\n          elle peut ne pas déclarer tous les tours auxquels elle a droit. Une entité\r\n          doit répartir l'entièreté de ses points d'initiative parmi l'ensemble des\r\n          tours qu'elle a déclaré vouloir jouer.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Ordonnancement des tours.</em> Une fois déclarés les tours sont joués\r\n          en commençant par ceux ayant le plus de point d'initiative et la manche\r\n          se termine par les tours ayant le moins de points. Si plusieurs tours ont\r\n          un nombre de point d'initiative équivalent c'est l'initiative des joueurs\r\n          qui prime pour décider du joueur qui joue le premier. En cas d'égalité\r\n          stricte l'ordonnancement est décidé à pile ou face.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Initiative négative.</em> Si une entité joue avec une initiative\r\n          négative pour quelque raison que ce soit toutes les entités de la\r\n          partie se voient attribuer 20 points d'initiative supplémentaire jusqu'à\r\n          ce que l'entité en question ait un score positif. La déclaration des\r\n          tours s'effectue alors normalement.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Modification d'initiative.</em> Si une entité perd des points\r\n          d'initiative durant une manche, son tour le plus tardif est pénalisé\r\n          du nombre de points perdu. Si le tour le plus tardif atteint 0 point\r\n          d'initiative il est alors annulé et le reste des points a pénalisés sont\r\n          reportés sur le tour qui le précède. Si une entité gagne des points\r\n          d'initiative lors d'un round son tour le plus récent gagne l'ensemble des\r\n          points bonus.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Dextérité nulle.</em> Une entité avec une dextérité nulle est\r\n          considéré hors-combat et ne peut plus jouer de tour tant que son score\r\n          n'est pas remonté d'au moins un point. Même avec une initiative positive,\r\n          une entité avec une dextérité nulle ne peut agir. Une initiative négative\r\n          permet de continuer à jouer tant que la dextérité n'est pas nulle.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function Introduction () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight-introduction</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectKeyword>Introduction</SubjectKeyword>\r\n      <SubjectTitle>Introduction</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Les scènes à interaction forte nécessitant des prises de décision simultanées\r\n          sont résolues au tour par tour. Tout élément du récit pouvant\r\n          agir de son propre chef lors d'une telle situation est appelé <strong>\r\n          entité</strong>. Chaque <strong>tour</strong> ne concerne qu'une\r\n          unique entité qui peut entreprendre un nombre limité d'<strong>actions\r\n          </strong> avant de passer son tour à l'entité suivante.\r\n        </p>\r\n\r\n        <p>\r\n          L'ensemble des tours nécessaires pour que toutes des entités d'une scène\r\n          puissent agir est appelé une <strong>manche</strong>. Il peut arriver qu'une\r\n          entité ait le droit de jouer plusieurs tours lors d'une manche. La quantité\r\n          de tour joué pendant une manche et leur ordonnancement dépend des scores\r\n          d'initiative de chaque entité.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function WeigthPointRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight-weigth-point</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectKeyword>Point de charge</SubjectKeyword>\r\n      <SubjectTitle>Points de charge</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Une entitée possède autant de points de charge qu'elle à de points de\r\n          force. Les points de charge représente la quantité d'objets que peut\r\n          équiper et transporter l'entité avant de se voir attribuer des malus.\r\n          Tous les deux points de charge non utilisé, l'entité peut rajouter un\r\n          point de dégât supplémentaire à toute ses attaques au corps à corps et à\r\n          son initiative. Tous les points de charge au dessus de la limite de\r\n          l'entité implique la perte d'un point de dégât à toutes les attaques au\r\n          corps à corps et la perte d'un point à son initiative.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ReactElement } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\n\r\nexport function WoundsRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-fight-wounds</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle de combat</SubjectKeyword>\r\n      <SubjectKeyword>Blessure</SubjectKeyword>\r\n      <SubjectTitle>Blessures</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          Un personnage perdant un important nombre de points de vie d'un coup ou\r\n          subissant les conséquences de certaines techniques peut se voir infliger\r\n          des blessures. Les blessures sont des effets permanents qui ne peuvent\r\n          être soignés qu'avec le temps et des soins minutieux, elles sont classés\r\n          en deux catégories : les blessures légères et les blessures graves.\r\n        </p>\r\n\r\n        <p>\r\n          Toutes les armes peuvent provoquer des types de blessures légères ou\r\n          graves différentes. Pour qu'une blessure soit infligée il faut que le\r\n          nombre de dégâts effectués par l'arme d'une seule traite soit supérieur\r\n          à son seuil de blessure légère ou à son seuil de blessure grave.\r\n        </p>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n","export { FightRules } from './FightRules'\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","module.exports = require(\"regenerator-runtime\");\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@cedric-demongivert/gl-tool-collection\"] = factory();\n\telse\n\t\troot[\"@cedric-demongivert/gl-tool-collection\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/Size.ts\nvar Size;\r\n(function (Size) {\r\n    /**\r\n    * Value that describe an infinity quantity of element.\r\n    */\r\n    Size.INFINITY = 0x7fffffff;\r\n    /**\r\n    * Return a string representation of the given size.\r\n    *\r\n    * @param size - A size to stringify.\r\n    *\r\n    * @return A string representation of the given size.\r\n    */\r\n    function toString(size) {\r\n        switch (size) {\r\n            case Size.INFINITY: return 'infinity';\r\n            default: return size.toString();\r\n        }\r\n    }\r\n    Size.toString = toString;\r\n})(Size || (Size = {}));\r\n\n// CONCATENATED MODULE: ./src/Collection.ts\n\r\nvar Collection_Collection;\r\n(function (Collection) {\r\n    /**\r\n    * Return true if the given collection contains a non-finite number of element.\r\n    *\r\n    * @param collection - A collection to assert.\r\n    *\r\n    * @return True if the given collection contains a non-finite number of element.\r\n    */\r\n    function isInfinite(collection) {\r\n        return collection.size !== Size.INFINITY;\r\n    }\r\n    Collection.isInfinite = isInfinite;\r\n    /**\r\n    * Return true if the given collection contains a finite number of element.\r\n    *\r\n    * @param collection - A collection to assert.\r\n    *\r\n    * @return True if the given collection contains a finite number of element.\r\n    */\r\n    function isFinite(collection) {\r\n        return collection.size !== Size.INFINITY;\r\n    }\r\n    Collection.isFinite = isFinite;\r\n    /**\r\n    * Return a shallow copy of the given collection.\r\n    *\r\n    * A shallow-copy *b* of a collection *a* is an instance that follow both\r\n    * properties :\r\n    *  - b !== a\r\n    *  - b.equals(a)\r\n    *\r\n    * @param toCopy - A collection to copy.\r\n    *\r\n    * @return A shallow copy of the given collection.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy.clone();\r\n    }\r\n    Collection.copy = copy;\r\n})(Collection_Collection || (Collection_Collection = {}));\r\n\n// CONCATENATED MODULE: ./src/SequenceIterator.ts\nclass SequenceIterator {\r\n    /**\r\n    * Instantiate a new random access iterator instance.\r\n    */\r\n    constructor() {\r\n        this.sequence = null;\r\n        this.index = 0;\r\n    }\r\n    /**\r\n    * @see Iterator#collection\r\n    */\r\n    collection() {\r\n        return this.sequence;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.hasNext\r\n    */\r\n    hasNext() {\r\n        return this.sequence && (this.sequence.lastIndex === undefined ||\r\n            this.index < this.sequence.lastIndex);\r\n    }\r\n    /**\r\n    * @see BidirectionalIterator.go\r\n    */\r\n    go(index) {\r\n        this.index = index;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.next\r\n    */\r\n    next() {\r\n        this.index += 1;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.forward\r\n    */\r\n    forward(count) {\r\n        this.index += count;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.end\r\n    */\r\n    end() {\r\n        if (this.sequence && this.sequence.lastIndex !== undefined) {\r\n            this.index = this.sequence.lastIndex;\r\n        }\r\n        else {\r\n            throw new Error('Trying to access the first element of an infinite or ' +\r\n                'semi-finite sequence that does not have an ending element.');\r\n        }\r\n    }\r\n    /**\r\n    * @see BackwardIterator.hasPrevious\r\n    */\r\n    hasPrevious() {\r\n        return this.sequence && (this.sequence.firstIndex === undefined ||\r\n            this.index > this.sequence.firstIndex);\r\n    }\r\n    /**\r\n    * @see BackwardIterator.previous\r\n    */\r\n    previous() {\r\n        this.index -= 1;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.backward\r\n    */\r\n    backward(count) {\r\n        this.index -= count;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.start\r\n    */\r\n    start() {\r\n        if (this.sequence && this.sequence.firstIndex !== undefined) {\r\n            this.index = this.sequence.firstIndex;\r\n        }\r\n        else {\r\n            throw new Error('Trying to access the first element of an infinite or ' +\r\n                'semi-finite sequence that does not have a starting element.');\r\n        }\r\n    }\r\n    /**\r\n    * @see Iterator.get\r\n    */\r\n    get() {\r\n        return this.sequence.get(this.index);\r\n    }\r\n    /**\r\n    * @see Iterator.move\r\n    */\r\n    move(iterator) {\r\n        if (iterator instanceof SequenceIterator) {\r\n            this.sequence = iterator.sequence;\r\n            this.index = iterator.index;\r\n        }\r\n        else {\r\n            throw new Error('Trying to move to a location described by an unsupported type of ' +\r\n                'iterator');\r\n        }\r\n    }\r\n    /**\r\n    * Shallow-copy the given instance.\r\n    *\r\n    * @param toCopy - An instance to shallow copy.\r\n    */\r\n    copy(toCopy) {\r\n        this.sequence = toCopy.sequence;\r\n        this.index = toCopy.index;\r\n    }\r\n    /**\r\n    * @see Iterator.clone\r\n    */\r\n    clone() {\r\n        const copy = new SequenceIterator();\r\n        copy.copy(this);\r\n        return copy;\r\n    }\r\n    /**\r\n    * @see Iterator.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof SequenceIterator) {\r\n            return other.sequence === this.sequence &&\r\n                other.index === this.index;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (SequenceIterator) {\r\n    /**\r\n    * Return a shallow copy of the given iterator.\r\n    *\r\n    * A shallow-copy *b* of an iterator *a* is an instance that follow both\r\n    * properties :\r\n    *  - b !== a\r\n    *  - b.equals(a)\r\n    *\r\n    * @param toCopy - An iterator to copy.\r\n    *\r\n    * @return A shallow copy of the given iterator.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy.clone();\r\n    }\r\n    SequenceIterator.copy = copy;\r\n})(SequenceIterator || (SequenceIterator = {}));\r\n\n// CONCATENATED MODULE: ./src/sequence/EmptySequence.ts\n\r\nclass EmptySequence_EmptySequence {\r\n    /**\r\n    * @see Sequence.size\r\n    */\r\n    get size() {\r\n        return 0;\r\n    }\r\n    /**\r\n    * @see Sequence.get\r\n    */\r\n    get(index) {\r\n        return undefined;\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get last() {\r\n        return undefined;\r\n    }\r\n    /**\r\n    * @see Sequence.lastIndex\r\n    */\r\n    get lastIndex() {\r\n        return 0;\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get first() {\r\n        return undefined;\r\n    }\r\n    /**\r\n    * @see Sequence.firstIndex\r\n    */\r\n    get firstIndex() {\r\n        return 0;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOf\r\n    */\r\n    indexOf(element) {\r\n        return -1;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOfInSubsequence\r\n    */\r\n    indexOfInSubsequence(element, offset, size) {\r\n        return -1;\r\n    }\r\n    /**\r\n    * @see Sequence.has\r\n    */\r\n    has(element) {\r\n        return false;\r\n    }\r\n    /**\r\n    * @see Sequence.hasInSubsequence\r\n    */\r\n    hasInSubsequence(element, offset, size) {\r\n        return false;\r\n    }\r\n    /**\r\n    * @see Sequence.clone\r\n    */\r\n    clone() {\r\n        return this;\r\n    }\r\n    /**\r\n    * @see Sequence.view\r\n    */\r\n    view() {\r\n        return this;\r\n    }\r\n    /**\r\n    * @see Sequence.iterator\r\n    */\r\n    iterator() {\r\n        const iterator = new SequenceIterator();\r\n        iterator.sequence = this;\r\n        return iterator;\r\n    }\r\n    /**\r\n    * @see Sequence[Symbol.iterator]\r\n    */\r\n    *[Symbol.iterator]() {\r\n    }\r\n    /**\r\n    * @see Sequence.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        return other instanceof EmptySequence_EmptySequence;\r\n    }\r\n}\r\n(function (EmptySequence) {\r\n    EmptySequence.INSTANCE = new EmptySequence();\r\n    function clone(sequence) {\r\n        return sequence;\r\n    }\r\n    EmptySequence.clone = clone;\r\n    function of() {\r\n        return EmptySequence.INSTANCE;\r\n    }\r\n    EmptySequence.of = of;\r\n})(EmptySequence_EmptySequence || (EmptySequence_EmptySequence = {}));\r\n\n// CONCATENATED MODULE: ./src/Sequence.ts\n\r\nvar Sequence_Sequence;\r\n(function (Sequence) {\r\n    /**\r\n    * A sequence marker to export in a namespace.\r\n    */\r\n    Sequence.SEQUENCE = Symbol();\r\n    /**\r\n    * Return true if the given collection is a sequence.\r\n    *\r\n    * @param collection - A collection to assert.\r\n    *\r\n    * @return True if the given collection is a sequence.\r\n    */\r\n    function isSequence(collection) {\r\n        return Sequence.SEQUENCE in Object.getPrototypeOf(collection).constructor;\r\n    }\r\n    Sequence.isSequence = isSequence;\r\n    /**\r\n    * @return An instance of sequence that represent a static empty sequence.\r\n    */\r\n    function empty() {\r\n        return EmptySequence_EmptySequence.of();\r\n    }\r\n    Sequence.empty = empty;\r\n})(Sequence_Sequence || (Sequence_Sequence = {}));\r\n\n// CONCATENATED MODULE: ./src/algorithm/bissect.ts\n/**\r\n* Default comparator used in order to bissect a collection.\r\n*\r\n* @see Comparator\r\n*/\r\nfunction defaultComparator(left, right) {\r\n    return left < right ? -1 : (left > right ? 1 : 0);\r\n}\r\n/**\r\n* Binary search an element in an ordered sequence and returns its location.\r\n*\r\n* If the given element does not exists into the given sequence this method\r\n* will return its insertion index in the form of a negative number :\r\n* (-insertionIndex -1)\r\n*\r\n* @param sequence - A sequence to search.\r\n* @param value - A value to search.\r\n* @param [comparator = defaultComparator] - A comparison function to use.\r\n* @oaran [offset = 0] - Number of element to skip from the start of the sequence.\r\n* @oaran [size = sequence.size - offset] - Number of element to search.\r\n*/\r\nfunction bissect(sequence, value, comparator = defaultComparator, offset = 0, size = sequence.size - offset) {\r\n    if (size > 0) {\r\n        let left = offset;\r\n        let right = offset + size;\r\n        while (left !== right) {\r\n            const cursor = left + ((right - left) >>> 1);\r\n            const comparison = comparator(value, sequence.get(cursor));\r\n            if (comparison === 0) {\r\n                return cursor;\r\n            }\r\n            else if (comparison > 0) {\r\n                left = cursor + 1;\r\n            }\r\n            else {\r\n                right = cursor;\r\n            }\r\n        }\r\n        return -(left + 1);\r\n    }\r\n    else {\r\n        return -1;\r\n    }\r\n}\r\n(function (bissect) {\r\n    /**\r\n    * @see bissect\r\n    *\r\n    * A bissection that always return the FIRST element that match in the parent\r\n    * sequence.\r\n    *\r\n    * @param sequence - A sequence to search.\r\n    * @param value - A value to search.\r\n    * @param [comparator = defaultComparator] - A comparison function to use.\r\n    * @oaran [offset = 0] - Number of element to skip from the start of the sequence.\r\n    * @oaran [size = sequence.size - offset] - Number of element to search.\r\n    */\r\n    function first(sequence, value, comparator = defaultComparator, offset = 0, size = sequence.size - offset) {\r\n        let result = bissect(sequence, value, comparator, offset, size);\r\n        if (result < 0)\r\n            return result;\r\n        while (result > 0 && comparator(value, sequence.get(result - 1)) === 0) {\r\n            result -= 1;\r\n        }\r\n        return result;\r\n    }\r\n    bissect.first = first;\r\n    /**\r\n    * @see bissect\r\n    *\r\n    * A bissection that always return the LAST element that match in the parent\r\n    * sequence.\r\n    *\r\n    * @param sequence - A sequence to search.\r\n    * @param value - A value to search.\r\n    * @param [comparator = defaultComparator] - A comparison function to use.\r\n    * @oaran [offset = 0] - Number of element to skip from the start of the sequence.\r\n    * @oaran [size = sequence.size - offset] - Number of element to search.\r\n    */\r\n    function last(sequence, value, comparator = defaultComparator, offset = 0, size = sequence.size - offset) {\r\n        let result = bissect(sequence, value, comparator, offset, size);\r\n        if (result < 0)\r\n            return result;\r\n        const end = sequence.size - 1;\r\n        while (result < end && comparator(value, sequence.get(result + 1)) === 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n    bissect.last = last;\r\n    /**\r\n    * @see bissect\r\n    *\r\n    * A bissection that use an invertion of the given comparator.\r\n    *\r\n    * @param sequence - A sequence to search.\r\n    * @param value - A value to search.\r\n    * @param [comparator = defaultComparator] - A comparison function to use.\r\n    * @oaran [offset = 0] - Number of element to skip from the start of the sequence.\r\n    * @oaran [size = sequence.size - offset] - Number of element to search.\r\n    */\r\n    function invert(sequence, value, comparator = defaultComparator, offset = 0, size = sequence.size - offset) {\r\n        if (size > 0) {\r\n            let left = offset;\r\n            let right = offset + size;\r\n            while (left !== right) {\r\n                const cursor = left + ((right - left) >>> 1);\r\n                const comparison = -comparator(value, sequence.get(cursor));\r\n                if (comparison === 0) {\r\n                    return cursor;\r\n                }\r\n                else if (comparison > 0) {\r\n                    left = cursor + 1;\r\n                }\r\n                else {\r\n                    right = cursor;\r\n                }\r\n            }\r\n            return -(left + 1);\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    bissect.invert = invert;\r\n})(bissect || (bissect = {}));\r\n\n// CONCATENATED MODULE: ./src/algorithm/equals.ts\nfunction equals(left, right) {\r\n    if (left === right)\r\n        return true;\r\n    if (left.equals)\r\n        return left.equals(right);\r\n    return false;\r\n}\r\n\n// CONCATENATED MODULE: ./src/algorithm/quicksort.ts\n/**\r\n* Default comparator used in order to quicksort a collection.\r\n*\r\n* @see Comparator\r\n*/\r\nfunction quicksort_defaultComparator(left, right) {\r\n    return left < right ? -1 : (left > right ? 1 : 0);\r\n}\r\n/**\r\n* Quicksort the given sequence.\r\n*\r\n* @param sequence - A sequence to quicksort.\r\n* @param [comparator = defaultComparator] - A definition of the order to use.\r\n* @param [offset = 0] - Number of element to skip from the begining of the sequence.\r\n* @param [size = sequence.size - offset] - Number of element to sort.\r\n*/\r\nfunction quicksort(sequence, comparator = quicksort_defaultComparator, offset = 0, size = sequence.size - offset) { rquicksort(sequence, comparator, offset, offset + size - 1); }\r\nfunction rquicksort(sequence, comparator, left, right) {\r\n    if (left < right) {\r\n        const pivot = partition(sequence, comparator, left, right);\r\n        rquicksort(sequence, comparator, left, pivot);\r\n        rquicksort(sequence, comparator, pivot + 1, right);\r\n    }\r\n}\r\nfunction partition(sequence, comparator, left, right) {\r\n    const pivot = sequence.get((left + right) >>> 1);\r\n    let lower = left - 1;\r\n    let upper = right + 1;\r\n    do {\r\n        do {\r\n            lower += 1;\r\n        } while (comparator(sequence.get(lower), pivot) < 0);\r\n        do {\r\n            upper -= 1;\r\n        } while (comparator(sequence.get(upper), pivot) > 0);\r\n        if (lower >= upper) {\r\n            return upper;\r\n        }\r\n        sequence.swap(lower, upper);\r\n    } while (true);\r\n}\r\n\n// CONCATENATED MODULE: ./src/algorithm/index.ts\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/native/UnsignedIntegerBuffer.ts\nvar UnsignedIntegerBuffer;\r\n(function (UnsignedIntegerBuffer) {\r\n    /**\r\n    * Instantiate a unsigned byte buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to instantiate.\r\n    *\r\n    * @return A unsigned byte buffer of the given capacity.\r\n    */\r\n    function uint8(capacity) {\r\n        return new Uint8Array(capacity);\r\n    }\r\n    UnsignedIntegerBuffer.uint8 = uint8;\r\n    /**\r\n    * Instantiate a unsigned short buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to instantiate.\r\n    *\r\n    * @return A unsigned short buffer of the given capacity.\r\n    */\r\n    function uint16(capacity) {\r\n        return new Uint16Array(capacity);\r\n    }\r\n    UnsignedIntegerBuffer.uint16 = uint16;\r\n    /**\r\n    * Instantiate a unsigned integer buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to instantiate.\r\n    *\r\n    * @return A unsigned integer buffer of the given capacity.\r\n    */\r\n    function uint32(capacity) {\r\n        return new Uint32Array(capacity);\r\n    }\r\n    UnsignedIntegerBuffer.uint32 = uint32;\r\n    /**\r\n    * Instantiate an unsigned integer buffer that can store values up to the given\r\n    * maximum (included).\r\n    *\r\n    * @param maximum - Maximum value that can be stored into the resulting buffer (included).\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return An unsigned integer buffer that can store values up to the given maximum (included).\r\n    */\r\n    function upTo(maximum, capacity) {\r\n        if (maximum <= 0xff) {\r\n            return new Uint8Array(capacity);\r\n        }\r\n        else if (maximum <= 0xffff) {\r\n            return new Uint16Array(capacity);\r\n        }\r\n        else {\r\n            return new Uint32Array(capacity);\r\n        }\r\n    }\r\n    UnsignedIntegerBuffer.upTo = upTo;\r\n})(UnsignedIntegerBuffer || (UnsignedIntegerBuffer = {}));\r\n\n// CONCATENATED MODULE: ./src/native/IntegerBuffer.ts\nvar IntegerBuffer;\r\n(function (IntegerBuffer) {\r\n    /**\r\n    * Instantiate a byte buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to instantiate.\r\n    *\r\n    * @return A byte buffer of the given capacity.\r\n    */\r\n    function int8(capacity) {\r\n        return new Int8Array(capacity);\r\n    }\r\n    IntegerBuffer.int8 = int8;\r\n    /**\r\n    * Instantiate a short buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to instantiate.\r\n    *\r\n    * @return A short buffer of the given capacity.\r\n    */\r\n    function int16(capacity) {\r\n        return new Int16Array(capacity);\r\n    }\r\n    IntegerBuffer.int16 = int16;\r\n    /**\r\n    * Instantiate an integer buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to instantiate.\r\n    *\r\n    * @return An integer buffer of the given capacity.\r\n    */\r\n    function int32(capacity) {\r\n        return new Int32Array(capacity);\r\n    }\r\n    IntegerBuffer.int32 = int32;\r\n    /**\r\n    * Instantiate an integer buffer that can store values up to the given maximum (included).\r\n    *\r\n    * @param maximum - Maximum value that can be stored into the resulting buffer (included).\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return An integer buffer that can store values up to the given maximum (included).\r\n    */\r\n    function upTo(maximum, capacity) {\r\n        if (maximum <= 0x7f) {\r\n            return new Int8Array(capacity);\r\n        }\r\n        else if (maximum <= 0x7fff) {\r\n            return new Int16Array(capacity);\r\n        }\r\n        else {\r\n            return new Int32Array(capacity);\r\n        }\r\n    }\r\n    IntegerBuffer.upTo = upTo;\r\n})(IntegerBuffer || (IntegerBuffer = {}));\r\n\n// CONCATENATED MODULE: ./src/native/FloatBuffer.ts\nvar FloatBuffer;\r\n(function (FloatBuffer) {\r\n    /**\r\n    * Instantiate a float buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to instantiate.\r\n    *\r\n    * @return A float buffer of the given capacity.\r\n    */\r\n    function float32(capacity) {\r\n        return new Float32Array(capacity);\r\n    }\r\n    FloatBuffer.float32 = float32;\r\n    /**\r\n    * Instantiate a double buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to instantiate.\r\n    *\r\n    * @return A double buffer of the given capacity.\r\n    */\r\n    function float64(capacity) {\r\n        return new Float64Array(capacity);\r\n    }\r\n    FloatBuffer.float64 = float64;\r\n})(FloatBuffer || (FloatBuffer = {}));\r\n\n// CONCATENATED MODULE: ./src/native/Buffer.ts\n\r\n\r\n\r\nvar Buffer_Buffer;\r\n(function (Buffer) {\r\n    Buffer.float32 = FloatBuffer.float32;\r\n    Buffer.float64 = FloatBuffer.float64;\r\n    Buffer.uint8 = UnsignedIntegerBuffer.uint8;\r\n    Buffer.uint16 = UnsignedIntegerBuffer.uint16;\r\n    Buffer.uint32 = UnsignedIntegerBuffer.uint32;\r\n    Buffer.unsignedUpTo = UnsignedIntegerBuffer.upTo;\r\n    Buffer.int8 = IntegerBuffer.int8;\r\n    Buffer.int16 = IntegerBuffer.int16;\r\n    Buffer.int32 = IntegerBuffer.int32;\r\n    Buffer.signedUpTo = IntegerBuffer.upTo;\r\n    /**\r\n    * Reallocate the given buffer.\r\n    *\r\n    * @param buffer - A buffer to reallocate.\r\n    * @param capacity - The new capacity of the buffer.\r\n    *\r\n    * @return A reallocation of the given buffer.\r\n    */\r\n    function reallocate(buffer, capacity) {\r\n        const result = new buffer.constructor(capacity);\r\n        return result;\r\n    }\r\n    Buffer.reallocate = reallocate;\r\n})(Buffer_Buffer || (Buffer_Buffer = {}));\r\n\n// CONCATENATED MODULE: ./src/view/View.ts\n/**\r\n* A readonly view over a given collection of values.\r\n*/\r\nclass View {\r\n    /**\r\n    * Create a new view over an existing collection.\r\n    *\r\n    * @param collection - A collection to wrap.\r\n    */\r\n    constructor(collection) {\r\n        this._collection = collection;\r\n    }\r\n    /**\r\n    * @see Collection.size\r\n    */\r\n    get size() {\r\n        return this._collection.size;\r\n    }\r\n    /**\r\n    * @see Collection.has\r\n    */\r\n    has(element) {\r\n        return this._collection.has(element);\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    iterator() {\r\n        return this._collection.iterator();\r\n    }\r\n    /**\r\n    * @see Collection.clone\r\n    */\r\n    clone() {\r\n        return new View(this._collection);\r\n    }\r\n    /**\r\n    * @see Collection.view\r\n    */\r\n    view() {\r\n        return this;\r\n    }\r\n    /**\r\n    * @see Collection.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof View) {\r\n            return this._collection.equals(other._collection);\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        yield* this._collection;\r\n    }\r\n}\r\n(function (View) {\r\n    /**\r\n    * Wrap an existing collection.\r\n    *\r\n    * @param collection - A collection to wrap in a view.\r\n    *\r\n    * @return A view over the given collection.\r\n    */\r\n    function wrap(collection) {\r\n        if (collection instanceof View) {\r\n            return collection;\r\n        }\r\n        else {\r\n            return new View(collection);\r\n        }\r\n    }\r\n    View.wrap = wrap;\r\n})(View || (View = {}));\r\n\n// CONCATENATED MODULE: ./src/view/SequenceView.ts\n\r\n/**\r\n* A readonly view over a given sequence of values.\r\n*/\r\nclass SequenceView_SequenceView extends View {\r\n    /**\r\n    * Create a new view over an existing collection.\r\n    *\r\n    * @param collection - A collection to wrap.\r\n    */\r\n    constructor(collection) {\r\n        super(collection);\r\n        this._sequence = collection;\r\n    }\r\n    /**\r\n    * @see Sequence.get\r\n    */\r\n    get(index) {\r\n        return this._sequence.get(index);\r\n    }\r\n    /**\r\n    * @see Sequence.firstIndex\r\n    */\r\n    get firstIndex() {\r\n        return this._sequence.firstIndex;\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get first() {\r\n        return this._sequence.first;\r\n    }\r\n    /**\r\n    * @see Sequence.lastIndex\r\n    */\r\n    get lastIndex() {\r\n        return this._sequence.lastIndex;\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get last() {\r\n        return this._sequence.last;\r\n    }\r\n    /**\r\n    * @see Collection.clone\r\n    */\r\n    clone() {\r\n        return SequenceView_SequenceView.wrap(this._sequence);\r\n    }\r\n    /**\r\n    * @see Sequence.indexOf\r\n    */\r\n    indexOf(element) {\r\n        return this._sequence.indexOf(element);\r\n    }\r\n    /**\r\n    * @see Sequence.hasInSubsequence\r\n    */\r\n    hasInSubsequence(element, offset, size) {\r\n        return this._sequence.hasInSubsequence(element, offset, size);\r\n    }\r\n    /**\r\n    * @see Sequence.indexOfInSubsequence\r\n    */\r\n    indexOfInSubsequence(element, offset, size) {\r\n        return this._sequence.indexOfInSubsequence(element, offset, size);\r\n    }\r\n    /**\r\n    * @see Sequence.iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        yield* this._sequence;\r\n    }\r\n}\r\n(function (SequenceView) {\r\n    /**\r\n    * Wrap an existing collection.\r\n    *\r\n    * @param collection - A collection to wrap in a view.\r\n    *\r\n    * @return A view over the given collection.\r\n    */\r\n    function wrap(collection) {\r\n        if (collection instanceof SequenceView) {\r\n            return collection;\r\n        }\r\n        else {\r\n            return new SequenceView(collection);\r\n        }\r\n    }\r\n    SequenceView.wrap = wrap;\r\n})(SequenceView_SequenceView || (SequenceView_SequenceView = {}));\r\n\n// CONCATENATED MODULE: ./src/pack/PackIterator.ts\nclass PackIterator {\r\n    /**\r\n    * Instantiate a new random access iterator instance.\r\n    */\r\n    constructor() {\r\n        this.pack = null;\r\n        this.index = 0;\r\n    }\r\n    /**\r\n    * @see Iterator.collection\r\n    */\r\n    collection() {\r\n        return this.pack;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.hasNext\r\n    */\r\n    hasNext() {\r\n        return this.pack && this.index < this.pack.size;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.next\r\n    */\r\n    next() {\r\n        this.index += 1;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.forward\r\n    */\r\n    forward(count) {\r\n        this.index += count;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.end\r\n    */\r\n    end() {\r\n        this.index = this.pack ? this.pack.lastIndex : 0;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.hasPrevious\r\n    */\r\n    hasPrevious() {\r\n        return this.pack && this.index > 0;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.previous\r\n    */\r\n    previous() {\r\n        this.index -= 1;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.backward\r\n    */\r\n    backward(count) {\r\n        this.index -= count;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.start\r\n    */\r\n    start() {\r\n        this.index = 0;\r\n    }\r\n    /**\r\n    * @see Iterator.get\r\n    */\r\n    get() {\r\n        return this.pack.get(this.index);\r\n    }\r\n    /**\r\n    * @see Iterator.move\r\n    */\r\n    move(iterator) {\r\n        if (iterator instanceof PackIterator) {\r\n            this.pack = iterator.pack;\r\n            this.index = iterator.index;\r\n        }\r\n        else {\r\n            throw new Error('Trying to move to a location described by an unsupported type of ' +\r\n                'iterator');\r\n        }\r\n    }\r\n    /**\r\n    * @see BidirectionalIterator.go\r\n    */\r\n    go(index) {\r\n        this.index = index;\r\n    }\r\n    /**\r\n    * Shallow-copy the given instance.\r\n    *\r\n    * @param toCopy\r\n    */\r\n    copy(toCopy) {\r\n        this.pack = toCopy.pack;\r\n        this.index = toCopy.index;\r\n    }\r\n    /**\r\n    * @see Iterator.clone\r\n    */\r\n    clone() {\r\n        const copy = new PackIterator();\r\n        copy.copy(this);\r\n        return copy;\r\n    }\r\n    /**\r\n    * @see Iterator.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof PackIterator) {\r\n            return other.pack === this.pack &&\r\n                other.index === this.index;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (PackIterator) {\r\n    /**\r\n    * Return a shallow copy of the given iterator.\r\n    *\r\n    * A shallow-copy *b* of an iterator *a* is an instance that follow both\r\n    * properties :\r\n    *  - b !== a\r\n    *  - b.equals(a)\r\n    *\r\n    * @param toCopy - An iterator to copy.\r\n    *\r\n    * @return A shallow copy of the given iterator.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy.clone();\r\n    }\r\n    PackIterator.copy = copy;\r\n})(PackIterator || (PackIterator = {}));\r\n\n// CONCATENATED MODULE: ./src/pack/BufferPack.ts\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass BufferPack_BufferPack {\r\n    /**\r\n    * Wrap an existing buffer into a new pack instance.\r\n    *\r\n    * @param elements - The buffer to wrap, the resulting pack will have the capacity of the given buffer.\r\n    * @param [size = 0] - Initial number of elements in the pack.\r\n    */\r\n    constructor(elements, size = 0) {\r\n        this._elements = elements;\r\n        this._size = size;\r\n    }\r\n    /**\r\n    * @return The underlying typed array.\r\n    */\r\n    get array() {\r\n        return this._elements;\r\n    }\r\n    /**\r\n    * @return The underlying buffer.\r\n    */\r\n    get buffer() {\r\n        return this._elements.buffer;\r\n    }\r\n    /**\r\n    * @see Collection.size\r\n    */\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    /**\r\n    * @see MutableSequence.size\r\n    */\r\n    set size(value) {\r\n        if (value > this._elements.length) {\r\n            this.reallocate(value);\r\n        }\r\n        for (let index = this._size; index < value; ++index) {\r\n            this._elements[index] = 0;\r\n        }\r\n        this._size = value;\r\n    }\r\n    /**\r\n    * @see StaticCollection.capacity\r\n    */\r\n    get capacity() {\r\n        return this._elements.length;\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.reallocate\r\n    */\r\n    reallocate(capacity) {\r\n        const old = this._elements;\r\n        const oldSize = this._size;\r\n        this._elements = Buffer_Buffer.reallocate(old, capacity);\r\n        this._size = Math.min(this._size, capacity);\r\n        for (let index = 0; index < oldSize; ++index) {\r\n            this._elements[index] = old[index];\r\n        }\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.fit\r\n    */\r\n    fit() {\r\n        this.reallocate(this._size);\r\n    }\r\n    /**\r\n    * @see Sequence.get\r\n    */\r\n    get(index) {\r\n        return this._elements[index];\r\n    }\r\n    /**\r\n    * @see MutableSequence.fill\r\n    */\r\n    fill(element) {\r\n        for (let index = 0, size = this._size; index < size; ++index) {\r\n            this._elements[index] = element;\r\n        }\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get last() {\r\n        return this._elements[Math.max(this._size - 1, 0)];\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get lastIndex() {\r\n        return Math.max(this._size - 1, 0);\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get first() {\r\n        return this._elements[0];\r\n    }\r\n    /**\r\n    * @see Sequence.firstIndex\r\n    */\r\n    get firstIndex() {\r\n        return 0;\r\n    }\r\n    /**\r\n    * @see MutableSequence.pop\r\n    */\r\n    pop() {\r\n        const last = this._size - 1;\r\n        const value = this._elements[last];\r\n        this.delete(last);\r\n        return value;\r\n    }\r\n    /**\r\n    * @see MutableSequence.shift\r\n    */\r\n    shift() {\r\n        const value = this._elements[0];\r\n        this.delete(0);\r\n        return value;\r\n    }\r\n    /**\r\n    * @see Pack.sort\r\n    */\r\n    sort(comparator) {\r\n        quicksort(this, comparator, 0, this._size);\r\n    }\r\n    /**\r\n    * @see Pack.subsort\r\n    */\r\n    subsort(offset, size, comparator) {\r\n        quicksort(this, comparator, offset, size);\r\n    }\r\n    /**\r\n    * @see MutableSequence.swap\r\n    */\r\n    swap(first, second) {\r\n        const tmp = this._elements[first];\r\n        this._elements[first] = this._elements[second];\r\n        this._elements[second] = tmp;\r\n    }\r\n    /**\r\n    * @see MutableSequence.set\r\n    */\r\n    set(index, value) {\r\n        if (index >= this._size)\r\n            this.size = index + 1;\r\n        this._elements[index] = value;\r\n    }\r\n    /**\r\n    * @see MutableSequence.insert\r\n    */\r\n    insert(index, value) {\r\n        if (index >= this._size) {\r\n            this.set(index, value);\r\n        }\r\n        else {\r\n            this.size += 1;\r\n            for (let cursor = this._size - 1; cursor > index; --cursor) {\r\n                this._elements[cursor] = this._elements[cursor - 1];\r\n            }\r\n            this._elements[index] = value;\r\n        }\r\n    }\r\n    /**\r\n    * @see MutableSequence.push\r\n    */\r\n    push(value) {\r\n        const index = this._size;\r\n        this.size += 1;\r\n        this._elements[index] = value;\r\n    }\r\n    /**\r\n    * @see MutableSequence.unshift\r\n    */\r\n    unshift(value) {\r\n        this.size += 1;\r\n        for (let index = this._size - 1; index > 0; --index) {\r\n            this._elements[index] = this._elements[index - 1];\r\n        }\r\n        this._elements[0] = value;\r\n    }\r\n    /**\r\n    * @see MutableSequence.delete\r\n    */\r\n    delete(index) {\r\n        for (let cursor = index, size = this._size - 1; cursor < size; ++cursor) {\r\n            this._elements[cursor] = this._elements[cursor + 1];\r\n        }\r\n        this.size -= 1;\r\n    }\r\n    /**\r\n    * @see MutableSequence.deleteMany\r\n    */\r\n    deleteMany(from, size) {\r\n        const toMove = this._size - from - size;\r\n        const offset = from + size;\r\n        for (let cursor = 0; cursor < toMove; ++cursor) {\r\n            this._elements[from + cursor] = this._elements[offset + cursor];\r\n        }\r\n        this.size -= size;\r\n    }\r\n    /**\r\n    * @see MutableSequence.warp\r\n    */\r\n    warp(index) {\r\n        this._elements[index] = this._elements[this._size - 1];\r\n        this.size -= 1;\r\n    }\r\n    /**\r\n    * @see Collection.has\r\n    */\r\n    has(element) {\r\n        return this.indexOf(element) >= 0;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOf\r\n    */\r\n    indexOf(element) {\r\n        for (let index = 0, length = this._size; index < length; ++index) {\r\n            if (equals(element, this._elements[index])) {\r\n                return index;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n    * @see Sequence.hasInSubsequence\r\n    */\r\n    hasInSubsequence(element, offset, size) {\r\n        return this.indexOfInSubsequence(element, offset, size) >= 0;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOfInSubsequence\r\n    */\r\n    indexOfInSubsequence(element, offset, size) {\r\n        for (let index = offset, length = offset + size; index < length; ++index) {\r\n            if (equals(element, this._elements[index])) {\r\n                return index;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n    * @see Pack.copy\r\n    */\r\n    copy(toCopy) {\r\n        this.size = toCopy.size;\r\n        for (let index = 0, length = toCopy.size; index < length; ++index) {\r\n            this.set(index, toCopy.get(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see Sequence.concat\r\n    */\r\n    concat(toConcat) {\r\n        const firstIndex = toConcat.firstIndex;\r\n        const lastIndex = toConcat.lastIndex + 1;\r\n        if (this.capacity < this.size + toConcat.size) {\r\n            this.reallocate(this.size + toConcat.size);\r\n        }\r\n        for (let index = firstIndex; index < lastIndex; ++index) {\r\n            this.push(toConcat.get(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see Pack.allocate\r\n    */\r\n    allocate(capacity) {\r\n        return new BufferPack_BufferPack(Buffer_Buffer.reallocate(this._elements, capacity));\r\n    }\r\n    /**\r\n    * @see Collection.clone\r\n    */\r\n    clone() {\r\n        const result = this.allocate(this._elements.length);\r\n        result.copy(this);\r\n        return result;\r\n    }\r\n    /**\r\n    * @see MutableSequence.clear\r\n    */\r\n    clear() {\r\n        this._size = 0;\r\n    }\r\n    /**\r\n    * @see Collection.view\r\n    */\r\n    view() {\r\n        return SequenceView_SequenceView.wrap(this);\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    iterator() {\r\n        const result = new PackIterator();\r\n        result.pack = this;\r\n        result.index = 0;\r\n        return result;\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        for (let index = 0, length = this._size; index < length; ++index) {\r\n            yield this._elements[index];\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof BufferPack_BufferPack) {\r\n            if (other.size !== this._size)\r\n                return false;\r\n            for (let index = 0, size = this._size; index < size; ++index) {\r\n                if (!equals(other.get(index), this._elements[index]))\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n* Default value of each new cell of this buffer.\r\n*/\r\nBufferPack_BufferPack.DEFAULT_VALUE = 0;\r\n(function (BufferPack) {\r\n    /**\r\n    * Return a copy of another pack.\r\n    *\r\n    * @param toCopy - A pack to copy.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy == null ? null : toCopy.clone();\r\n    }\r\n    BufferPack.copy = copy;\r\n    /**\r\n    * Instantiate a new pack that wrap a unsigned byte buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a unsigned byte buffer of the given capacity.\r\n    */\r\n    function uint8(capacity) {\r\n        return new BufferPack(new Uint8Array(capacity));\r\n    }\r\n    BufferPack.uint8 = uint8;\r\n    /**\r\n    * Instantiate a new pack that wrap a unsigned short buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a unsigned short buffer of the given capacity.\r\n    */\r\n    function uint16(capacity) {\r\n        return new BufferPack(new Uint16Array(capacity));\r\n    }\r\n    BufferPack.uint16 = uint16;\r\n    /**\r\n    * Instantiate a new pack that wrap a unsigned integer buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a unsigned integer buffer of the given capacity.\r\n    */\r\n    function uint32(capacity) {\r\n        return new BufferPack(new Uint32Array(capacity));\r\n    }\r\n    BufferPack.uint32 = uint32;\r\n    /**\r\n    * Instantiate a new pack that wrap a byte buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a byte buffer of the given capacity.\r\n    */\r\n    function int8(capacity) {\r\n        return new BufferPack(new Int8Array(capacity));\r\n    }\r\n    BufferPack.int8 = int8;\r\n    /**\r\n    * Instantiate a new pack that wrap a short buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a short buffer of the given capacity.\r\n    */\r\n    function int16(capacity) {\r\n        return new BufferPack(new Int16Array(capacity));\r\n    }\r\n    BufferPack.int16 = int16;\r\n    /**\r\n    * Instantiate a new pack that wrap a integer buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a integer buffer of the given capacity.\r\n    */\r\n    function int32(capacity) {\r\n        return new BufferPack(new Int32Array(capacity));\r\n    }\r\n    BufferPack.int32 = int32;\r\n    /**\r\n    * Instantiate a new pack that wrap a float buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a float buffer of the given capacity.\r\n    */\r\n    function float32(capacity) {\r\n        return new BufferPack(new Float32Array(capacity));\r\n    }\r\n    BufferPack.float32 = float32;\r\n    /**\r\n    * Instantiate a new pack that wrap a double buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a double buffer of the given capacity.\r\n    */\r\n    function float64(capacity) {\r\n        return new BufferPack(new Float64Array(capacity));\r\n    }\r\n    BufferPack.float64 = float64;\r\n    /**\r\n    * Instantiate a new pack that wrap a unsigned integer buffer that can store\r\n    * values in range [0, maximum] and that is of the given capacity.\r\n    *\r\n    * @param maximum - Maximum value that can be stored.\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a unsigned integer buffer that can store values\r\n    *         in range [0, maximum] and that is of the given capacity.\r\n    */\r\n    function unsignedUpTo(maximum, capacity) {\r\n        return new BufferPack(UnsignedIntegerBuffer.upTo(maximum, capacity));\r\n    }\r\n    BufferPack.unsignedUpTo = unsignedUpTo;\r\n    /**\r\n    * Instantiate a new pack that wrap a signed integer buffer that can store\r\n    * values in range [-maximum, maximum] and that is of the given capacity.\r\n    *\r\n    * @param maximum - Maximum value that can be stored.\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a signed integer buffer that can store values\r\n    *         in range [-maximum, maximum] and that is of the given capacity.\r\n    */\r\n    function signedUpTo(maximum, capacity) {\r\n        return new BufferPack(IntegerBuffer.upTo(maximum, capacity));\r\n    }\r\n    BufferPack.signedUpTo = signedUpTo;\r\n})(BufferPack_BufferPack || (BufferPack_BufferPack = {}));\r\n\n// CONCATENATED MODULE: ./src/pack/ArrayPack.ts\n\r\n\r\n\r\n\r\n/**\r\n* A javascript array.\r\n*\r\n* @see https://v8.dev/blog/elements-kinds?fbclid=IwAR337wb3oxEpjz_5xVHL-Y14gUpVElementOztLSIikVVQLGN6qcKidEjMLJ4vO3M\r\n*/\r\nclass ArrayPack_ArrayPack {\r\n    /**\r\n    * Wrap the given array as a pack.\r\n    *\r\n    * @param elements - A javascript array to wrap.\r\n    * @param [size = elements.length] - Initial number of elements in the array to wrap.\r\n    */\r\n    constructor(elements, size = elements.length) {\r\n        this._elements = elements;\r\n        this._size = size;\r\n    }\r\n    /**\r\n    * @see Collection.size\r\n    */\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    /**\r\n    * @see MutableSequence.size\r\n    */\r\n    set size(value) {\r\n        /**\r\n        * @see https://v8.dev/blog/elements-kinds?fbclid=IwAR337wb3oxEpjz_5xVHL-Y14gUpVElementOztLSIikVVQLGN6qcKidEjMLJ4vO3M\r\n        */\r\n        while (value > this._elements.length) {\r\n            this._elements.push(null);\r\n        }\r\n        for (let index = this._size; index < value; ++index) {\r\n            this._elements[index] = null;\r\n        }\r\n        this._size = value;\r\n    }\r\n    /**\r\n    * @see StaticCollection.capacity\r\n    */\r\n    get capacity() {\r\n        return this._elements.length;\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.reallocate\r\n    */\r\n    reallocate(capacity) {\r\n        if (capacity < this._elements.length) {\r\n            this._elements.length = capacity;\r\n            this._size = Math.min(this._size, capacity);\r\n        }\r\n        else {\r\n            /**\r\n            * @see https://v8.dev/blog/elements-kinds?fbclid=IwAR337wb3oxEpjz_5xVHL-Y14gUpVElementOztLSIikVVQLGN6qcKidEjMLJ4vO3M\r\n            */\r\n            while (this._elements.length != capacity) {\r\n                this._elements.push(null);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.fit\r\n    */\r\n    fit() {\r\n        this._elements.length = this._size;\r\n    }\r\n    /**\r\n    * @see Sequence.get\r\n    */\r\n    get(index) {\r\n        return this._elements[index];\r\n    }\r\n    /**\r\n    * @see MutableSequence.pop\r\n    */\r\n    pop() {\r\n        const last = this._size - 1;\r\n        const value = this._elements[last];\r\n        this.delete(last);\r\n        return value;\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get last() {\r\n        return this._elements[this._size - 1];\r\n    }\r\n    /**\r\n    * @see Sequence.lastIndex\r\n    */\r\n    get lastIndex() {\r\n        return Math.max(this._size - 1, 0);\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get first() {\r\n        return this._elements[0];\r\n    }\r\n    /**\r\n    * @see Sequence.firstIndex\r\n    */\r\n    get firstIndex() {\r\n        return 0;\r\n    }\r\n    /**\r\n    * @see MutableSequence.fill\r\n    */\r\n    fill(element) {\r\n        for (let index = 0, size = this._size; index < size; ++index) {\r\n            this._elements[index] = element;\r\n        }\r\n    }\r\n    /**\r\n    * @see MutableSequence.shift\r\n    */\r\n    shift() {\r\n        const value = this._elements[0];\r\n        this.delete(0);\r\n        return value;\r\n    }\r\n    /**\r\n    * @see Pack.sort\r\n    */\r\n    sort(comparator) {\r\n        quicksort(this, comparator, 0, this._size);\r\n    }\r\n    /**\r\n    * @see Pack.subsort\r\n    */\r\n    subsort(offset, size, comparator) {\r\n        quicksort(this, comparator, offset, size);\r\n    }\r\n    /**\r\n    * @see MutableSequence.swap\r\n    */\r\n    swap(first, second) {\r\n        const tmp = this._elements[first];\r\n        this._elements[first] = this._elements[second];\r\n        this._elements[second] = tmp;\r\n    }\r\n    /**\r\n    * @see MutableSequence.set\r\n    */\r\n    set(index, value) {\r\n        if (index >= this._size)\r\n            this.size = index + 1;\r\n        this._elements[index] = value;\r\n    }\r\n    /**\r\n    * @see MutableSequence.insert\r\n    */\r\n    insert(index, value) {\r\n        if (index >= this._size) {\r\n            this.set(index, value);\r\n        }\r\n        else {\r\n            this.size += 1;\r\n            for (let cursor = this._size - 1; cursor > index; --cursor) {\r\n                this._elements[cursor] = this._elements[cursor - 1];\r\n            }\r\n            this._elements[index] = value;\r\n        }\r\n    }\r\n    /**\r\n    * @see MutableSequence.push\r\n    */\r\n    push(value) {\r\n        const index = this._size;\r\n        this.size += 1;\r\n        this._elements[index] = value;\r\n    }\r\n    /**\r\n    * @see MutableSequence.unshift\r\n    */\r\n    unshift(value) {\r\n        this.size += 1;\r\n        for (let index = this._size - 1; index > 0; --index) {\r\n            this._elements[index] = this._elements[index - 1];\r\n        }\r\n        this._elements[0] = value;\r\n    }\r\n    /**\r\n    * @see MutableSequence.delete\r\n    */\r\n    delete(index) {\r\n        for (let cursor = index, size = this._size - 1; cursor < size; ++cursor) {\r\n            this._elements[cursor] = this._elements[cursor + 1];\r\n        }\r\n        this.size -= 1;\r\n    }\r\n    /**\r\n    * @see MutableSequence.deleteMany\r\n    */\r\n    deleteMany(from, size) {\r\n        const toMove = this._size - from - size;\r\n        const offset = from + size;\r\n        for (let cursor = 0; cursor < toMove; ++cursor) {\r\n            this._elements[from + cursor] = this._elements[offset + cursor];\r\n        }\r\n        this.size -= size;\r\n    }\r\n    /**\r\n    * @see MutableSequence.warp\r\n    */\r\n    warp(index) {\r\n        this._elements[index] = this._elements[this._size - 1];\r\n        this.size -= 1;\r\n    }\r\n    /**\r\n    * @see Collection.has\r\n    */\r\n    has(element) {\r\n        return this.indexOf(element) >= 0;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOf\r\n    */\r\n    indexOf(element) {\r\n        for (let index = 0, length = this._size; index < length; ++index) {\r\n            if (equals(element, this._elements[index])) {\r\n                return index;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n    * @see Sequence.hasInSubsequence\r\n    */\r\n    hasInSubsequence(element, offset, size) {\r\n        return this.indexOfInSubsequence(element, offset, size) >= 0;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOfInSubsequence\r\n    */\r\n    indexOfInSubsequence(element, offset, size) {\r\n        for (let index = offset, length = offset + size; index < length; ++index) {\r\n            if (equals(element, this._elements[index])) {\r\n                return index;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n    * @see Pack.copy\r\n    */\r\n    copy(toCopy) {\r\n        this.size = toCopy.size;\r\n        for (let index = 0, length = toCopy.size; index < length; ++index) {\r\n            this.set(index, toCopy.get(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see Sequence.concat\r\n    */\r\n    concat(toConcat) {\r\n        const firstIndex = toConcat.firstIndex;\r\n        const lastIndex = toConcat.lastIndex + 1;\r\n        if (this.capacity < this.size + toConcat.size) {\r\n            this.reallocate(this.size + toConcat.size);\r\n        }\r\n        for (let index = firstIndex; index < lastIndex; ++index) {\r\n            this.push(toConcat.get(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see Pack.allocate\r\n    */\r\n    allocate(capacity) {\r\n        return ArrayPack_ArrayPack.allocate(capacity);\r\n    }\r\n    /**\r\n    * @see Pack.clone\r\n    */\r\n    clone() {\r\n        return ArrayPack_ArrayPack.copy(this);\r\n    }\r\n    /**\r\n    * @see Collection.view\r\n    */\r\n    view() {\r\n        return SequenceView_SequenceView.wrap(this);\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    iterator() {\r\n        const result = new PackIterator();\r\n        result.pack = this;\r\n        result.index = 0;\r\n        return result;\r\n    }\r\n    /**\r\n    * @see MutableSequence.clear\r\n    */\r\n    clear() {\r\n        this._size = 0;\r\n    }\r\n    /**\r\n    * @see Sequence.iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        for (let index = 0, length = this._size; index < length; ++index) {\r\n            yield this._elements[index];\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof ArrayPack_ArrayPack) {\r\n            if (other.size !== this._size)\r\n                return false;\r\n            for (let index = 0, size = this._size; index < size; ++index) {\r\n                if (!equals(other.get(index), this._elements[index]))\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (ArrayPack) {\r\n    /**\r\n    * Initial value of each new cell of a pack.\r\n    */\r\n    ArrayPack.DEFAULT_VALUE = null;\r\n    /**\r\n    * Return an empty array pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return An empty array pack of the given capacity.\r\n    */\r\n    function allocate(capacity) {\r\n        const result = [];\r\n        /**\r\n        * @see https://v8.dev/blog/elements-kinds?fbclid=IwAR337wb3oxEpjz_5xVHL-Y14gUpVElementOztLSIikVVQLGN6qcKidEjMLJ4vO3M\r\n        */\r\n        while (result.length != capacity) {\r\n            result.push(ArrayPack.DEFAULT_VALUE);\r\n        }\r\n        return new ArrayPack(result, 0);\r\n    }\r\n    ArrayPack.allocate = allocate;\r\n    /**\r\n    * Wrap an existing array as a pack.\r\n    *\r\n    * @param elements - Array to wrap.\r\n    *\r\n    * @return The given array wrapped as a pack.\r\n    */\r\n    function wrap(elements) {\r\n        return new ArrayPack(elements);\r\n    }\r\n    ArrayPack.wrap = wrap;\r\n    /**\r\n    * Return a shallow copy of another pack as an array pack.\r\n    *\r\n    * @param toCopy - A pack to copy.\r\n    *\r\n    * @return An array pack that is a shallow copy of the given pack.\r\n    */\r\n    function copy(toCopy) {\r\n        const result = allocate(toCopy.capacity);\r\n        result.copy(toCopy);\r\n        return result;\r\n    }\r\n    ArrayPack.copy = copy;\r\n})(ArrayPack_ArrayPack || (ArrayPack_ArrayPack = {}));\r\n\n// CONCATENATED MODULE: ./src/pack/InstancePack.ts\n\r\n\r\n\r\n/**\r\n* A javascript array of pre-allocated instances.\r\n*\r\n* @see https://v8.dev/blog/elements-kinds?fbclid=IwAR337wb3oxEpjz_5xVHL-Y14gUpVElementOztLSIikVVQLGN6qcKidEjMLJ4vO3M\r\n*/\r\nclass InstancePack_InstancePack {\r\n    /**\r\n    * Makes an empty instance pack of the given capacity.\r\n    *\r\n    * @param allocator - An allocator that allows to manipulate the given instance type.\r\n    * @param [capacity = 32] - Initial capacity of the pack to instantiate.\r\n    */\r\n    constructor(allocator, capacity = 32) {\r\n        this.allocator = allocator;\r\n        this._pool = Pack_Pack.any(capacity);\r\n        this._elements = Pack_Pack.any(capacity);\r\n        while (this._pool.size < this._pool.capacity) {\r\n            this._pool.push(this.allocator.allocate());\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.size\r\n    */\r\n    get size() {\r\n        return this._elements.size;\r\n    }\r\n    /**\r\n    * @see MutableSequence.size\r\n    */\r\n    set size(value) {\r\n        if (value > this._pool.capacity) {\r\n            this.reallocate(value);\r\n        }\r\n        /**\r\n        * @see https://v8.dev/blog/elements-kinds?fbclid=IwAR337wb3oxEpjz_5xVHL-Y14gUpVElementOztLSIikVVQLGN6qcKidEjMLJ4vO3M\r\n        */\r\n        while (this._elements.size < value) {\r\n            this._elements.push(this._pool.pop());\r\n        }\r\n        while (this._elements.size > value) {\r\n            this._pool.push(this._elements.pop());\r\n        }\r\n    }\r\n    /**\r\n    * @see StaticCollection.capacity\r\n    */\r\n    get capacity() {\r\n        return this._elements.capacity;\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.reallocate\r\n    */\r\n    reallocate(capacity) {\r\n        const oldCapacity = this._elements.capacity;\r\n        this._elements.reallocate(capacity);\r\n        this._pool.reallocate(capacity);\r\n        for (let index = oldCapacity; index < capacity; ++index) {\r\n            this._pool.push(this.allocator.allocate());\r\n        }\r\n        this._pool.size = capacity - this._elements.size;\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.fit\r\n    */\r\n    fit() {\r\n        this.reallocate(this._elements.size);\r\n    }\r\n    /**\r\n    * @see Sequence.get\r\n    */\r\n    get(index) {\r\n        return this._elements.get(index);\r\n    }\r\n    /**\r\n    * @see MutableSequence.pop\r\n    */\r\n    pop(output = this.allocator.allocate()) {\r\n        this.allocator.copy(this._elements.last, output);\r\n        this._pool.push(this._elements.pop());\r\n        this.allocator.clear(this._pool.last);\r\n        return output;\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get last() {\r\n        return this._elements.last;\r\n    }\r\n    /**\r\n    * @see Sequence.lastIndex\r\n    */\r\n    get lastIndex() {\r\n        return this._elements.lastIndex;\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get first() {\r\n        return this._elements.first;\r\n    }\r\n    /**\r\n    * @see Sequence.firstIndex\r\n    */\r\n    get firstIndex() {\r\n        return 0;\r\n    }\r\n    /**\r\n    * @see MutableSequence.fill\r\n    */\r\n    fill(element) {\r\n        for (let index = 0, size = this._elements.size; index < size; ++index) {\r\n            this.allocator.copy(element, this._elements.get(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see MutableSequence.shift\r\n    */\r\n    shift(output = this.allocator.allocate()) {\r\n        this.allocator.copy(this._elements.first, output);\r\n        this._pool.push(this._elements.shift());\r\n        this.allocator.clear(this._pool.last);\r\n        return output;\r\n    }\r\n    /**\r\n    * @see Pack.sort\r\n    */\r\n    sort(comparator) {\r\n        this._elements.sort(comparator);\r\n    }\r\n    /**\r\n    * @see Pack.subsort\r\n    */\r\n    subsort(offset, size, comparator) {\r\n        this._elements.subsort(offset, size, comparator);\r\n    }\r\n    /**\r\n    * @see MutableSequence.swap\r\n    */\r\n    swap(first, second) {\r\n        this._elements.swap(first, second);\r\n    }\r\n    /**\r\n    * @see MutableSequence.set\r\n    */\r\n    set(index, value) {\r\n        if (index >= this._elements.size) {\r\n            this.size = index + 1;\r\n        }\r\n        this.allocator.copy(value, this._elements.get(index));\r\n    }\r\n    /**\r\n    * @see MutableSequence.insert\r\n    */\r\n    insert(index, value) {\r\n        if (index >= this._elements.size) {\r\n            this.set(index, value);\r\n        }\r\n        else {\r\n            if (this._elements.size === this._elements.capacity) {\r\n                this.reallocate(this.capacity * 2);\r\n            }\r\n            this._elements.insert(index, this._pool.pop());\r\n            this.allocator.copy(value, this._elements.get(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see MutableSequence.push\r\n    */\r\n    push(value) {\r\n        if (this._elements.size === this._elements.capacity) {\r\n            this.reallocate(this.capacity * 2);\r\n        }\r\n        this._elements.push(this._pool.pop());\r\n        this.allocator.copy(value, this._elements.last);\r\n    }\r\n    /**\r\n    * @see MutableSequence.unshift\r\n    */\r\n    unshift(value) {\r\n        if (this._elements.size === this._elements.capacity) {\r\n            this.reallocate(this.capacity * 2);\r\n        }\r\n        this._elements.unshift(this._pool.pop());\r\n        this.allocator.copy(value, this._elements.first);\r\n    }\r\n    /**\r\n    * @see MutableSequence.delete\r\n    */\r\n    delete(index) {\r\n        const element = this._elements.get(index);\r\n        this._pool.push(element);\r\n        this.allocator.clear(element);\r\n        this._elements.delete(index);\r\n    }\r\n    /**\r\n    * @see MutableSequence.deleteMany\r\n    */\r\n    deleteMany(from, size) {\r\n        for (let index = 0; index < size; ++index) {\r\n            const element = this._elements.get(from + index);\r\n            this._pool.push(element);\r\n            this.allocator.clear(element);\r\n        }\r\n        this._elements.deleteMany(from, size);\r\n    }\r\n    /**\r\n    * @see MutableSequence.warp\r\n    */\r\n    warp(index) {\r\n        const element = this._elements.get(index);\r\n        this._pool.push(element);\r\n        this.allocator.clear(element);\r\n        this._elements.warp(index);\r\n    }\r\n    /**\r\n    * @see Collection.has\r\n    */\r\n    has(element) {\r\n        return this.indexOf(element) >= 0;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOf\r\n    */\r\n    indexOf(element) {\r\n        return this._elements.indexOf(element);\r\n    }\r\n    /**\r\n    * @see Sequence.hasInSubsequence\r\n    */\r\n    hasInSubsequence(element, offset, size) {\r\n        return this.indexOfInSubsequence(element, offset, size) >= 0;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOfInSubsequence\r\n    */\r\n    indexOfInSubsequence(element, offset, size) {\r\n        return this._elements.indexOfInSubsequence(element, offset, size);\r\n    }\r\n    /**\r\n    * @see Pack.copy\r\n    */\r\n    copy(toCopy) {\r\n        this.size = toCopy.size;\r\n        for (let index = 0, length = toCopy.size; index < length; ++index) {\r\n            this.set(index, toCopy.get(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see Sequence.concat\r\n    */\r\n    concat(toConcat) {\r\n        const firstIndex = toConcat.firstIndex;\r\n        const lastIndex = toConcat.lastIndex + 1;\r\n        if (this.capacity < this.size + toConcat.size) {\r\n            this.reallocate(this.size + toConcat.size);\r\n        }\r\n        for (let index = firstIndex; index < lastIndex; ++index) {\r\n            this.push(toConcat.get(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see Pack.allocate\r\n    */\r\n    allocate(capacity) {\r\n        return new InstancePack_InstancePack(this.allocator, capacity);\r\n    }\r\n    /**\r\n    * @see Pack.clone\r\n    */\r\n    clone() {\r\n        return InstancePack_InstancePack.copy(this);\r\n    }\r\n    /**\r\n    * @see Collection.view\r\n    */\r\n    view() {\r\n        return SequenceView_SequenceView.wrap(this);\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    iterator() {\r\n        const result = new PackIterator();\r\n        result.pack = this;\r\n        result.index = 0;\r\n        return result;\r\n    }\r\n    /**\r\n    * @see MutableSequence.clear\r\n    */\r\n    clear() {\r\n        while (this._elements.size > 0) {\r\n            const element = this._elements.pop();\r\n            this._pool.push(element);\r\n            this.allocator.clear(element);\r\n        }\r\n    }\r\n    /**\r\n    * @see Sequence.iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        yield* this._elements;\r\n    }\r\n    /**\r\n    * @see Collection.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof InstancePack_InstancePack) {\r\n            return this.allocator === other.allocator &&\r\n                this._elements.equals(other._elements);\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (InstancePack) {\r\n    /**\r\n    * Return an empty array pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return An empty array pack of the given capacity.\r\n    */\r\n    function allocate(allocator, capacity) {\r\n        return new InstancePack(allocator, capacity);\r\n    }\r\n    InstancePack.allocate = allocate;\r\n    /**\r\n    * Return a copy of another instance pack as an instance pack.\r\n    *\r\n    * @param toCopy - A pack to copy.\r\n    *\r\n    * @return An array pack that is a shallow copy of the given pack.\r\n    */\r\n    function copy(toCopy) {\r\n        const result = toCopy.allocate(toCopy.capacity);\r\n        result.copy(toCopy);\r\n        return result;\r\n    }\r\n    InstancePack.copy = copy;\r\n})(InstancePack_InstancePack || (InstancePack_InstancePack = {}));\r\n\n// CONCATENATED MODULE: ./src/pack/Pack.ts\n\r\n\r\n\r\n\r\n\r\nvar Pack_Pack;\r\n(function (Pack) {\r\n    /**\r\n    * Shallow copy the given instance and return it.\r\n    *\r\n    * @param toCopy - An instance to shallow copy.\r\n    *\r\n    * @return A new instance, shallow copy of the given one.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy == null ? null : toCopy.clone();\r\n    }\r\n    Pack.copy = copy;\r\n    /**\r\n    * Return the default value used by the given pack instance.\r\n    *\r\n    * @param pack - A pack instance.\r\n    *\r\n    * @return The default value used by the given pack instance.\r\n    */\r\n    function defaultValue(pack) {\r\n        return Object.getPrototypeOf(pack).constructor.DEFAULT_VALUE;\r\n    }\r\n    Pack.defaultValue = defaultValue;\r\n    /**\r\n    * Instantiate a new pack that wrap an array of the given type of instance.\r\n    *\r\n    * @param pack - Instance of the type of pack to instantiate.\r\n    * @param capacity - Capacity of the array to allocate.\r\n    *\r\n    * @return A new pack that wrap an array of the given type of instance.\r\n    */\r\n    function like(pack, capacity) {\r\n        return pack.allocate(capacity);\r\n    }\r\n    Pack.like = like;\r\n    /**\r\n    * Instantiate a new pack that wrap an array of the given type of instance.\r\n    *\r\n    * @param capacity - Capacity of the array to allocate.\r\n    *\r\n    * @return A new pack that wrap an array of the given type of instance.\r\n    */\r\n    function any(capacity) {\r\n        return ArrayPack_ArrayPack.allocate(capacity);\r\n    }\r\n    Pack.any = any;\r\n    /**\r\n    * Instantiate a new pack that wrap a unsigned byte buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a unsigned byte buffer of the given capacity.\r\n    */\r\n    function uint8(capacity) {\r\n        return new BufferPack_BufferPack(new Uint8Array(capacity));\r\n    }\r\n    Pack.uint8 = uint8;\r\n    /**\r\n    * Instantiate a new pack that wrap a unsigned short buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a unsigned short buffer of the given capacity.\r\n    */\r\n    function uint16(capacity) {\r\n        return new BufferPack_BufferPack(new Uint16Array(capacity));\r\n    }\r\n    Pack.uint16 = uint16;\r\n    /**\r\n    * Instantiate a new pack that wrap a unsigned integer buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a unsigned integer buffer of the given capacity.\r\n    */\r\n    function uint32(capacity) {\r\n        return new BufferPack_BufferPack(new Uint32Array(capacity));\r\n    }\r\n    Pack.uint32 = uint32;\r\n    /**\r\n    * Instantiate a new pack that wrap a byte buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a byte buffer of the given capacity.\r\n    */\r\n    function int8(capacity) {\r\n        return new BufferPack_BufferPack(new Int8Array(capacity));\r\n    }\r\n    Pack.int8 = int8;\r\n    /**\r\n    * Instantiate a new pack that wrap a short buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a short buffer of the given capacity.\r\n    */\r\n    function int16(capacity) {\r\n        return new BufferPack_BufferPack(new Int16Array(capacity));\r\n    }\r\n    Pack.int16 = int16;\r\n    /**\r\n    * Instantiate a new pack that wrap a integer buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a integer buffer of the given capacity.\r\n    */\r\n    function int32(capacity) {\r\n        return new BufferPack_BufferPack(new Int32Array(capacity));\r\n    }\r\n    Pack.int32 = int32;\r\n    /**\r\n    * Instantiate a new pack that wrap a float buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a float buffer of the given capacity.\r\n    */\r\n    function float32(capacity) {\r\n        return new BufferPack_BufferPack(new Float32Array(capacity));\r\n    }\r\n    Pack.float32 = float32;\r\n    /**\r\n    * Instantiate a new pack that wrap a double buffer of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a double buffer of the given capacity.\r\n    */\r\n    function float64(capacity) {\r\n        return new BufferPack_BufferPack(new Float64Array(capacity));\r\n    }\r\n    Pack.float64 = float64;\r\n    /**\r\n    * Instantiate a new pack that wrap a unsigned integer buffer that can store\r\n    * values in range [0, maximum] and that is of the given capacity.\r\n    *\r\n    * @param maximum - Maximum value that can be stored.\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a unsigned integer buffer that can store values\r\n    *         in range [0, maximum] and that is of the given capacity.\r\n    */\r\n    function unsignedUpTo(maximum, capacity) {\r\n        return new BufferPack_BufferPack(UnsignedIntegerBuffer.upTo(maximum, capacity));\r\n    }\r\n    Pack.unsignedUpTo = unsignedUpTo;\r\n    /**\r\n    * Instantiate a new pack that wrap a signed integer buffer that can store\r\n    * values in range [-maximum, maximum] and that is of the given capacity.\r\n    *\r\n    * @param maximum - Maximum value that can be stored.\r\n    * @param capacity - Capacity of the buffer to allocate.\r\n    *\r\n    * @return A new pack that wrap a signed integer buffer that can store values\r\n    *         in range [-maximum, maximum] and that is of the given capacity.\r\n    */\r\n    function signedUpTo(maximum, capacity) {\r\n        return new BufferPack_BufferPack(IntegerBuffer.upTo(maximum, capacity));\r\n    }\r\n    Pack.signedUpTo = signedUpTo;\r\n    function instance(allocator, capacity) {\r\n        return new InstancePack_InstancePack(allocator, capacity);\r\n    }\r\n    Pack.instance = instance;\r\n})(Pack_Pack || (Pack_Pack = {}));\r\n\n// CONCATENATED MODULE: ./src/pack/index.ts\n\r\n\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/set/PackSet.ts\n\r\n\r\nclass PackSet_PackSet {\r\n    /**\r\n    * Create a new set collection based upon a pack instance.\r\n    *\r\n    * @param pack - An empty pack instance to wrap as a set.\r\n    */\r\n    constructor(elements) {\r\n        this._elements = elements;\r\n    }\r\n    /**\r\n    * @return Elementhis set underlying pack instance.\r\n    */\r\n    get elements() {\r\n        return this._elements;\r\n    }\r\n    /**\r\n    * Change the wrapped pack instance.\r\n    *\r\n    * @param elements - Elementhe new pack instance to wrap.\r\n    */\r\n    set elements(elements) {\r\n        this._elements = elements;\r\n    }\r\n    /**\r\n    * @see Collection.size\r\n    */\r\n    get size() {\r\n        return this._elements.size;\r\n    }\r\n    /**\r\n    * @see StaticCollection.capacity\r\n    */\r\n    get capacity() {\r\n        return this._elements.capacity;\r\n    }\r\n    /**\r\n    * @see Collection.has\r\n    */\r\n    has(element) {\r\n        return this._elements.has(element);\r\n    }\r\n    /**\r\n    * @see Sequence.indexOf\r\n    */\r\n    indexOf(element) {\r\n        return this._elements.indexOf(element);\r\n    }\r\n    /**\r\n    * @see Sequence.hasInSubsequence\r\n    */\r\n    hasInSubsequence(element, offset, size) {\r\n        return this._elements.hasInSubsequence(element, offset, size);\r\n    }\r\n    /**\r\n    * @see Sequence.indexOfInSubsequence\r\n    */\r\n    indexOfInSubsequence(element, offset, size) {\r\n        return this._elements.indexOfInSubsequence(element, offset, size);\r\n    }\r\n    /**\r\n    * @see Set.add\r\n    */\r\n    add(element) {\r\n        if (this._elements.indexOf(element) === -1) {\r\n            this._elements.push(element);\r\n        }\r\n    }\r\n    /**\r\n    * @see Set.delete\r\n    */\r\n    delete(element) {\r\n        const index = this._elements.indexOf(element);\r\n        if (index >= 0) {\r\n            this._elements.warp(index);\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.get\r\n    */\r\n    get(index) {\r\n        return this._elements.get(index);\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.reallocate\r\n    */\r\n    reallocate(capacity) {\r\n        this._elements.reallocate(capacity);\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.fit\r\n    */\r\n    fit() {\r\n        this._elements.fit();\r\n    }\r\n    /**\r\n    * @see Set.copy\r\n    */\r\n    copy(toCopy) {\r\n        this.clear();\r\n        for (const element of toCopy) {\r\n            this.add(element);\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.clone\r\n    */\r\n    clone() {\r\n        return new PackSet_PackSet(this._elements.clone());\r\n    }\r\n    /**\r\n    * @see Set.clear\r\n    */\r\n    clear() {\r\n        this._elements.clear();\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get first() {\r\n        return this._elements.first;\r\n    }\r\n    /**\r\n    * @see Sequence.firstIndex\r\n    */\r\n    get firstIndex() {\r\n        return this._elements.firstIndex;\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get last() {\r\n        return this._elements.last;\r\n    }\r\n    /**\r\n    * @see Sequence.lastIndex\r\n    */\r\n    get lastIndex() {\r\n        return this._elements.lastIndex;\r\n    }\r\n    /**\r\n    * @see Collection.view\r\n    */\r\n    view() {\r\n        return SequenceView_SequenceView.wrap(this);\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    iterator() {\r\n        return this._elements.iterator();\r\n    }\r\n    /**\r\n    * @see Set.iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        yield* this._elements;\r\n    }\r\n    /**\r\n    * @see Collection.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof PackSet_PackSet) {\r\n            if (other.size !== this._elements.size)\r\n                return false;\r\n            for (let index = 0, length = other.size; index < length; ++index) {\r\n                if (!this.has(other.get(index)))\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (PackSet) {\r\n    /**\r\n    * Return a copy of a given pack set.\r\n    *\r\n    * @param toCopy - A pack set to copy.\r\n    */\r\n    function copy(toCopy) {\r\n        return new PackSet(Pack_Pack.copy(toCopy.elements));\r\n    }\r\n    PackSet.copy = copy;\r\n    /**\r\n    * Instantiate a new set that wrap a pack of the given type of instance.\r\n    *\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a pack of the given type of instance.\r\n    */\r\n    function any(capacity) {\r\n        return new PackSet(Pack_Pack.any(capacity));\r\n    }\r\n    PackSet.any = any;\r\n    /**\r\n    * Instantiate a new set that wrap a unsigned byte pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a unsigned byte pack of the given capacity.\r\n    */\r\n    function uint8(capacity) {\r\n        return new PackSet(Pack_Pack.uint8(capacity));\r\n    }\r\n    PackSet.uint8 = uint8;\r\n    /**\r\n    * Instantiate a new set that wrap a unsigned short pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a unsigned short pack of the given capacity.\r\n    */\r\n    function uint16(capacity) {\r\n        return new PackSet(Pack_Pack.uint16(capacity));\r\n    }\r\n    PackSet.uint16 = uint16;\r\n    /**\r\n    * Instantiate a new set that wrap a unsigned integer pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a unsigned integer pack of the given capacity.\r\n    */\r\n    function uint32(capacity) {\r\n        return new PackSet(Pack_Pack.uint32(capacity));\r\n    }\r\n    PackSet.uint32 = uint32;\r\n    /**\r\n    * Instantiate a new set that wrap a byte pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a byte pack of the given capacity.\r\n    */\r\n    function int8(capacity) {\r\n        return new PackSet(Pack_Pack.int8(capacity));\r\n    }\r\n    PackSet.int8 = int8;\r\n    /**\r\n    * Instantiate a new set that wrap a short pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a short pack of the given capacity.\r\n    */\r\n    function int16(capacity) {\r\n        return new PackSet(Pack_Pack.int16(capacity));\r\n    }\r\n    PackSet.int16 = int16;\r\n    /**\r\n    * Instantiate a new set that wrap a integer pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a integer pack of the given capacity.\r\n    */\r\n    function int32(capacity) {\r\n        return new PackSet(Pack_Pack.int32(capacity));\r\n    }\r\n    PackSet.int32 = int32;\r\n    /**\r\n    * Instantiate a new set that wrap a float pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a float pack of the given capacity.\r\n    */\r\n    function float32(capacity) {\r\n        return new PackSet(Pack_Pack.float32(capacity));\r\n    }\r\n    PackSet.float32 = float32;\r\n    /**\r\n    * Instantiate a new set that wrap a double pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a double pack of the given capacity.\r\n    */\r\n    function float64(capacity) {\r\n        return new PackSet(Pack_Pack.float64(capacity));\r\n    }\r\n    PackSet.float64 = float64;\r\n    /**\r\n    * Instantiate a new set that wrap a unsigned integer pack that can store\r\n    * values in range [0, maximum] and that is of the given capacity.\r\n    *\r\n    * @param maximum - Maximum value that can be stored.\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a unsigned integer pack that can store values\r\n    *         in range [0, maximum] and that is of the given capacity.\r\n    */\r\n    function unsignedUpTo(maximum, capacity) {\r\n        return new PackSet(Pack_Pack.unsignedUpTo(maximum, capacity));\r\n    }\r\n    PackSet.unsignedUpTo = unsignedUpTo;\r\n    /**\r\n    * Instantiate a new set that wrap a signed integer pack that can store\r\n    * values in range [-maximum, maximum] and that is of the given capacity.\r\n    *\r\n    * @param maximum - Maximum value that can be stored.\r\n    * @param capacity - Capacity of the set to allocate.\r\n    *\r\n    * @return A new set that wrap a signed integer pack that can store values\r\n    *         in range [-maximum, maximum] and that is of the given capacity.\r\n    */\r\n    function signedUpTo(maximum, capacity) {\r\n        return new PackSet(Pack_Pack.signedUpTo(maximum, capacity));\r\n    }\r\n    PackSet.signedUpTo = signedUpTo;\r\n})(PackSet_PackSet || (PackSet_PackSet = {}));\r\n\n// CONCATENATED MODULE: ./src/set/IdentifierSetIterator.ts\nclass IdentifierSetIterator {\r\n    /**\r\n    * Instantiate a new random access iterator instance.\r\n    */\r\n    constructor() {\r\n        this.identifierSet = null;\r\n        this.index = 0;\r\n    }\r\n    /**\r\n    * @see Iterator#collection\r\n    */\r\n    collection() {\r\n        return this.identifierSet;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.hasNext\r\n    */\r\n    hasNext() {\r\n        return this.identifierSet && this.index < this.identifierSet.size - 1;\r\n    }\r\n    /**\r\n    * @see BidirectionalIterator.go\r\n    */\r\n    go(index) {\r\n        this.index = index;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.next\r\n    */\r\n    next() {\r\n        this.index += 1;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.forward\r\n    */\r\n    forward(count) {\r\n        this.index += count;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.end\r\n    */\r\n    end() {\r\n        this.index = this.identifierSet ? this.identifierSet.lastIndex : 0;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.hasPrevious\r\n    */\r\n    hasPrevious() {\r\n        return this.identifierSet && this.index > 0;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.previous\r\n    */\r\n    previous() {\r\n        this.index -= 1;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.backward\r\n    */\r\n    backward(count) {\r\n        this.index -= count;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.start\r\n    */\r\n    start() {\r\n        this.index = 0;\r\n    }\r\n    /**\r\n    * @see Iterator.get\r\n    */\r\n    get() {\r\n        return this.identifierSet.get(this.index);\r\n    }\r\n    /**\r\n    * @see Iterator.move\r\n    */\r\n    move(iterator) {\r\n        if (iterator instanceof IdentifierSetIterator) {\r\n            this.identifierSet = iterator.identifierSet;\r\n            this.index = iterator.index;\r\n        }\r\n        else {\r\n            throw new Error('Trying to move to a location described by an unsupported type of ' +\r\n                'iterator');\r\n        }\r\n    }\r\n    /**\r\n    * Shallow-copy the given instance.\r\n    *\r\n    * @param toCopy - An instance to shallow copy.\r\n    */\r\n    copy(toCopy) {\r\n        this.identifierSet = toCopy.identifierSet;\r\n        this.index = toCopy.index;\r\n    }\r\n    /**\r\n    * @see Iterator.clone\r\n    */\r\n    clone() {\r\n        const copy = new IdentifierSetIterator();\r\n        copy.copy(this);\r\n        return copy;\r\n    }\r\n    /**\r\n    * @see Iterator.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof IdentifierSetIterator) {\r\n            return other.identifierSet === this.identifierSet &&\r\n                other.index === this.index;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (IdentifierSetIterator) {\r\n    /**\r\n    * Return a shallow copy of the given iterator.\r\n    *\r\n    * A shallow-copy *b* of an iterator *a* is an instance that follow both\r\n    * properties :\r\n    *  - b !== a\r\n    *  - b.equals(a)\r\n    *\r\n    * @param toCopy - An iterator to copy.\r\n    *\r\n    * @return A shallow copy of the given iterator.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy.clone();\r\n    }\r\n    IdentifierSetIterator.copy = copy;\r\n})(IdentifierSetIterator || (IdentifierSetIterator = {}));\r\n\n// CONCATENATED MODULE: ./src/set/IdentifierSet.ts\n\r\n\r\n\r\nclass IdentifierSet_IdentifierSet {\r\n    /**\r\n    * Create a new empty identifier set.\r\n    *\r\n    * @param capacity - Number of identifier to allocate.\r\n    */\r\n    constructor(capacity) {\r\n        this._sparse = UnsignedIntegerBuffer.upTo(capacity - 1, capacity);\r\n        this._dense = UnsignedIntegerBuffer.upTo(capacity - 1, capacity);\r\n        this._size = 0;\r\n        for (let index = 0; index < capacity; ++index) {\r\n            this._sparse[index] = index;\r\n            this._dense[index] = index;\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.size\r\n    */\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    /**\r\n    * @see StaticCollection.capacity\r\n    */\r\n    get capacity() {\r\n        return this._dense.length;\r\n    }\r\n    /**\r\n    * @see Collection.has\r\n    */\r\n    has(element) {\r\n        return this._sparse[element] < this._size;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOf\r\n    */\r\n    indexOf(element) {\r\n        const index = this._sparse[element];\r\n        return index < this._size ? index : -1;\r\n    }\r\n    /**\r\n    * @see Sequence.hasInSubsequence\r\n    */\r\n    hasInSubsequence(element, offset, size) {\r\n        const index = this.indexOf(element);\r\n        return index >= offset && index < offset + size;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOfInSubsequence\r\n    */\r\n    indexOfInSubsequence(element, offset, size) {\r\n        const index = this.indexOf(element);\r\n        return index >= offset && index < offset + size ? index : -1;\r\n    }\r\n    /**\r\n    * @see MutableSet.add\r\n    */\r\n    add(element) {\r\n        const index = this._sparse[element];\r\n        if (index >= this._size) {\r\n            const swap = this._dense[this._size];\r\n            this._sparse[swap] = index;\r\n            this._sparse[element] = this._size;\r\n            this._dense[this._size] = element;\r\n            this._dense[index] = swap;\r\n            this._size += 1;\r\n        }\r\n    }\r\n    next() {\r\n        this._size += 1;\r\n        return this._dense[this._size - 1];\r\n    }\r\n    /**\r\n    * @see MutableSet.delete\r\n    */\r\n    delete(element) {\r\n        const index = this._sparse[element];\r\n        if (index < this._size) {\r\n            this._size -= 1;\r\n            const last = this._dense[this._size];\r\n            this._dense[this._size] = element;\r\n            this._dense[index] = last;\r\n            this._sparse[element] = this._size;\r\n            this._sparse[last] = index;\r\n        }\r\n    }\r\n    /**\r\n    * @see Sequence.get\r\n    */\r\n    get(index) {\r\n        return this._dense[index];\r\n    }\r\n    /**\r\n    * @see StaticCollection.reallocate\r\n    */\r\n    reallocate(capacity) {\r\n        const oldDense = this._dense;\r\n        const oldSize = this._size;\r\n        this._dense = UnsignedIntegerBuffer.upTo(capacity - 1, capacity);\r\n        this._sparse = UnsignedIntegerBuffer.upTo(capacity - 1, capacity);\r\n        this._size = 0;\r\n        for (let index = 0; index < capacity; ++index) {\r\n            this._dense[index] = index;\r\n            this._sparse[index] = index;\r\n        }\r\n        for (let index = 0; index < oldSize; ++index) {\r\n            const element = oldDense[index];\r\n            if (element < capacity) {\r\n                const swap = this._dense[this._size];\r\n                this._sparse[swap] = index;\r\n                this._sparse[element] = this._size;\r\n                this._dense[this._size] = element;\r\n                this._dense[index] = swap;\r\n                this._size += 1;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n    * @see StaticCollection.fit\r\n    */\r\n    fit() {\r\n        const max = this.max();\r\n        this.reallocate(max);\r\n    }\r\n    /**\r\n    * Return the maximum element of this set.\r\n    *\r\n    * @return The maximum element of this set.\r\n    */\r\n    max() {\r\n        if (this._size <= 0)\r\n            return undefined;\r\n        let result = this._dense[0];\r\n        for (let index = 1, length = this._size; index < length; ++index) {\r\n            const cell = this._dense[index];\r\n            result = cell > result ? cell : result;\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n    * Return the minimum element of this set.\r\n    *\r\n    * @return The minimum element of this set.\r\n    */\r\n    min() {\r\n        if (this._size <= 0)\r\n            return undefined;\r\n        let result = this._dense[0];\r\n        for (let index = 1, length = this._size; index < length; ++index) {\r\n            const cell = this._dense[index];\r\n            result = cell < result ? cell : result;\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n    * @see MutableSet.clear\r\n    */\r\n    clear() {\r\n        this._size = 0;\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get first() {\r\n        return this._dense[0];\r\n    }\r\n    /**\r\n    * @see Sequence.firstIndex\r\n    */\r\n    get firstIndex() {\r\n        return 0;\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get last() {\r\n        return this._dense[this._size - 1];\r\n    }\r\n    /**\r\n    * @see Sequence.lastIndex\r\n    */\r\n    get lastIndex() {\r\n        return this._size - 1;\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    iterator() {\r\n        const iterator = new IdentifierSetIterator();\r\n        iterator.identifierSet = this;\r\n        iterator.index = 0;\r\n        return iterator;\r\n    }\r\n    /**\r\n    * @see Set.copy\r\n    */\r\n    copy(toCopy) {\r\n        this.clear();\r\n        for (const element of toCopy) {\r\n            this.add(element);\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.view\r\n    */\r\n    view() {\r\n        return SequenceView_SequenceView.wrap(this);\r\n    }\r\n    /**\r\n    * @see Collection.clone\r\n    */\r\n    clone() {\r\n        const result = IdentifierSet_IdentifierSet.allocate(this._dense.length);\r\n        result.copy(this);\r\n        return result;\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        for (let index = 0, length = this._size; index < length; ++index) {\r\n            yield this._dense[index];\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other.isSet) {\r\n            if (other.size !== this._size)\r\n                return false;\r\n            for (let index = 0, length = other.size; index < length; ++index) {\r\n                if (!this.has(other.get(index)))\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (IdentifierSet) {\r\n    function copy(toCopy) {\r\n        return toCopy == null ? null : toCopy.clone();\r\n    }\r\n    IdentifierSet.copy = copy;\r\n    function allocate(capacity) {\r\n        return new IdentifierSet(capacity);\r\n    }\r\n    IdentifierSet.allocate = allocate;\r\n})(IdentifierSet_IdentifierSet || (IdentifierSet_IdentifierSet = {}));\r\n\n// CONCATENATED MODULE: ./src/set/NativeSet.ts\n\r\nclass NativeSet_NativeSet {\r\n    /**\r\n    * Create a new native set collection based upon the given set instance.\r\n    *\r\n    * @param elements - A set instance to wrap.\r\n    */\r\n    constructor(elements) {\r\n        this._elements = elements;\r\n    }\r\n    /**\r\n    * @return This set underlying native instance.\r\n    */\r\n    get elements() {\r\n        return this._elements;\r\n    }\r\n    /**\r\n    * Change the wrapped set instance.\r\n    *\r\n    * @param elements - The new set instance to wrap.\r\n    */\r\n    set elements(elements) {\r\n        this._elements = elements;\r\n    }\r\n    /**\r\n    * @see Collection.size\r\n    */\r\n    get size() {\r\n        return this._elements.size;\r\n    }\r\n    /**\r\n    * @see Collection.has\r\n    */\r\n    has(element) {\r\n        return this._elements.has(element);\r\n    }\r\n    /**\r\n    * @see Set.add\r\n    */\r\n    add(element) {\r\n        this._elements.add(element);\r\n    }\r\n    /**\r\n    * @see Set.delete\r\n    */\r\n    delete(element) {\r\n        this._elements.delete(element);\r\n    }\r\n    /**\r\n    * @see Collection.get\r\n    */\r\n    get(index) {\r\n        if (index < 0) {\r\n            return undefined;\r\n        }\r\n        let cursor = 0;\r\n        for (const element of this._elements) {\r\n            if (cursor === index) {\r\n                return element;\r\n            }\r\n            else {\r\n                cursor += 1;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n    * @see Set.copy\r\n    */\r\n    copy(toCopy) {\r\n        this._elements.clear();\r\n        for (const element of toCopy) {\r\n            this._elements.add(element);\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.clone\r\n    */\r\n    clone() {\r\n        return new NativeSet_NativeSet(new Set(this._elements));\r\n    }\r\n    /**\r\n    * @see Set.clear\r\n    */\r\n    clear() {\r\n        this._elements.clear();\r\n    }\r\n    /**\r\n    * @see Collection.view\r\n    */\r\n    view() {\r\n        return View.wrap(this);\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    iterator() {\r\n        throw new Error('Native iterators are not supported yet.');\r\n    }\r\n    /**\r\n    * @see Set.iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        yield* this._elements;\r\n    }\r\n    /**\r\n    * @see Collection.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof NativeSet_NativeSet) {\r\n            if (other.size !== this._elements.size)\r\n                return false;\r\n            for (let index = 0, length = other.size; index < length; ++index) {\r\n                if (!this.has(other.get(index)))\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (NativeSet) {\r\n    /**\r\n    * Return a copy of a given native set.\r\n    *\r\n    * @param toCopy - A native set to copy.\r\n    */\r\n    function clone(toCopy) {\r\n        return toCopy == null ? toCopy : toCopy.clone();\r\n    }\r\n    NativeSet.clone = clone;\r\n    /**\r\n    * Instantiate a new set that wrap a set of the given type of instance.\r\n    *\r\n    * @return A new set that wrap a set of the given type of instance.\r\n    */\r\n    function any() {\r\n        return new NativeSet(new Set());\r\n    }\r\n    NativeSet.any = any;\r\n    /**\r\n    * Instantiate a new set that wrap a set of the given type of instance.\r\n    *\r\n    * @param set - The set to wrap.\r\n    *\r\n    * @return A new set that wrap a set of the given type of instance.\r\n    */\r\n    function wrap(set) {\r\n        return new NativeSet(set);\r\n    }\r\n    NativeSet.wrap = wrap;\r\n})(NativeSet_NativeSet || (NativeSet_NativeSet = {}));\r\n\n// CONCATENATED MODULE: ./src/set/Set.ts\n\r\n\r\n\r\nvar Set_Set;\r\n(function (Set) {\r\n    /**\r\n    * Return a shallow copy of the given set instance.\r\n    *\r\n    * @param toCopy - A set instance to shallow copy.\r\n    *\r\n    * @return A shallow copy of the given set instance.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy == null ? null : toCopy.clone();\r\n    }\r\n    Set.copy = copy;\r\n    /**\r\n    * Return a set that wrap an existing pack instance.\r\n    *\r\n    * @param pack - A pack instance to wrap into a set.\r\n    *\r\n    * @return A set that wrap the given pack instance.\r\n    */\r\n    function native() {\r\n        return NativeSet_NativeSet.any();\r\n    }\r\n    Set.native = native;\r\n    /**\r\n    * Return a set that wrap an existing pack instance.\r\n    *\r\n    * @param pack - A pack instance to wrap into a set.\r\n    *\r\n    * @return A set that wrap the given pack instance.\r\n    */\r\n    function fromPack(pack) {\r\n        return new PackSet_PackSet(pack);\r\n    }\r\n    Set.fromPack = fromPack;\r\n    function identifier(capacity) {\r\n        return new IdentifierSet_IdentifierSet(capacity);\r\n    }\r\n    Set.identifier = identifier;\r\n})(Set_Set || (Set_Set = {}));\r\n\n// CONCATENATED MODULE: ./src/set/PackSparseDenseSet.ts\n\r\n\r\nclass PackSparseDenseSet_PackSparseDenseSet {\r\n    /**\r\n    * Create a new empty sparse set based uppon the given pack.\r\n    *\r\n    * @param dense - An empty dense number pack.\r\n    */\r\n    constructor(dense) {\r\n        this._sparse = dense.clone();\r\n        this._dense = dense;\r\n    }\r\n    /**\r\n    * @see Collection.size\r\n    */\r\n    get size() {\r\n        return this._dense.size;\r\n    }\r\n    /**\r\n    * @see StaticCollection.capacity\r\n    */\r\n    get capacity() {\r\n        return this._dense.capacity;\r\n    }\r\n    /**\r\n    * @see Collection.has\r\n    */\r\n    has(element) {\r\n        const index = this._sparse.get(element);\r\n        return index < this._dense.size && this._dense.get(index) === element;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOf\r\n    */\r\n    indexOf(element) {\r\n        const index = this._sparse.get(element);\r\n        if (index < this._dense.size && this._dense.get(index) === element) {\r\n            return index;\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n    * @see Sequence.hasInSubsequence\r\n    */\r\n    hasInSubsequence(element, offset, size) {\r\n        const index = this.indexOf(element);\r\n        return index >= offset && index < offset + size;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOfInSubsequence\r\n    */\r\n    indexOfInSubsequence(element, offset, size) {\r\n        const index = this.indexOf(element);\r\n        return index >= offset && index < offset + size ? index : -1;\r\n    }\r\n    /**\r\n    * @see MutableSet.add\r\n    */\r\n    add(element) {\r\n        const index = this._sparse.get(element);\r\n        if (index >= this._dense.size || this._dense.get(index) !== element) {\r\n            this._sparse.set(element, this._dense.size);\r\n            this._dense.push(element);\r\n        }\r\n    }\r\n    /**\r\n    * @see MutableSet.delete\r\n    */\r\n    delete(element) {\r\n        const index = this._sparse.get(element);\r\n        if (index < this._dense.size && this._dense.get(index) === element) {\r\n            const last = this._dense.get(this._dense.size - 1);\r\n            this._dense.warp(index);\r\n            this._sparse.set(last, index);\r\n        }\r\n    }\r\n    /**\r\n    * @see Sequence.get\r\n    */\r\n    get(index) {\r\n        return this._dense.get(index);\r\n    }\r\n    /**\r\n    * @see MutableSet.copy\r\n    */\r\n    copy(toCopy) {\r\n        let max = 0;\r\n        for (let value of toCopy) {\r\n            max = Math.max(value, max);\r\n        }\r\n        if (max > this.capacity) {\r\n            this.reallocate(max + 1);\r\n        }\r\n        this.clear();\r\n        for (let value of toCopy) {\r\n            this.add(value);\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.clone\r\n    */\r\n    clone() {\r\n        const copy = new PackSparseDenseSet_PackSparseDenseSet(this._dense.clone());\r\n        copy._dense.copy(this._dense);\r\n        copy._sparse.copy(this._sparse);\r\n        return copy;\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.reallocate\r\n    */\r\n    reallocate(capacity) {\r\n        const oldDense = this._dense;\r\n        this._dense = this._dense.allocate(capacity);\r\n        this._sparse = this._sparse.allocate(capacity);\r\n        for (let index = 0, size = oldDense.size; index < size; ++index) {\r\n            if (oldDense.get(index) < capacity) {\r\n                this._sparse.set(oldDense.get(index), this._dense.size);\r\n                this._dense.push(oldDense.get(index));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.fit\r\n    */\r\n    fit() {\r\n        const max = this.max();\r\n        this._dense.reallocate(max + 1);\r\n        this._sparse.reallocate(max + 1);\r\n    }\r\n    /**\r\n    * Return the maximum element of this set.\r\n    *\r\n    * @return The maximum element of this set.\r\n    */\r\n    max() {\r\n        if (this._dense.size <= 0)\r\n            return undefined;\r\n        let result = this._dense.get(0);\r\n        for (let index = 1, length = this._dense.size; index < length; ++index) {\r\n            const cell = this._dense.get(index);\r\n            result = cell > result ? cell : result;\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n    * Return the minimum element of this set.\r\n    *\r\n    * @return The minimum element of this set.\r\n    */\r\n    min() {\r\n        if (this._dense.size <= 0)\r\n            return undefined;\r\n        let result = this._dense.get(0);\r\n        for (let index = 1, length = this._dense.size; index < length; ++index) {\r\n            const cell = this._dense.get(index);\r\n            result = cell < result ? cell : result;\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n    * @see MutableSet.clear\r\n    */\r\n    clear() {\r\n        this._dense.clear();\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get first() {\r\n        return this._dense.first;\r\n    }\r\n    /**\r\n    * @see Sequence.firstIndex\r\n    */\r\n    get firstIndex() {\r\n        return this._dense.firstIndex;\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get last() {\r\n        return this._dense.last;\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get lastIndex() {\r\n        return this._dense.lastIndex;\r\n    }\r\n    /**\r\n    * @see Collection.view\r\n    */\r\n    view() {\r\n        return SequenceView_SequenceView.wrap(this);\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    iterator() {\r\n        return this._dense.iterator();\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        for (let index = 0, length = this._dense.size; index < length; ++index) {\r\n            yield this._dense.get(index);\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof PackSparseDenseSet_PackSparseDenseSet) {\r\n            if (other.size !== this._dense.size)\r\n                return false;\r\n            for (let index = 0, length = other.size; index < length; ++index) {\r\n                if (!this.has(other.get(index)))\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (PackSparseDenseSet) {\r\n    /**\r\n    * Return a copy of a given sparse set.\r\n    *\r\n    * @param toCopy - A sparse set to copy.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy == null ? null : toCopy.clone();\r\n    }\r\n    PackSparseDenseSet.copy = copy;\r\n    /**\r\n    * Instantiate a uint32 sparse-dense set.\r\n    *\r\n    * @param capacity - Capacity of the sparse-dense set to instantiate.\r\n    *\r\n    * @return A new sparse-dense set of the given capacity.\r\n    */\r\n    function uint32(capacity) {\r\n        return new PackSparseDenseSet(Pack_Pack.uint32(capacity));\r\n    }\r\n    PackSparseDenseSet.uint32 = uint32;\r\n    /**\r\n    * Instantiate a uint16 sparse-dense set.\r\n    *\r\n    * @param capacity - Capacity of the sparse-dense set to instantiate.\r\n    *\r\n    * @return A new sparse-dense set of the given capacity.\r\n    */\r\n    function uint16(capacity) {\r\n        return new PackSparseDenseSet(Pack_Pack.uint16(capacity));\r\n    }\r\n    PackSparseDenseSet.uint16 = uint16;\r\n    /**\r\n    * Instantiate a uint8 sparse-dense set.\r\n    *\r\n    * @param capacity - Capacity of the sparse-dense set to instantiate.\r\n    *\r\n    * @return A new sparse-dense set of the given capacity.\r\n    */\r\n    function uint8(capacity) {\r\n        return new PackSparseDenseSet(Pack_Pack.uint8(capacity));\r\n    }\r\n    PackSparseDenseSet.uint8 = uint8;\r\n    /**\r\n    * Instantiate an array sparse-dense set.\r\n    *\r\n    * @param capacity - Capacity of the sparse-dense set to instantiate.\r\n    *\r\n    * @return A new sparse-dense set of the given capacity.\r\n    */\r\n    function any(capacity) {\r\n        return new PackSparseDenseSet(Pack_Pack.any(capacity));\r\n    }\r\n    PackSparseDenseSet.any = any;\r\n    /**\r\n    * Instantiate a sparse-dense set that can store numbers up to the given value.\r\n    *\r\n    * @param capacity - Maximum number to be able to store into the resulting sparse-dense set.\r\n    *\r\n    * @return A new sparse-dense set that can store numbers up to the given value.\r\n    */\r\n    function upTo(capacity) {\r\n        if (capacity <= 0xff) {\r\n            return new PackSparseDenseSet(Pack_Pack.uint8(capacity));\r\n        }\r\n        else if (capacity <= 0xffff) {\r\n            return new PackSparseDenseSet(Pack_Pack.uint16(capacity));\r\n        }\r\n        else {\r\n            return new PackSparseDenseSet(Pack_Pack.uint32(capacity));\r\n        }\r\n    }\r\n    PackSparseDenseSet.upTo = upTo;\r\n})(PackSparseDenseSet_PackSparseDenseSet || (PackSparseDenseSet_PackSparseDenseSet = {}));\r\n\n// CONCATENATED MODULE: ./src/set/SparseDenseSet.ts\n\r\nvar SparseDenseSet_SparseDenseSet;\r\n(function (SparseDenseSet) {\r\n    /**\r\n    * Copy an existing sparse-dense set instance.\r\n    *\r\n    * @param toCopy - An instance to copy.\r\n    *\r\n    * @return A copy of the given instance.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy == null ? null : toCopy.clone();\r\n    }\r\n    SparseDenseSet.copy = copy;\r\n    /**\r\n    * Instantiate a uint32 sparse-dense set.\r\n    *\r\n    * @param capacity - Capacity of the sparse-dense set to instantiate.\r\n    *\r\n    * @return A new sparse-dense set of the given capacity.\r\n    */\r\n    function uint32(capacity) {\r\n        return PackSparseDenseSet_PackSparseDenseSet.uint32(capacity);\r\n    }\r\n    SparseDenseSet.uint32 = uint32;\r\n    /**\r\n    * Instantiate a uint16 sparse-dense set.\r\n    *\r\n    * @param capacity - Capacity of the sparse-dense set to instantiate.\r\n    *\r\n    * @return A new sparse-dense set of the given capacity.\r\n    */\r\n    function uint16(capacity) {\r\n        return PackSparseDenseSet_PackSparseDenseSet.uint16(capacity);\r\n    }\r\n    SparseDenseSet.uint16 = uint16;\r\n    /**\r\n    * Instantiate a uint8 sparse-dense set.\r\n    *\r\n    * @param capacity - Capacity of the sparse-dense set to instantiate.\r\n    *\r\n    * @return A new sparse-dense set of the given capacity.\r\n    */\r\n    function uint8(capacity) {\r\n        return PackSparseDenseSet_PackSparseDenseSet.uint8(capacity);\r\n    }\r\n    SparseDenseSet.uint8 = uint8;\r\n    /**\r\n    * Instantiate an array sparse-dense set.\r\n    *\r\n    * @param capacity - Capacity of the sparse-dense set to instantiate.\r\n    *\r\n    * @return A new sparse-dense set of the given capacity.\r\n    */\r\n    function any(capacity) {\r\n        return PackSparseDenseSet_PackSparseDenseSet.any(capacity);\r\n    }\r\n    SparseDenseSet.any = any;\r\n    /**\r\n    * Instantiate a sparse-dense set that can store numbers up to the given value.\r\n    *\r\n    * @param capacity - Maximum number to be able to store into the resulting sparse-dense set.\r\n    *\r\n    * @return A new sparse-dense set that can store numbers up to the given value.\r\n    */\r\n    function upTo(capacity) {\r\n        return PackSparseDenseSet_PackSparseDenseSet.upTo(capacity);\r\n    }\r\n    SparseDenseSet.upTo = upTo;\r\n})(SparseDenseSet_SparseDenseSet || (SparseDenseSet_SparseDenseSet = {}));\r\n\n// CONCATENATED MODULE: ./src/set/index.ts\n\r\n\r\n\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/circular/CircularBufferIterator.ts\nclass CircularBufferIterator {\r\n    /**\r\n    * Instantiate a new random access iterator instance.\r\n    */\r\n    constructor() {\r\n        this.buffer = null;\r\n        this.index = 0;\r\n    }\r\n    /**\r\n    * @see Iterator.collection\r\n    */\r\n    collection() {\r\n        return this.buffer;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.hasNext\r\n    */\r\n    hasNext() {\r\n        return this.buffer && this.index < this.buffer.size;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.next\r\n    */\r\n    next() {\r\n        this.index += 1;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.forward\r\n    */\r\n    forward(count) {\r\n        this.index += count;\r\n    }\r\n    /**\r\n    * @see ForwardIterator.end\r\n    */\r\n    end() {\r\n        this.index = this.buffer ? this.buffer.lastIndex : 0;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.hasPrevious\r\n    */\r\n    hasPrevious() {\r\n        return this.buffer && this.index > 0;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.previous\r\n    */\r\n    previous() {\r\n        this.index -= 1;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.backward\r\n    */\r\n    backward(count) {\r\n        this.index -= count;\r\n    }\r\n    /**\r\n    * @see BackwardIterator.start\r\n    */\r\n    start() {\r\n        this.index = 0;\r\n    }\r\n    /**\r\n    * @see Iterator.get\r\n    */\r\n    get() {\r\n        return this.buffer.get(this.index);\r\n    }\r\n    /**\r\n    * @see Iterator.move\r\n    */\r\n    move(iterator) {\r\n        if (iterator instanceof CircularBufferIterator) {\r\n            this.buffer = iterator.buffer;\r\n            this.index = iterator.index;\r\n        }\r\n        else {\r\n            throw new Error('Trying to move to a location described by an unsupported type of ' +\r\n                'iterator');\r\n        }\r\n    }\r\n    /**\r\n    * @see BidirectionalIterator.go\r\n    */\r\n    go(index) {\r\n        this.index = index;\r\n    }\r\n    /**\r\n    * Shallow-copy the given instance.\r\n    *\r\n    * @param toCopy\r\n    */\r\n    copy(toCopy) {\r\n        this.buffer = toCopy.buffer;\r\n        this.index = toCopy.index;\r\n    }\r\n    /**\r\n    * @see Iterator.clone\r\n    */\r\n    clone() {\r\n        const copy = new CircularBufferIterator();\r\n        copy.copy(this);\r\n        return copy;\r\n    }\r\n    /**\r\n    * @see Iterator.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof CircularBufferIterator) {\r\n            return other.buffer === this.buffer &&\r\n                other.index === this.index;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (CircularBufferIterator) {\r\n    /**\r\n    * Return a shallow copy of the given iterator.\r\n    *\r\n    * A shallow-copy *b* of an iterator *a* is an instance that follow both\r\n    * properties :\r\n    *  - b !== a\r\n    *  - b.equals(a)\r\n    *\r\n    * @param toCopy - An iterator to copy.\r\n    *\r\n    * @return A shallow copy of the given iterator.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy.clone();\r\n    }\r\n    CircularBufferIterator.copy = copy;\r\n})(CircularBufferIterator || (CircularBufferIterator = {}));\r\n\n// CONCATENATED MODULE: ./src/circular/PackCircularBuffer.ts\n\r\n\r\n\r\n\r\nclass PackCircularBuffer_PackCircularBuffer {\r\n    /**\r\n    * Create a new circular buffer uppon an existing pack implementation.\r\n    *\r\n    * @param elements - A pack to use for storing this circular buffer elements.\r\n    * @param [offset = 0] - Number of element to skip from the start of the pack.\r\n    * @param [size = elements.size - offset] - Number of element to keep.\r\n    */\r\n    constructor(elements, offset = 0, size = elements.size - offset) {\r\n        this._elements = elements;\r\n        this._elements.size = elements.capacity;\r\n        this._start = offset;\r\n        this._size = size;\r\n    }\r\n    /**\r\n    * @see Collection.size\r\n    */\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    /**\r\n    * @see StaticCollection.capacity\r\n    */\r\n    get capacity() {\r\n        return this._elements.capacity;\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.reallocate\r\n    */\r\n    reallocate(capacity) {\r\n        const next = Pack_Pack.copy(this._elements);\r\n        next.reallocate(capacity);\r\n        const nextSize = Math.min(capacity, this._size);\r\n        for (let index = 0; index < capacity && index < this._size; ++index) {\r\n            next.set(nextSize - index - 1, this.get(this._size - index - 1));\r\n        }\r\n        this._elements = next;\r\n        this._size = nextSize;\r\n        this._start = 0;\r\n    }\r\n    /**\r\n    * @see ReallocableCollection.fit\r\n    */\r\n    fit() {\r\n        this.reallocate(this._size);\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get first() {\r\n        return this._size > 0 ? this._elements.get(this._start) : undefined;\r\n    }\r\n    /**\r\n    * @see Sequence.firstIndex\r\n    */\r\n    get firstIndex() {\r\n        return 0;\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get last() {\r\n        return this._size > 0 ? this._elements.get((this._start + this._size) % this._elements.capacity) : undefined;\r\n    }\r\n    /**\r\n    * @see Sequence.lastIndex\r\n    */\r\n    get lastIndex() {\r\n        return Math.max(this._size - 1, 0);\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    iterator() {\r\n        const result = new CircularBufferIterator();\r\n        result.buffer = this;\r\n        result.index = 0;\r\n        return result;\r\n    }\r\n    /**\r\n    * @see Sequence.get\r\n    */\r\n    get(index) {\r\n        return this._elements.get((this._start + index) % this._elements.capacity);\r\n    }\r\n    /**\r\n    * @see MutableSequence.fill\r\n    */\r\n    fill(element) {\r\n        for (let index = 0, size = this._size; index < size; ++index) {\r\n            this.set(index, element);\r\n        }\r\n    }\r\n    /**\r\n    * @see MutableSequence.pop\r\n    */\r\n    pop() {\r\n        const last = this._size - 1;\r\n        const result = this.get(last);\r\n        this.delete(last);\r\n        return result;\r\n    }\r\n    /**\r\n    * @see MutableSequence.shift\r\n    */\r\n    shift() {\r\n        const result = this.get(0);\r\n        this.delete(0);\r\n        return result;\r\n    }\r\n    /**\r\n    * @see MutableSequence.swap\r\n    */\r\n    swap(first, second) {\r\n        const rfirst = (this._start + first) % this._elements.capacity;\r\n        const rsecond = (this._start + second) % this._elements.capacity;\r\n        this._elements.swap(rfirst, rsecond);\r\n    }\r\n    /**\r\n    * @see MutableSequence.set\r\n    */\r\n    set(index, value) {\r\n        if (index >= this._elements.capacity) {\r\n            const offset = Math.min(index - this._elements.capacity + 1, this._size);\r\n            this._start = (this._start + offset) % this._elements.capacity;\r\n            this._size -= offset;\r\n            index = this._elements.capacity - 1;\r\n        }\r\n        while (index >= this._size) {\r\n            this.push(this._elements.constructor.DEFAULElement_VALUE);\r\n        }\r\n        this._elements.set((this._start + index) % this._elements.capacity, value);\r\n    }\r\n    /**\r\n    * @see MutableSequence.insert\r\n    */\r\n    insert(index, value) {\r\n        if (index >= this._size) {\r\n            this.set(index, value);\r\n        }\r\n        else {\r\n            if (this._size == this._elements.capacity) {\r\n                this._start = (this._start + 1) % this._elements.capacity;\r\n                --index;\r\n            }\r\n            else {\r\n                this._size += 1;\r\n            }\r\n            for (let cursor = this._size - 1; cursor > index; --cursor) {\r\n                this.set(cursor, this.get(cursor - 1));\r\n            }\r\n            this.set(index, value);\r\n        }\r\n    }\r\n    /**\r\n    * @see MutableSequence.push\r\n    */\r\n    push(value) {\r\n        if (this._size < this._elements.capacity) {\r\n            this._elements.set((this._start + this._size) % this._elements.capacity, value);\r\n            this._size += 1;\r\n        }\r\n        else {\r\n            this._elements.set(this._start, value);\r\n            this._start = (this._start + 1) % this._elements.capacity;\r\n        }\r\n    }\r\n    /**\r\n    * @see MutableSequence.unshift\r\n    */\r\n    unshift(value) {\r\n        this._start -= 1;\r\n        if (this._start < 0) {\r\n            this._start += this._elements.capacity;\r\n        }\r\n        this._elements.set(this._start, value);\r\n        if (this._size < this._elements.capacity) {\r\n            this._size += 1;\r\n        }\r\n    }\r\n    /**\r\n    * @see MutableSequence.delete\r\n    */\r\n    delete(index) {\r\n        for (let toMove = index; toMove > 0; --toMove) {\r\n            this.set(toMove, this.get(toMove - 1));\r\n        }\r\n        this._start = (this._start + 1) % this._elements.capacity;\r\n        this._size -= 1;\r\n    }\r\n    /**\r\n    * @see MutableSequence.deleteMany\r\n    */\r\n    deleteMany(from, size) {\r\n        const end = from + size;\r\n        for (let cursor = 0; cursor < from; ++cursor) {\r\n            this.set(end - cursor - 1, this.get(from - cursor - 1));\r\n        }\r\n        this._start = (this._start + size) % this._elements.capacity;\r\n        this._size -= size;\r\n    }\r\n    /**\r\n    * @see MutableSequence.warp\r\n    */\r\n    warp(index) {\r\n        this.set(index, this.get(0));\r\n        this._start = (this._start + 1) % this._elements.capacity;\r\n        this._size -= 1;\r\n    }\r\n    /**\r\n    * @see Collection.has\r\n    */\r\n    has(element) {\r\n        return this.indexOf(element) >= 0;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOf\r\n    */\r\n    indexOf(element) {\r\n        for (let index = 0, length = this._size; index < length; ++index) {\r\n            if (equals(this._elements.get((this._start + index) % this._elements.capacity), element)) {\r\n                return index;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n    * @see Sequence.hasInSubsequence\r\n    */\r\n    hasInSubsequence(element, offset, size) {\r\n        return this.indexOfInSubsequence(element, offset, size) >= 0;\r\n    }\r\n    /**\r\n    * @see Sequence.indexOfInSubsequence\r\n    */\r\n    indexOfInSubsequence(element, offset, size) {\r\n        for (let index = offset, length = offset + size; index < length; ++index) {\r\n            if (equals(this._elements.get((this._start + index) % this._elements.capacity), element)) {\r\n                return index;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n    * @see Sequence.concat\r\n    */\r\n    concat(toConcat) {\r\n        const firstIndex = toConcat.firstIndex;\r\n        const lastIndex = toConcat.lastIndex + 1;\r\n        for (let index = firstIndex; index < lastIndex; ++index) {\r\n            this.push(toConcat.get(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see Sequence.copy\r\n    */\r\n    copy(toCopy) {\r\n        if (toCopy.size > this.capacity) {\r\n            this.reallocate(toCopy.size);\r\n        }\r\n        this.clear();\r\n        for (let index = 0, length = toCopy.size; index < length; ++index) {\r\n            this.push(toCopy.get(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see CircularBuffer.clone\r\n    */\r\n    clone() {\r\n        return new PackCircularBuffer_PackCircularBuffer(this._elements.clone(), this._start, this._size);\r\n    }\r\n    /**\r\n    * @see Collection.view\r\n    */\r\n    view() {\r\n        return SequenceView_SequenceView.wrap(this);\r\n    }\r\n    /**\r\n    * @see CircularBuffer.clear\r\n    */\r\n    clear() {\r\n        this._start = 0;\r\n        this._size = 0;\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        for (let index = 0, length = this._size; index < length; ++index) {\r\n            yield this._elements.get((this._start + index) % this._elements.capacity);\r\n        }\r\n    }\r\n    /**\r\n    * @see Collection.equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof PackCircularBuffer_PackCircularBuffer) {\r\n            if (other.size !== this._size)\r\n                return false;\r\n            for (let index = 0, size = this._size; index < size; ++index) {\r\n                if (!equals(other.get(index), this.get(index)))\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n(function (PackCircularBuffer) {\r\n    /**\r\n    * Shallow copy an existing pack circular buffer instance.\r\n    *\r\n    * @param toCopy - An instance to shallow copy.\r\n    *\r\n    * @return A shallow copy of the given instance.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy == null ? null : toCopy.clone();\r\n    }\r\n    PackCircularBuffer.copy = copy;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a pack of the given type of instance.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new buffer that wrap a pack of the given type of instance.\r\n    */\r\n    function any(capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.any(capacity));\r\n    }\r\n    PackCircularBuffer.any = any;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a unsigned byte pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a unsigned byte pack of the given capacity.\r\n    */\r\n    function uint8(capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.uint8(capacity));\r\n    }\r\n    PackCircularBuffer.uint8 = uint8;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a unsigned short pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a unsigned short pack of the given capacity.\r\n    */\r\n    function uint16(capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.uint16(capacity));\r\n    }\r\n    PackCircularBuffer.uint16 = uint16;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a unsigned integer pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a unsigned integer pack of the given capacity.\r\n    */\r\n    function uint32(capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.uint32(capacity));\r\n    }\r\n    PackCircularBuffer.uint32 = uint32;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a byte pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a byte pack of the given capacity.\r\n    */\r\n    function int8(capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.int8(capacity));\r\n    }\r\n    PackCircularBuffer.int8 = int8;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a short pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a short pack of the given capacity.\r\n    */\r\n    function int16(capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.int16(capacity));\r\n    }\r\n    PackCircularBuffer.int16 = int16;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a integer pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a integer pack of the given capacity.\r\n    */\r\n    function int32(capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.int32(capacity));\r\n    }\r\n    PackCircularBuffer.int32 = int32;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a float pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a float pack of the given capacity.\r\n    */\r\n    function float32(capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.float32(capacity));\r\n    }\r\n    PackCircularBuffer.float32 = float32;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a double pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a double pack of the given capacity.\r\n    */\r\n    function float64(capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.float64(capacity));\r\n    }\r\n    PackCircularBuffer.float64 = float64;\r\n    /**\r\n    * Instantiate a new pack that wrap a unsigned integer pack that can store\r\n    * values in range [0, maximum] and that is of the given capacity.\r\n    *\r\n    * @param maximum - Maximum value that can be stored.\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new pack that wrap a unsigned integer pack that can store values\r\n    *         in range [0, maximum] and that is of the given capacity.\r\n    */\r\n    function unsignedUpTo(maximum, capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.unsignedUpTo(maximum, capacity));\r\n    }\r\n    PackCircularBuffer.unsignedUpTo = unsignedUpTo;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a signed integer pack that can store\r\n    * values in range [-maximum, maximum] and that is of the given capacity.\r\n    *\r\n    * @param maximum - Maximum value that can be stored.\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a signed integer pack that can store values\r\n    *         in range [-maximum, maximum] and that is of the given capacity.\r\n    */\r\n    function signedUpTo(maximum, capacity) {\r\n        return new PackCircularBuffer(Pack_Pack.signedUpTo(maximum, capacity));\r\n    }\r\n    PackCircularBuffer.signedUpTo = signedUpTo;\r\n})(PackCircularBuffer_PackCircularBuffer || (PackCircularBuffer_PackCircularBuffer = {}));\r\n\n// CONCATENATED MODULE: ./src/circular/CircularBuffer.ts\n\r\n\r\nvar CircularBuffer_CircularBuffer;\r\n(function (CircularBuffer) {\r\n    /**\r\n    * Return a shallow copy the given circular buffer.\r\n    *\r\n    * @param buffer - An existing buffer instance to copy.\r\n    *\r\n    * @return A shallow copy the given circular buffer.\r\n    */\r\n    function copy(buffer) {\r\n        return buffer == null ? null : buffer.clone();\r\n    }\r\n    CircularBuffer.copy = copy;\r\n    /**\r\n    * Return a circular buffer that wraps the given pack.\r\n    *\r\n    * @param pack - An existing pack instance to wrap.\r\n    *\r\n    * @return A circular buffer that wraps the given pack.\r\n    */\r\n    function fromPack(pack) {\r\n        return new PackCircularBuffer_PackCircularBuffer(pack);\r\n    }\r\n    CircularBuffer.fromPack = fromPack;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a pack of the given type of instance.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new buffer that wrap a pack of the given type of instance.\r\n    */\r\n    function any(capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.any(capacity));\r\n    }\r\n    CircularBuffer.any = any;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a unsigned byte pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a unsigned byte pack of the given capacity.\r\n    */\r\n    function uint8(capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.uint8(capacity));\r\n    }\r\n    CircularBuffer.uint8 = uint8;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a unsigned short pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a unsigned short pack of the given capacity.\r\n    */\r\n    function uint16(capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.uint16(capacity));\r\n    }\r\n    CircularBuffer.uint16 = uint16;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a unsigned integer pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a unsigned integer pack of the given capacity.\r\n    */\r\n    function uint32(capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.uint32(capacity));\r\n    }\r\n    CircularBuffer.uint32 = uint32;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a byte pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a byte pack of the given capacity.\r\n    */\r\n    function int8(capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.int8(capacity));\r\n    }\r\n    CircularBuffer.int8 = int8;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a short pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a short pack of the given capacity.\r\n    */\r\n    function int16(capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.int16(capacity));\r\n    }\r\n    CircularBuffer.int16 = int16;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a integer pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a integer pack of the given capacity.\r\n    */\r\n    function int32(capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.int32(capacity));\r\n    }\r\n    CircularBuffer.int32 = int32;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a float pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a float pack of the given capacity.\r\n    */\r\n    function float32(capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.float32(capacity));\r\n    }\r\n    CircularBuffer.float32 = float32;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a double pack of the given capacity.\r\n    *\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a double pack of the given capacity.\r\n    */\r\n    function float64(capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.float64(capacity));\r\n    }\r\n    CircularBuffer.float64 = float64;\r\n    /**\r\n    * Instantiate a new pack that wrap a unsigned integer pack that can store\r\n    * values in range [0, maximum] and that is of the given capacity.\r\n    *\r\n    * @param maximum - Maximum value that can be stored.\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new pack that wrap a unsigned integer pack that can store values\r\n    *         in range [0, maximum] and that is of the given capacity.\r\n    */\r\n    function unsignedUpTo(maximum, capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.unsignedUpTo(maximum, capacity));\r\n    }\r\n    CircularBuffer.unsignedUpTo = unsignedUpTo;\r\n    /**\r\n    * Instantiate a new circular buffer that wrap a signed integer pack that can store\r\n    * values in range [-maximum, maximum] and that is of the given capacity.\r\n    *\r\n    * @param maximum - Maximum value that can be stored.\r\n    * @param capacity - Capacity of the pack to allocate.\r\n    *\r\n    * @return A new circular buffer that wrap a signed integer pack that can store values\r\n    *         in range [-maximum, maximum] and that is of the given capacity.\r\n    */\r\n    function signedUpTo(maximum, capacity) {\r\n        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.signedUpTo(maximum, capacity));\r\n    }\r\n    CircularBuffer.signedUpTo = signedUpTo;\r\n})(CircularBuffer_CircularBuffer || (CircularBuffer_CircularBuffer = {}));\r\n\n// CONCATENATED MODULE: ./src/circular/index.ts\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/heap/PackHeap.ts\n\r\n\r\n/**\r\n* A heap based uppon a pack collection.\r\n*/\r\nclass PackHeap_PackHeap {\r\n    /**\r\n    * Instantiate a new empty heap.\r\n    *\r\n    * @param elements - Pack to use for storing the heap.\r\n    * @param comparator - A comparator to use for sorting the heap.\r\n    */\r\n    constructor(elements, comparator) {\r\n        this._comparator = comparator;\r\n        this._elements = elements;\r\n    }\r\n    /**\r\n    * @see Heap#next\r\n    */\r\n    next() {\r\n        const result = this._elements.get(0);\r\n        this.delete(0);\r\n        return result;\r\n    }\r\n    /**\r\n    * @see Heap#add\r\n    */\r\n    push(value) {\r\n        this._elements.push(value);\r\n        this.upliftAsPossible(this._elements.size - 1);\r\n    }\r\n    /**\r\n    * Moves the value at the given index up to the root of the tree while the\r\n    * value violate the order of the heap.\r\n    *\r\n    * @param index - Index of the value to move up.\r\n    *\r\n    * @return The new index of the given value.\r\n    */\r\n    upliftAsPossible(index) {\r\n        let cell = index;\r\n        let parent = (cell - 1) >> 1;\r\n        while (cell > 0 && this.compare(cell, parent) > 0) {\r\n            this._elements.swap(cell, parent);\r\n            cell = parent;\r\n            parent = (cell - 1) >> 1;\r\n        }\r\n        return cell;\r\n    }\r\n    /**\r\n    * Moves the value at the given index down to the leafs of the tree while the\r\n    * value violate the order of the heap.\r\n    *\r\n    * @param index - Index of the value to move down.\r\n    *\r\n    * @return The new index of the given value.\r\n    */\r\n    diveAsPossible(index) {\r\n        const size = this._elements.size;\r\n        let cell = index;\r\n        let next = (cell << 1) + 1;\r\n        while (next < size) {\r\n            if (next + 1 < size && this.compare(cell, next + 1) < 0) {\r\n                if (this.compare(next, next + 1) < 0) {\r\n                    this._elements.swap(cell, next + 1);\r\n                    cell = next + 1;\r\n                }\r\n                else {\r\n                    this._elements.swap(cell, next);\r\n                    cell = next;\r\n                }\r\n            }\r\n            else if (this.compare(cell, next) < 0) {\r\n                this._elements.swap(cell, next);\r\n                cell = next;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            next = (cell << 1) + 1;\r\n        }\r\n        return cell;\r\n    }\r\n    /**\r\n    * @see Heap#delete\r\n    */\r\n    delete(index) {\r\n        const size = this._elements.size;\r\n        this._elements.warp(index);\r\n        if (index < size) {\r\n            this.diveAsPossible(this.upliftAsPossible(index));\r\n        }\r\n    }\r\n    /**\r\n    * @see Heap#compare\r\n    */\r\n    compare(left, right) {\r\n        return this._comparator(this._elements.get(left), this._elements.get(right));\r\n    }\r\n    /**\r\n    * @see Sequence#get\r\n    */\r\n    get(index) {\r\n        return this._elements.get(index);\r\n    }\r\n    /**\r\n    * @see Sequence#indexOf\r\n    */\r\n    indexOf(value) {\r\n        return this._elements.indexOf(value);\r\n    }\r\n    /**\r\n    * @see Sequence.hasInSubsequence\r\n    */\r\n    hasInSubsequence(element, offset, size) {\r\n        return this._elements.hasInSubsequence(element, offset, size);\r\n    }\r\n    /**\r\n    * @see Sequence.indexOfInSubsequence\r\n    */\r\n    indexOfInSubsequence(element, offset, size) {\r\n        return this._elements.indexOfInSubsequence(element, offset, size);\r\n    }\r\n    /**\r\n    * @see Collection#has\r\n    */\r\n    has(value) {\r\n        return this._elements.has(value);\r\n    }\r\n    /**\r\n    * @see Sequence.first\r\n    */\r\n    get first() {\r\n        return this._elements.first;\r\n    }\r\n    /**\r\n    * @see Sequence.firstIndex\r\n    */\r\n    get firstIndex() {\r\n        return this._elements.firstIndex;\r\n    }\r\n    /**\r\n    * @see Sequence.last\r\n    */\r\n    get last() {\r\n        return this._elements.last;\r\n    }\r\n    /**\r\n    * @see Sequence.lastIndex\r\n    */\r\n    get lastIndex() {\r\n        return this._elements.lastIndex;\r\n    }\r\n    /**\r\n    * @see Collection.iterator\r\n    */\r\n    iterator() {\r\n        return this._elements.iterator();\r\n    }\r\n    /**\r\n    * @see Collection#get size\r\n    */\r\n    get size() {\r\n        return this._elements.size;\r\n    }\r\n    /**\r\n    * @see Heap#get comparator\r\n    */\r\n    get comparator() {\r\n        return this._comparator;\r\n    }\r\n    /**\r\n    * @see StaticCollection#get capacity\r\n    */\r\n    get capacity() {\r\n        return this._elements.capacity;\r\n    }\r\n    /**\r\n    * @see ReallocableCollection#reallocate\r\n    */\r\n    reallocate(capacity) {\r\n        this._elements.reallocate(capacity);\r\n    }\r\n    /**\r\n    * @see ReallocableCollection#fit\r\n    */\r\n    fit() {\r\n        this._elements.fit();\r\n    }\r\n    /**\r\n    * @see Heap#clear\r\n    */\r\n    clear() {\r\n        this._elements.clear();\r\n    }\r\n    /**\r\n    * @see Collection#clone\r\n    */\r\n    clone() {\r\n        return new PackHeap_PackHeap(Pack_Pack.copy(this._elements), this._comparator);\r\n    }\r\n    /**\r\n    * @see Collection.view\r\n    */\r\n    view() {\r\n        return SequenceView_SequenceView.wrap(this);\r\n    }\r\n    /**\r\n    * @see Collection#equals\r\n    */\r\n    equals(other) {\r\n        if (other == null)\r\n            return false;\r\n        if (other === this)\r\n            return true;\r\n        if (other instanceof PackHeap_PackHeap) {\r\n            if (this.size !== other.size)\r\n                return false;\r\n            for (let index = 0, size = this.size; index < size; ++index) {\r\n                if (this.get(index) !== other.get(index)) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n    * @see ReallocableCollection#iterator\r\n    */\r\n    *[Symbol.iterator]() {\r\n        yield* this._elements;\r\n    }\r\n}\r\n(function (PackHeap) {\r\n    function defaultNumberComparator(a, b) {\r\n        return a - b;\r\n    }\r\n    /**\r\n    * Copy an existing heap instance.\r\n    *\r\n    * @param toCopy - An heap instance to copy.\r\n    *\r\n    * @return A copy of the given heap instance.\r\n    */\r\n    function copy(toCopy) {\r\n        return toCopy == null ? null : toCopy.clone();\r\n    }\r\n    PackHeap.copy = copy;\r\n    function any(capacity, comparator) {\r\n        return new PackHeap(Pack_Pack.any(capacity), comparator);\r\n    }\r\n    PackHeap.any = any;\r\n    function uint8(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap(Pack_Pack.uint8(capacity), comparator);\r\n    }\r\n    PackHeap.uint8 = uint8;\r\n    function uint16(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap(Pack_Pack.uint16(capacity), comparator);\r\n    }\r\n    PackHeap.uint16 = uint16;\r\n    function uint32(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap(Pack_Pack.uint32(capacity), comparator);\r\n    }\r\n    PackHeap.uint32 = uint32;\r\n    function int8(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap(Pack_Pack.int8(capacity), comparator);\r\n    }\r\n    PackHeap.int8 = int8;\r\n    function int16(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap(Pack_Pack.int16(capacity), comparator);\r\n    }\r\n    PackHeap.int16 = int16;\r\n    function int32(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap(Pack_Pack.int32(capacity), comparator);\r\n    }\r\n    PackHeap.int32 = int32;\r\n    function float32(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap(Pack_Pack.float32(capacity), comparator);\r\n    }\r\n    PackHeap.float32 = float32;\r\n    function float64(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap(Pack_Pack.float64(capacity), comparator);\r\n    }\r\n    PackHeap.float64 = float64;\r\n    function fromPack(pack, comparator) {\r\n        return new PackHeap(pack, comparator);\r\n    }\r\n    PackHeap.fromPack = fromPack;\r\n})(PackHeap_PackHeap || (PackHeap_PackHeap = {}));\r\n\n// CONCATENATED MODULE: ./src/heap/Heap.ts\n\r\n\r\nvar Heap_Heap;\r\n(function (Heap) {\r\n    function defaultNumberComparator(a, b) {\r\n        return a - b;\r\n    }\r\n    function copy(pack) {\r\n        return pack == null ? null : pack.clone();\r\n    }\r\n    Heap.copy = copy;\r\n    function any(capacity, comparator) {\r\n        return new PackHeap_PackHeap(Pack_Pack.any(capacity), comparator);\r\n    }\r\n    Heap.any = any;\r\n    function uint8(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap_PackHeap(Pack_Pack.uint8(capacity), comparator);\r\n    }\r\n    Heap.uint8 = uint8;\r\n    function uint16(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap_PackHeap(Pack_Pack.uint16(capacity), comparator);\r\n    }\r\n    Heap.uint16 = uint16;\r\n    function uint32(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap_PackHeap(Pack_Pack.uint32(capacity), comparator);\r\n    }\r\n    Heap.uint32 = uint32;\r\n    function int8(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap_PackHeap(Pack_Pack.int8(capacity), comparator);\r\n    }\r\n    Heap.int8 = int8;\r\n    function int16(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap_PackHeap(Pack_Pack.int16(capacity), comparator);\r\n    }\r\n    Heap.int16 = int16;\r\n    function int32(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap_PackHeap(Pack_Pack.int32(capacity), comparator);\r\n    }\r\n    Heap.int32 = int32;\r\n    function float32(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap_PackHeap(Pack_Pack.float32(capacity), comparator);\r\n    }\r\n    Heap.float32 = float32;\r\n    function float64(capacity, comparator = defaultNumberComparator) {\r\n        return new PackHeap_PackHeap(Pack_Pack.float64(capacity), comparator);\r\n    }\r\n    Heap.float64 = float64;\r\n    function fromPack(pack, comparator) {\r\n        return new PackHeap_PackHeap(pack, comparator);\r\n    }\r\n    Heap.fromPack = fromPack;\r\n})(Heap_Heap || (Heap_Heap = {}));\r\n\n// CONCATENATED MODULE: ./src/heap/index.ts\n\r\n\r\n\n// CONCATENATED MODULE: ./src/native/index.ts\n\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/view/index.ts\n\r\n\r\n\n// CONCATENATED MODULE: ./src/index.ts\n/* concated harmony reexport Collection */__webpack_require__.d(__webpack_exports__, \"Collection\", function() { return Collection_Collection; });\n/* concated harmony reexport Sequence */__webpack_require__.d(__webpack_exports__, \"Sequence\", function() { return Sequence_Sequence; });\n/* concated harmony reexport SequenceIterator */__webpack_require__.d(__webpack_exports__, \"SequenceIterator\", function() { return SequenceIterator; });\n/* concated harmony reexport bissect */__webpack_require__.d(__webpack_exports__, \"bissect\", function() { return bissect; });\n/* concated harmony reexport equals */__webpack_require__.d(__webpack_exports__, \"equals\", function() { return equals; });\n/* concated harmony reexport quicksort */__webpack_require__.d(__webpack_exports__, \"quicksort\", function() { return quicksort; });\n/* concated harmony reexport Pack */__webpack_require__.d(__webpack_exports__, \"Pack\", function() { return Pack_Pack; });\n/* concated harmony reexport ArrayPack */__webpack_require__.d(__webpack_exports__, \"ArrayPack\", function() { return ArrayPack_ArrayPack; });\n/* concated harmony reexport BufferPack */__webpack_require__.d(__webpack_exports__, \"BufferPack\", function() { return BufferPack_BufferPack; });\n/* concated harmony reexport InstancePack */__webpack_require__.d(__webpack_exports__, \"InstancePack\", function() { return InstancePack_InstancePack; });\n/* concated harmony reexport PackIterator */__webpack_require__.d(__webpack_exports__, \"PackIterator\", function() { return PackIterator; });\n/* concated harmony reexport Set */__webpack_require__.d(__webpack_exports__, \"Set\", function() { return Set_Set; });\n/* concated harmony reexport PackSet */__webpack_require__.d(__webpack_exports__, \"PackSet\", function() { return PackSet_PackSet; });\n/* concated harmony reexport SparseDenseSet */__webpack_require__.d(__webpack_exports__, \"SparseDenseSet\", function() { return SparseDenseSet_SparseDenseSet; });\n/* concated harmony reexport PackSparseDenseSet */__webpack_require__.d(__webpack_exports__, \"PackSparseDenseSet\", function() { return PackSparseDenseSet_PackSparseDenseSet; });\n/* concated harmony reexport IdentifierSet */__webpack_require__.d(__webpack_exports__, \"IdentifierSet\", function() { return IdentifierSet_IdentifierSet; });\n/* concated harmony reexport NativeSet */__webpack_require__.d(__webpack_exports__, \"NativeSet\", function() { return NativeSet_NativeSet; });\n/* concated harmony reexport CircularBuffer */__webpack_require__.d(__webpack_exports__, \"CircularBuffer\", function() { return CircularBuffer_CircularBuffer; });\n/* concated harmony reexport PackCircularBuffer */__webpack_require__.d(__webpack_exports__, \"PackCircularBuffer\", function() { return PackCircularBuffer_PackCircularBuffer; });\n/* concated harmony reexport CircularBufferIterator */__webpack_require__.d(__webpack_exports__, \"CircularBufferIterator\", function() { return CircularBufferIterator; });\n/* concated harmony reexport Heap */__webpack_require__.d(__webpack_exports__, \"Heap\", function() { return Heap_Heap; });\n/* concated harmony reexport PackHeap */__webpack_require__.d(__webpack_exports__, \"PackHeap\", function() { return PackHeap_PackHeap; });\n/* concated harmony reexport Buffer */__webpack_require__.d(__webpack_exports__, \"Buffer\", function() { return Buffer_Buffer; });\n/* concated harmony reexport FloatBuffer */__webpack_require__.d(__webpack_exports__, \"FloatBuffer\", function() { return FloatBuffer; });\n/* concated harmony reexport IntegerBuffer */__webpack_require__.d(__webpack_exports__, \"IntegerBuffer\", function() { return IntegerBuffer; });\n/* concated harmony reexport UnsignedIntegerBuffer */__webpack_require__.d(__webpack_exports__, \"UnsignedIntegerBuffer\", function() { return UnsignedIntegerBuffer; });\n/* concated harmony reexport View */__webpack_require__.d(__webpack_exports__, \"View\", function() { return View; });\n/* concated harmony reexport SequenceView */__webpack_require__.d(__webpack_exports__, \"SequenceView\", function() { return SequenceView_SequenceView; });\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n/***/ })\n/******/ ]);\n});","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","\n    (window.__NEXT_P=window.__NEXT_P||[]).push([\"/\", function() {\n      var mod = require(\"D:\\\\development\\\\rpg\\\\ruleset-next\\\\pages\\\\index.tsx\")\n      if(module.hot) {\n        module.hot.accept(\"D:\\\\development\\\\rpg\\\\ruleset-next\\\\pages\\\\index.tsx\", function() {\n          if(!next.router.components[\"/\"]) return\n          var updatedPage = require(\"D:\\\\development\\\\rpg\\\\ruleset-next\\\\pages\\\\index.tsx\")\n          next.router.update(\"/\", updatedPage)\n        })\n      }\n      return mod\n    }]);\n  ","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __importStar(require(\"react\"));\nexports.AmpStateContext = React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n    exports.AmpStateContext.displayName = 'AmpStateContext';\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst amp_context_1 = require(\"./amp-context\");\nfunction isInAmpMode({ ampFirst = false, hybrid = false, hasQuery = false, } = {}) {\n    return ampFirst || (hybrid && hasQuery);\n}\nexports.isInAmpMode = isInAmpMode;\nfunction useAmp() {\n    // Don't assign the context value to a variable to save bytes\n    return isInAmpMode(react_1.default.useContext(amp_context_1.AmpStateContext));\n}\nexports.useAmp = useAmp;\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __importStar(require(\"react\"));\nexports.HeadManagerContext = React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n    exports.HeadManagerContext.displayName = 'HeadManagerContext';\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst side_effect_1 = __importDefault(require(\"./side-effect\"));\nconst amp_context_1 = require(\"./amp-context\");\nconst head_manager_context_1 = require(\"./head-manager-context\");\nconst amp_1 = require(\"./amp\");\nfunction defaultHead(inAmpMode = false) {\n    const head = [react_1.default.createElement(\"meta\", { charSet: \"utf-8\" })];\n    if (!inAmpMode) {\n        head.push(react_1.default.createElement(\"meta\", { name: \"viewport\", content: \"width=device-width\" }));\n    }\n    return head;\n}\nexports.defaultHead = defaultHead;\nfunction onlyReactElement(list, child) {\n    // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n    if (typeof child === 'string' || typeof child === 'number') {\n        return list;\n    }\n    // Adds support for React.Fragment\n    if (child.type === react_1.default.Fragment) {\n        return list.concat(react_1.default.Children.toArray(child.props.children).reduce((fragmentList, fragmentChild) => {\n            if (typeof fragmentChild === 'string' ||\n                typeof fragmentChild === 'number') {\n                return fragmentList;\n            }\n            return fragmentList.concat(fragmentChild);\n        }, []));\n    }\n    return list.concat(child);\n}\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp'];\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n    const keys = new Set();\n    const tags = new Set();\n    const metaTypes = new Set();\n    const metaCategories = {};\n    return (h) => {\n        let unique = true;\n        if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n            const key = h.key.slice(h.key.indexOf('$') + 1);\n            if (keys.has(key)) {\n                unique = false;\n            }\n            else {\n                keys.add(key);\n            }\n        }\n        // eslint-disable-next-line default-case\n        switch (h.type) {\n            case 'title':\n            case 'base':\n                if (tags.has(h.type)) {\n                    unique = false;\n                }\n                else {\n                    tags.add(h.type);\n                }\n                break;\n            case 'meta':\n                for (let i = 0, len = METATYPES.length; i < len; i++) {\n                    const metatype = METATYPES[i];\n                    if (!h.props.hasOwnProperty(metatype))\n                        continue;\n                    if (metatype === 'charSet') {\n                        if (metaTypes.has(metatype)) {\n                            unique = false;\n                        }\n                        else {\n                            metaTypes.add(metatype);\n                        }\n                    }\n                    else {\n                        const category = h.props[metatype];\n                        const categories = metaCategories[metatype] || new Set();\n                        if (categories.has(category)) {\n                            unique = false;\n                        }\n                        else {\n                            categories.add(category);\n                            metaCategories[metatype] = categories;\n                        }\n                    }\n                }\n                break;\n        }\n        return unique;\n    };\n}\n/**\n *\n * @param headElements List of multiple <Head> instances\n */\nfunction reduceComponents(headElements, props) {\n    return headElements\n        .reduce((list, headElement) => {\n        const headElementChildren = react_1.default.Children.toArray(headElement.props.children);\n        return list.concat(headElementChildren);\n    }, [])\n        .reduce(onlyReactElement, [])\n        .reverse()\n        .concat(defaultHead(props.inAmpMode))\n        .filter(unique())\n        .reverse()\n        .map((c, i) => {\n        const key = c.key || i;\n        return react_1.default.cloneElement(c, { key });\n    });\n}\nconst Effect = side_effect_1.default();\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }) {\n    return (react_1.default.createElement(amp_context_1.AmpStateContext.Consumer, null, ampState => (react_1.default.createElement(head_manager_context_1.HeadManagerContext.Consumer, null, updateHead => (react_1.default.createElement(Effect, { reduceComponentsToState: reduceComponents, handleStateChange: updateHead, inAmpMode: amp_1.isInAmpMode(ampState) }, children))))));\n}\nHead.rewind = Effect.rewind;\nexports.default = Head;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = require(\"react\");\nconst isServer = typeof window === 'undefined';\nexports.default = () => {\n    const mountedInstances = new Set();\n    let state;\n    function emitChange(component) {\n        state = component.props.reduceComponentsToState([...mountedInstances], component.props);\n        if (component.props.handleStateChange) {\n            component.props.handleStateChange(state);\n        }\n    }\n    return class extends react_1.Component {\n        // Used when server rendering\n        static rewind() {\n            const recordedState = state;\n            state = undefined;\n            mountedInstances.clear();\n            return recordedState;\n        }\n        constructor(props) {\n            super(props);\n            if (isServer) {\n                mountedInstances.add(this);\n                emitChange(this);\n            }\n        }\n        componentDidMount() {\n            mountedInstances.add(this);\n            emitChange(this);\n        }\n        componentDidUpdate() {\n            emitChange(this);\n        }\n        componentWillUnmount() {\n            mountedInstances.delete(this);\n            emitChange(this);\n        }\n        render() {\n            return null;\n        }\n    };\n};\n","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","module.exports = (__webpack_require__(/*! dll-reference dll_2adc2403d89adc16ead0 */ \"dll-reference dll_2adc2403d89adc16ead0\"))(\"./node_modules/react/index.js\");","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import React from 'react'\nimport { ReactElement } from 'react'\n\nimport Head from 'next/head'\n\nimport { Document } from '../components/Document'\nimport { Content } from '../content/Content'\n\nexport default function index (props : any) : ReactElement {\n  return (\n    <div className='application'>\n      <Head>\n        <title>Corvus</title>\n        <meta name='viewport' content='initial-scale=1.0, width=device-width' />\n      </Head>\n\n      <div className='application-content'>\n        <Document>\n          <div className='container'>\n            <div className='row'>\n              <div className='col'>\n                <Content />\n              </div>\n            </div>\n          </div>\n        </Document>\n      </div>\n    </div>\n  )\n}\n","import { IdentifierSet } from '@cedric-demongivert/gl-tool-collection'\r\nimport { Pack } from '@cedric-demongivert/gl-tool-collection'\r\nimport { PackSet } from '@cedric-demongivert/gl-tool-collection'\r\nimport { Sequence } from '@cedric-demongivert/gl-tool-collection'\r\n\r\nimport { Subject } from './Subject'\r\n\r\nexport class Document {\r\n  /**\r\n  * A set of allocated and available identifiers of the document.\r\n  */\r\n  private _identifiers : IdentifierSet\r\n\r\n  /**\r\n  * A set of subjects of the document.\r\n  */\r\n  private _subjects : Pack<Subject>\r\n\r\n  /**\r\n  * An ordered set of each subject that are a root of this document.\r\n  */\r\n  private _roots : PackSet<number>\r\n\r\n  /**\r\n  * A readonly view of the set of subjects of the document.\r\n  */\r\n  public readonly subjects : Sequence<Subject>\r\n\r\n  /**\r\n  * A readonly view of the set of subjects of the document.\r\n  */\r\n  public readonly roots : Sequence<number>\r\n\r\n  /**\r\n  * Instantiate a new empty document model.\r\n  *\r\n  * @param capacity - The capacity of the model to instantiate in subjects.\r\n  */\r\n  public constructor (capacity : number = 16) {\r\n    this._identifiers = IdentifierSet.allocate(capacity)\r\n    this._subjects    = Pack.any(capacity)\r\n    this._roots       = PackSet.int32(16)\r\n    this.subjects     = this._subjects.view()\r\n    this.roots        = this._roots.view()\r\n  }\r\n\r\n  /**\r\n  * Create and append a new subject into this document.\r\n  *\r\n  * @param [parent = -1] - Identifier of the parent subject of the subject to create.\r\n  *\r\n  * @return The new subject that was created.\r\n  */\r\n  public create (parent : number = -1) : Subject {\r\n    if (parent == null) {\r\n      return this.push(Subject.EMPTY)\r\n    } else {\r\n      const subject : Subject = new Subject()\r\n      subject.parent = parent\r\n      return this.push(subject)\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Define the name of a subject.\r\n  *\r\n  * @param subject - Identifier of the subject to update.\r\n  * @param name - The name to assign to the given subject.\r\n  *\r\n  * @throw Error If the given subject identifier is not assigned to an instance.\r\n  * @throw Error If the subject to update already has a name.\r\n  */\r\n  public defineName (subject : number, name : string) : void {\r\n    const index : number = this._identifiers.indexOf(subject)\r\n\r\n    if (index < 0) {\r\n      throw new Error(\r\n        'Unable to define the name of the subject #' + subject + ' to \"' +\r\n        name + '\" because no subject with the given identifier exists.'\r\n      )\r\n    } else {\r\n      const newSubject : Subject = this._subjects.get(index).clone()\r\n\r\n      if (newSubject.name == null) {\r\n        newSubject.name = name\r\n        this._subjects.set(index, newSubject)\r\n      } else {\r\n        throw new Error(\r\n          'Unable to define the name of the subject #' + subject + ' to \"' +\r\n          name + '\" because the subject already have a name that is \"' +\r\n          newSubject.name + '\".'\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Update the name of a subject.\r\n  *\r\n  * @param subject - Identifier of the subject to update.\r\n  * @param name - The name to assign to the given subject.\r\n  *\r\n  * @throw Error If the given subject identifier is not assigned to an instance.\r\n  * @throw Error If the subject to update does not already have a name.\r\n  */\r\n  public updateName (subject : number, name : string) : void {\r\n    const index : number = this._identifiers.indexOf(subject)\r\n\r\n    if (index < 0) {\r\n      throw new Error(\r\n        'Unable to update the name of the subject #' + subject + ' to \"' +\r\n        name + '\" because no subject with the given identifier exists.'\r\n      )\r\n    } else {\r\n      const newSubject : Subject = this._subjects.get(index).clone()\r\n\r\n      if (newSubject.name == null) {\r\n        throw new Error(\r\n          'Unable to update the name of the subject #' + subject + ' to \"' +\r\n          name + '\" because the subject does not already have a name.'\r\n        )\r\n      } else {\r\n        newSubject.name = name\r\n        this._subjects.set(index, newSubject)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Delete the name of a subject.\r\n  *\r\n  * @param subject - Identifier of the subject to update.\r\n  *\r\n  * @throw Error If the given subject identifier is not assigned to an instance.\r\n  * @throw Error If the subject to update does not already have a name.\r\n  */\r\n  public deleteName (subject : number) : void {\r\n    const index : number = this._identifiers.indexOf(subject)\r\n\r\n    if (index < 0) {\r\n      throw new Error(\r\n        'Unable to delete the name of the subject #' + subject +\r\n        ' because no subject with the given identifier exists.'\r\n      )\r\n    } else {\r\n      const newSubject : Subject = this._subjects.get(index).clone()\r\n\r\n      if (newSubject.name == null) {\r\n        throw new Error(\r\n          'Unable to delete the name of the subject #' + subject +\r\n          ' because the subject does not already have a name.'\r\n        )\r\n      } else {\r\n        newSubject.name = null\r\n        this._subjects.set(index, newSubject)\r\n      }\r\n    }\r\n  }\r\n\r\n  public defineKey (subject : number, key : string) : void {\r\n    const index : number = this._identifiers.indexOf(subject)\r\n\r\n    if (index < 0) {\r\n      throw new Error(\r\n        'Unable to define the key of the subject #' + subject + ' to \"' +\r\n        key + '\" because no subject with the given identifier exists.'\r\n      )\r\n    } else {\r\n      const newSubject : Subject = this._subjects.get(index).clone()\r\n\r\n      if (newSubject.key == null) {\r\n        newSubject.key = key\r\n        this._subjects.set(index, newSubject)\r\n      } else {\r\n        throw new Error(\r\n          'Unable to define the key of the subject #' + subject + ' to \"' +\r\n          key + '\" because the subject already have a key that is \"' +\r\n          newSubject.key + '\".'\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  public updateKey (subject : number, key : string) : void {\r\n    const index : number = this._identifiers.indexOf(subject)\r\n\r\n    if (index < 0) {\r\n      throw new Error(\r\n        'Unable to update the key of the subject #' + subject + ' to \"' +\r\n        key + '\" because no subject with the given identifier exists.'\r\n      )\r\n    } else {\r\n      const newSubject : Subject = this._subjects.get(index).clone()\r\n\r\n      if (newSubject.key == null) {\r\n        throw new Error(\r\n          'Unable to update the key of the subject #' + subject + ' to \"' +\r\n          key + '\" because the subject does not already have a key.'\r\n        )\r\n      } else {\r\n        newSubject.key = key\r\n        this._subjects.set(index, newSubject)\r\n      }\r\n    }\r\n  }\r\n\r\n  public deleteKey (subject : number) : void {\r\n    const index : number = this._identifiers.indexOf(subject)\r\n\r\n    if (index < 0) {\r\n      throw new Error(\r\n        'Unable to delete the key of the subject #' + subject +\r\n        ' because no subject with the given identifier exists.'\r\n      )\r\n    } else {\r\n      const newSubject : Subject = this._subjects.get(index).clone()\r\n\r\n      if (newSubject.key == null) {\r\n        throw new Error(\r\n          'Unable to delete the key of the subject #' + subject +\r\n          ' because the subject does not already have a key.'\r\n        )\r\n      } else {\r\n        newSubject.key = null\r\n        this._subjects.set(index, newSubject)\r\n      }\r\n    }\r\n  }\r\n\r\n  public getParent (subject : Subject) : Subject {\r\n    return this.get(subject.parent)\r\n  }\r\n\r\n  public * walkInChildren (\r\n    subjects : Iterable<number | Subject> = this._roots\r\n  ) : Iterator<Subject> {\r\n    const stack : Subject[] = []\r\n\r\n    for (const subject of subjects) {\r\n      if (typeof subject === 'number') {\r\n        stack.unshift(this.get(subject))\r\n      } else {\r\n        stack.unshift(subject)\r\n      }\r\n    }\r\n\r\n    const cursors : number[] = [0]\r\n\r\n    while (stack.length > 0 || stack.length > 20) {\r\n      const current : Subject = stack[stack.length - 1]\r\n      const cursor : number = cursors[cursors.length - 1]\r\n\r\n      if (cursor < current.children.size) {\r\n        const next : Subject = this.get(current.children.get(cursor))\r\n\r\n        yield next\r\n\r\n        stack.push(next)\r\n        cursors[cursors.length - 1] += 1\r\n        cursors.push(0)\r\n      } else {\r\n        stack.pop()\r\n        cursors.pop()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Push the given subject into this document.\r\n  *\r\n  * @param subject - A subject to push into the document.\r\n  *\r\n  * @return An updated version of the given subject model.\r\n  */\r\n  public push (subject : Subject) : Subject {\r\n    const result : Subject = subject.clone()\r\n\r\n    if (this._identifiers.capacity === this._identifiers.size) {\r\n      this._identifiers.reallocate(this._identifiers.capacity * 2)\r\n      this._subjects.reallocate(this._identifiers.capacity)\r\n    }\r\n\r\n    result.identifier = this._identifiers.next()\r\n    this._subjects.push(result)\r\n\r\n    this.updateNewSubjectParentChildrenRelationship(result)\r\n    this.updateNewSubjectChildrenParentRelationship(result)\r\n\r\n    return result\r\n  }\r\n\r\n  private updateNewSubjectParentChildrenRelationship (\r\n    subject : Subject\r\n  ) : void {\r\n    if (subject.parent < 0) {\r\n      this._roots.add(subject.identifier)\r\n    } else {\r\n      const parent : Subject = this.get(subject.parent).clone()\r\n      parent.children.add(subject.identifier)\r\n      this._update(parent)\r\n    }\r\n  }\r\n\r\n  private updateNewSubjectChildrenParentRelationship (\r\n    subject : Subject\r\n  ) : void {\r\n    for (const children of subject.children) {\r\n      const newChildren : Subject = this.get(children).clone()\r\n      const oldParent : number = newChildren.parent\r\n      newChildren.parent = subject.identifier\r\n\r\n      if (oldParent < 0) {\r\n        this._roots.delete(children)\r\n      } else {\r\n        const oldParentInstance : Subject = this.get(oldParent).clone()\r\n        oldParentInstance.children.delete(children)\r\n        this._update(oldParentInstance)\r\n      }\r\n\r\n      this._update(newChildren)\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Update an existing subject.\r\n  *\r\n  * @param subject - The new version of an existing subject.\r\n  */\r\n  public update (subject : Subject) : void {\r\n    const index : number = this._identifiers.indexOf(subject.identifier)\r\n\r\n    if (index < 0) {\r\n      throw new Error(\r\n        'Unable to update the subject #' + subject.identifier + ' because no ' +\r\n        'subject with the given identifier exists into this document.'\r\n      )\r\n    } else {\r\n      const oldSubject : Subject = this._subjects.get(index)\r\n\r\n      this.updateParentChildrenRelationship(subject, oldSubject)\r\n      this.updateChildrenParentRelationship(subject, oldSubject)\r\n      this._subjects.set(index, subject)\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Update an existing subject.\r\n  *\r\n  * @param subject - The new version of an existing subject.\r\n  */\r\n  public _update (subject : Subject) : void {\r\n    const index : number = this._identifiers.indexOf(subject.identifier)\r\n    this._subjects.set(index, subject)\r\n  }\r\n\r\n  /**\r\n  * Update the children / parent relationship of an updated subject.\r\n  */\r\n  private updateChildrenParentRelationship (\r\n    newSubject : Subject,\r\n    oldSubject : Subject\r\n  ) : void {\r\n    for (const children of oldSubject.children) {\r\n      if (!newSubject.children.has(children)) {\r\n        const oldChildren : Subject = this.get(children).clone()\r\n        oldChildren.parent = -1\r\n\r\n        this._update(oldChildren)\r\n        this._roots.add(children)\r\n      }\r\n    }\r\n\r\n    for (const children of newSubject.children) {\r\n      if (!oldSubject.children.has(children)) {\r\n        const newChildren : Subject = this.get(children).clone()\r\n        const oldParent : number = newChildren.parent\r\n        newChildren.parent = newSubject.identifier\r\n\r\n        if (oldParent < 0) {\r\n          this._roots.delete(children)\r\n        } else {\r\n          const oldParentInstance : Subject = this.get(oldParent).clone()\r\n          oldParentInstance.children.delete(children)\r\n          this._update(oldParentInstance)\r\n        }\r\n\r\n        this._update(newChildren)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Update the parent / children relationship of an updated subject.\r\n  */\r\n  private updateParentChildrenRelationship (\r\n    newSubject : Subject,\r\n    oldSubject : Subject\r\n  ) : void {\r\n    if (oldSubject.parent !== newSubject.parent) {\r\n      if (oldSubject.parent < 0) {\r\n        this._roots.delete(oldSubject.identifier)\r\n      } else {\r\n        const oldParent : Subject = this.get(oldSubject.parent).clone()\r\n        oldParent.children.delete(oldSubject.identifier)\r\n        this._update(oldParent)\r\n      }\r\n\r\n      if (newSubject.parent < 0) {\r\n        this._roots.add(newSubject.identifier)\r\n      } else {\r\n        const newParent : Subject = this.get(newSubject.parent).clone()\r\n        newParent.children.add(newSubject.identifier)\r\n        this._update(newParent)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Return the depth of a subject into this document.\r\n  *\r\n  * @param subject - A subject to check.\r\n  *\r\n  * @return The depth of the given subject into this document.\r\n  */\r\n  public getDepth (subject : Subject) : number {\r\n    let result : number = 0\r\n    let current : Subject = subject\r\n\r\n    while (current.parent >= 0) {\r\n      result += 1\r\n      current = this.get(current.parent)\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  /**\r\n  * Search and return a subject of this document by using it's identifier.\r\n  *\r\n  * @param identifier - Identifier of the subject to search.\r\n  *\r\n  * @return The subject with the given identifier.\r\n  */\r\n  public get (identifier : number) : Subject {\r\n    const index : number = this._identifiers.indexOf(identifier)\r\n    return index < 0 ? undefined : this._subjects.get(index)\r\n  }\r\n\r\n  /**\r\n  * @return A new instance of document model that is a copy of this one.\r\n  */\r\n  public clone () : Document {\r\n    const result : Document = new Document(this._identifiers.capacity)\r\n\r\n    result._identifiers.copy(this._identifiers)\r\n    result._subjects.copy(this._subjects)\r\n    result._roots.copy(this._roots)\r\n\r\n    return result\r\n  }\r\n\r\n  /**\r\n  * Attach the given subject to the given parent.\r\n  *\r\n  * @param subject - The subject to attach to a parent.\r\n  * @param parent - The parent subject.\r\n  */\r\n  /*\r\n  public attach (subject : Subject, parent : Subject) : void {\r\n    if (subject.parent >= 0) {\r\n      const oldParent : Subject = this.get(subject.parent)\r\n\r\n      oldParent.children.delete(subject.identifier)\r\n      subject.parent = -1\r\n    }\r\n\r\n    if (parent) {\r\n      parent.children.add(subject.identifier)\r\n      subject.parent = parent.identifier\r\n      this._roots.delete(subject.identifier)\r\n    } else {\r\n      this._roots.add(subject.identifier)\r\n    }\r\n  }\r\n  */\r\n\r\n  /**\r\n  * Detach the given subject from it's current parent.\r\n  *\r\n  * @param subject - The subject to detach.\r\n  */\r\n  /*\r\n  public detach (subject : Subject) {\r\n    this.attach(subject, null)\r\n  }\r\n  */\r\n\r\n  /**\r\n  * @see Object.equals\r\n  */\r\n  public equals (other : any) : boolean {\r\n    if (other == null) return false\r\n    if (other === this) return true\r\n\r\n    if (other instanceof Document) {\r\n      return this._identifiers.equals(other._identifiers) &&\r\n             this._subjects.equals(other._subjects) &&\r\n             this._roots.equals(other._roots)\r\n    }\r\n\r\n    return false\r\n  }\r\n}\r\n","export type DocumentAction = string\r\n\r\nexport namespace DocumentAction {\r\n  export const CREATE_SUBJECT : DocumentAction = 'document:subject:create'\r\n  export const DELETE_SUBJECT : DocumentAction = 'document:subject:delete'\r\n  export const DEFINE_NAME : DocumentAction = 'document:name:define'\r\n  export const UPDATE_NAME : DocumentAction = 'document:name:update'\r\n  export const DELETE_NAME : DocumentAction = 'document:name:delete'\r\n  export const DEFINE_KEY : DocumentAction = 'document:key:define'\r\n  export const UPDATE_KEY : DocumentAction = 'document:key:update'\r\n  export const DELETE_KEY : DocumentAction = 'document:key:delete'\r\n\r\n  export const ALL : DocumentAction[] = [\r\n    CREATE_SUBJECT,\r\n    DELETE_SUBJECT,\r\n    DEFINE_NAME,\r\n    UPDATE_NAME,\r\n    DELETE_NAME,\r\n    DEFINE_KEY,\r\n    UPDATE_KEY,\r\n    DELETE_KEY\r\n  ]\r\n}\r\n","import { DocumentAction } from './DocumentAction'\r\nimport { Subject } from './Subject'\r\n\r\nexport type DocumentEvent = { type: DocumentAction, payload?: any }\r\n\r\nexport namespace DocumentEvent {\r\n  /**\r\n  * Event for the creation of a new subject into a document.\r\n  */\r\n  export type SubjectCreationEvent = {\r\n    type: DocumentAction,\r\n    payload: { parent: number },\r\n    payback: Subject\r\n  }\r\n\r\n  /**\r\n  * Event for the creation of a new subject into a document.\r\n  */\r\n  export type SubjectDeletionEvent = {\r\n    type: DocumentAction,\r\n    payload: { subject: number }\r\n  }\r\n\r\n  /**\r\n  * Event for updating the name of a subject.\r\n  */\r\n  export type NameEvent = {\r\n    type: DocumentAction,\r\n    payload: { subject: number, name?: string }\r\n  }\r\n\r\n  /**\r\n  * Event for updating the name of a subject.\r\n  */\r\n  export type KeyEvent = {\r\n    type: DocumentAction,\r\n    payload: { subject: number, key?: string }\r\n  }\r\n\r\n  /**\r\n  * Create a new event for creating a subject into a document.\r\n  *\r\n  * @param [parent = -1] - Identifier of the parent subject of the subject to create.\r\n  *\r\n  * @return An event for creating a subject into a document.\r\n  */\r\n  export function createSubject (parent : number = -1) : SubjectCreationEvent {\r\n    return {\r\n      type: DocumentAction.CREATE_SUBJECT,\r\n      payload: { parent },\r\n      payback: null\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Create a new event for deleting a subject from a document.\r\n  *\r\n  * @param subject - Identifier of the subject to delete.\r\n  *\r\n  * @return An event for deleting a subject from a document.\r\n  */\r\n  export function deleteSubject (subject : number) : SubjectDeletionEvent {\r\n    return {\r\n      type: DocumentAction.CREATE_SUBJECT,\r\n      payload: { subject }\r\n    }\r\n  }\r\n\r\n  export function defineName (subject : number, name : string) : NameEvent {\r\n    return {\r\n      type: DocumentAction.DEFINE_NAME,\r\n      payload: { subject, name }\r\n    }\r\n  }\r\n\r\n  export function updateName (subject : number, name : string) : NameEvent {\r\n    return {\r\n      type: DocumentAction.UPDATE_NAME,\r\n      payload: { subject, name }\r\n    }\r\n  }\r\n\r\n  export function deleteName (subject : number) : NameEvent {\r\n    return {\r\n      type: DocumentAction.DELETE_NAME,\r\n      payload: { subject }\r\n    }\r\n  }\r\n\r\n  export function defineKey (subject : number, key : string) : KeyEvent {\r\n    return {\r\n      type: DocumentAction.DEFINE_KEY,\r\n      payload: { subject, key }\r\n    }\r\n  }\r\n\r\n  export function updateKey (subject : number, key : string) : KeyEvent {\r\n    return {\r\n      type: DocumentAction.UPDATE_KEY,\r\n      payload: { subject, key }\r\n    }\r\n  }\r\n\r\n  export function deleteKey (subject : number) : KeyEvent {\r\n    return {\r\n      type: DocumentAction.DELETE_KEY,\r\n      payload: { subject }\r\n    }\r\n  }\r\n}\r\n","import { DocumentAction } from './DocumentAction'\r\nimport { DocumentEvent } from './DocumentEvent'\r\nimport { Document } from './Document'\r\nimport { Subject } from './Subject'\r\n\r\nexport namespace DocumentReducer {\r\n  /**\r\n  * Create a subject in accordance with the given event into the given document.\r\n  *\r\n  * @param state - A document to update.\r\n  * @param action - An event that describe the action to execute.\r\n  *\r\n  * @return An updated instance copied from the given document.\r\n  */\r\n  function createSubject (\r\n    state : Document,\r\n    action : DocumentEvent.SubjectCreationEvent\r\n  ) : Document {\r\n    const result : Document = state.clone()\r\n\r\n    action.payback = result.create(action.payload.parent)\r\n\r\n    return result\r\n  }\r\n\r\n  function updateName (\r\n    state : Document,\r\n    action : DocumentEvent.NameEvent\r\n  ) : Document {\r\n    const result : Document = state.clone()\r\n\r\n    switch (action.type) {\r\n      case DocumentAction.DEFINE_NAME:\r\n        result.defineName(action.payload.subject, action.payload.name)\r\n        break\r\n      case DocumentAction.UPDATE_NAME:\r\n        result.updateName(action.payload.subject, action.payload.name)\r\n        break\r\n      case DocumentAction.DELETE_NAME:\r\n        result.deleteName(action.payload.subject)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  function updateKey (\r\n    state : Document,\r\n    action : DocumentEvent.KeyEvent\r\n  ) : Document {\r\n    const result : Document = state.clone()\r\n\r\n    switch (action.type) {\r\n      case DocumentAction.DEFINE_KEY:\r\n        result.defineKey(action.payload.subject, action.payload.key)\r\n        break\r\n      case DocumentAction.UPDATE_KEY:\r\n        result.updateKey(action.payload.subject, action.payload.key)\r\n        break\r\n      case DocumentAction.DELETE_KEY:\r\n        result.deleteKey(action.payload.subject)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  /**\r\n  *\r\n  */\r\n  export function reduce (\r\n    state : Document = new Document(),\r\n    action : DocumentEvent\r\n  ) : Document {\r\n    switch (action.type) {\r\n      case DocumentAction.CREATE_SUBJECT:\r\n        return createSubject(state, action as DocumentEvent.SubjectCreationEvent)\r\n      case DocumentAction.DEFINE_NAME:\r\n      case DocumentAction.UPDATE_NAME:\r\n      case DocumentAction.DELETE_NAME:\r\n        return updateName(state, action as DocumentEvent.NameEvent)\r\n      case DocumentAction.DEFINE_KEY:\r\n      case DocumentAction.UPDATE_KEY:\r\n      case DocumentAction.DELETE_KEY:\r\n        return updateKey(state, action as DocumentEvent.KeyEvent)\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n}\r\n","import { ReactElement } from 'react'\r\n\r\nimport { PackSet } from '@cedric-demongivert/gl-tool-collection'\r\nimport { NativeSet } from '@cedric-demongivert/gl-tool-collection'\r\n\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\n\r\nexport class Subject {\r\n  /**\r\n  * Identifier of the parent subject of this subject.\r\n  */\r\n  public parent : number\r\n\r\n  /**\r\n  * Unique number that identify this subject into it's parent document.\r\n  */\r\n  public identifier : number\r\n\r\n  /**\r\n  * Unique key associated to this subject.\r\n  */\r\n  public key : string\r\n\r\n  /**\r\n  * Name of this subject.\r\n  */\r\n  public name : string\r\n\r\n  /**\r\n  * A set of keywords related to this subject.\r\n  */\r\n  public keywords : NativeSet<string>\r\n\r\n  /**\r\n  * Identifier of each subject that are a children of this subject.\r\n  */\r\n  public children : PackSet<number>\r\n\r\n  /**\r\n  * The content of this subject.\r\n  */\r\n  public content : () => ReactElement<SubjectContent>\r\n\r\n  /**\r\n  * The summary of this subject.\r\n  */\r\n  public summary : () => ReactElement<SubjectSummary>\r\n\r\n  /**\r\n  * Instantiate a new subject instance.\r\n  */\r\n  public constructor () {\r\n    this.parent     = -1\r\n    this.identifier = 0\r\n    this.key        = null\r\n    this.name       = null\r\n    this.summary    = null\r\n    this.content    = null\r\n    this.keywords   = NativeSet.any()\r\n    this.children   = PackSet.uint32(16)\r\n  }\r\n  \r\n  /**\r\n  * @return A new subject model that is a copy of this one\r\n  */\r\n  public clone () : Subject {\r\n    const result : Subject = new Subject()\r\n\r\n    result.parent     = this.parent\r\n    result.identifier = this.identifier\r\n    result.key        = this.key\r\n    result.name       = this.name\r\n    result.summary    = this.summary\r\n    result.content    = this.content\r\n    result.keywords.copy(this.keywords)\r\n    result.children.copy(this.children)\r\n\r\n    return result\r\n  }\r\n\r\n  /**\r\n  * @see Object.equals\r\n  */\r\n  public equals (other : any) : boolean {\r\n    if (other == null) return false\r\n    if (other === this) return true\r\n\r\n    if (other instanceof Subject) {\r\n      return other.parent === this.parent &&\r\n             other.identifier === this.identifier &&\r\n             other.key === this.key &&\r\n             other.name === this.name &&\r\n             other.summary === this.summary &&\r\n             other.content === this.content &&\r\n             other.keywords.equals(this.keywords) &&\r\n             other.children.equals(this.children)\r\n    }\r\n\r\n    return false\r\n  }\r\n}\r\n\r\nexport namespace Subject {\r\n  export const EMPTY : Subject = new Subject()\r\n}\r\n","module.exports = dll_2adc2403d89adc16ead0;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AAEA;AAEA;AAEA;AAAA;AACA;AADA;AACA;AAAA;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AAFA;AAHA;AAOA;AAEA;;;;;;;AAbA;AAAA;AAAA;AAmBA;AAEA;AACA;AACA;AAFA;AAIA;AAEA;AAEA;;;;;;AA7BA;AAAA;AAAA;AAmCA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;;;;AA3CA;AAAA;AAAA;AA+CA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAvDA;AACA;AADA;AAAA;AACA;;AAsEA;AACA;AACA;AAfA;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAaA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAaA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AAGA;AAKA;AAAA;AACA;AADA;AACA;AAEA;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AACA;AACA;AAHA;AAIA;AACA;AAXA;AAAA;AAAA;AAaA;AAEA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAtCA;AAAA;AAAA;AAyCA;AACA;AA1CA;AAAA;AAAA;AA4CA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AApEA;AACA;AADA;AAAA;AACA;AAsEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChFA;AACA;AAGA;AAIA;AACA;AAEA;AAAA;AACA;AADA;AACA;AAAA;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AADA;AAHA;AAMA;AAEA;;;;;AAZA;AAAA;AAAA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AAEA;;;;AA1CA;AAAA;AAAA;AA6CA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;;;;AA3DA;AAAA;AAAA;AA+DA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;;;;AAzEA;AAAA;AAAA;AA6EA;AAKA;AAlFA;AACA;AADA;AAAA;AACA;AAoFA;AACA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAcA;AACA;;AASA;AACA;AACA;AAVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7HA;AACA;AAGA;AAEA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAPA;AACA;AADA;AAAA;AACA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AAGA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;AACA;;;AAGA;AACA;AACA;;;AAEA;AACA;AAMA;;;AAEA;AACA;AACA;AAMA;AACA;;;AAEA;AACA;AAGA;;;;AAhCA;AACA;AAkCA;AACA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAcA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEA;AAIA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AAHA;AACA;AADA;AAAA;AAMA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AAKA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AAHA;AACA;AADA;AAAA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;AACA;;;;;;AAMA;AACA;AAEA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AASA;AAEA;;;;;;AAGA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;;;AAEA;AACA;AAMA;;;AAEA;AACA;AACA;AAMA;AACA;;;AAEA;AACA;AAGA;;;;AA5EA;AACA;AA8EA;AACA;AAUA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAcA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxHA;AAGA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AADA;AACA;AAIA;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AADA;AACA;AADA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAgBA;AAEA;;;;;AA1BA;AAAA;AAAA;AA8BA;AACA;AAEA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AA/CA;AAAA;AAAA;AAmDA;AAAA;AAAA;AAAA;AACA;AAEA;;;;AAtDA;AAAA;AAAA;AA0DA;AAAA;AAAA;AAAA;AACA;AAEA;;;;AA7DA;AAAA;AAAA;AAiEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAxEA;AAAA;AAAA;AA4EA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;;;;AAvFA;AAAA;AAAA;AA0FA;AACA;AAAA;AAIA;AAEA;AACA;AAFA;AADA;AAcA;AA7GA;AACA;AADA;AAAA;AACA;;AAgHA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzHA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;;;;AAOA;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAHA;AAIA;AAEA;;;;;AAjBA;AAAA;AAAA;AAqBA;AACA;AACA;AACA;AAEA;;;;AA1BA;AAAA;AAAA;AA8BA;AACA;AAAA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AApDA;AACA;AADA;AAAA;AACA;AADA;AAKA;AADA;AACA;AAkDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DA;AAGA;AAGA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AAAA;;;AADA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAVA;AACA;AADA;AAAA;AACA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvalMA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;AC5EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAapJA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AC7FA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;ACtFA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACjFA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACzFA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACzFA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;AC7HA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AClKA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;AChHA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;ACpHA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;ACjHA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;ACnFA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxvDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;AC3FA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AC3FA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaerNA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;AClpDA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACttCA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChtCA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAadanJA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxDA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;ACjhIA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;ACvFA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;AC7EA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACbA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;ACbA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;ACfA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;ACbnCA;AACA;AAoCA;AACA;AACA;AACA;;;;;;AAIA;AACA;AAEA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;AC/HA;AACA;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAPA;AACA;AAOA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AANA;AAMA;AACA;AAfA;AAAA;AAAA;AAgBA;AACA;AACA;AAlBA;AAAA;AAAA;AAoBA;AACA;AArBA;AAAA;AAAA;AAuBA;AACA;AACA;AAzBA;AAAA;AAAA;AA2BA;AACA;AA5BA;AACA;AADA;AAAA;AA8BA;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChxtBA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AAGA;AAEA;AACA;;;;AAKA;;;;AAKA;;;;AAKA;;;;AAKA;;;;AAKA;;;;;AAKA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;AAvCA;AAAA;AAAA;AA8CA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;AAxDA;AAAA;AAAA;AAkEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAKA;AACA;AACA;AAEA;;;;;;;;;;AAzFA;AAAA;AAAA;AAmGA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;AAzHA;AAAA;AAAA;AAkIA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAtJA;AAAA;AAAA;AAyJA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAKA;AACA;AACA;AA9KA;AAAA;AAAA;AAiLA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AArMA;AAAA;AAAA;AAwMA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AA5NA;AAAA;AAAA;AA+NA;AACA;AAhOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAmOA;AAEA;AArOA;AACA;AADA;AAuOA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AA7OA;AAAA;AAAA;AAAA;AAAA;AACA;AA8OA;AACA;AAhPA;AAAA;AAAA;AAAA;AAAA;AACA;AAiPA;AACA;AACA;AApPA;AAAA;AAAA;AAAA;AACA;AAqPA;AAtPA;AAwPA;AACA;AAzPA;AA0PA;AACA;AACA;AA5PA;AAAA;AACA;AADA;AA8PA;AACA;AACA;AAhQA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoQA;;;;;;;;AApQA;AAAA;AAAA;AA4QA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AA1RA;AAAA;AAAA;AA+RA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAtSA;AAAA;AAAA;AA0SA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAEA;;;;;;AA5TA;AAAA;AAAA;AAkUA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;;;;;;AAlVA;AAAA;AAAA;AAwVA;AACA;AAAA;AACA;AAEA;;;;AA5VA;AAAA;AAAA;AAkWA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAWA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AA4BA;AAEA;;;;AAhYA;AAAA;AAAA;AAuYA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;;AA1ZA;AAAA;AAAA;AAkaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;AA7aA;AAAA;AAAA;AAqbA;AACA;AAAA;AACA;AAEA;;;;AAzbA;AAAA;AAAA;AA6bA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;AAMA;;;;;;;;;;;;;;;;;AAmBA;;;;;;AAKA;;;;;;AAMA;;;;AA1eA;AAAA;AAAA;AA8eA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAxfA;AACA;AADA;AAAA;;;;;;;;;;;;ACLA;AAAA;AAAA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAVA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAKA;AACA;;AAAA;;;;AASA;;;;AAQA;;;;AAQA;;;AAeA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAKA;AACA;;;AAQA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;;AAxGA;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;;AAAA;;;;;;;;AAQA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAXA;AACA;AAaA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAXA;AACA;AAaA;AACA;AAEA;;;;;AAGA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAZA;AAcA;AACA;;AAxFA;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AAKA;AACA;;;;AAKA;;;;AAKA;;;;AAKA;;;;AAKA;;;;AAKA;;;;AAKA;;;;AAKA;;;;AAKA;;;AAGA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAvDA;AAAA;AAAA;AA2DA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;AAzEA;AAAA;AAAA;AA6EA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AA5FA;AACA;AADA;AAAA;AACA;;AA+FA;AADA;;;;;;;;;;;;;;;;;;;;;;;ACvGA;;;;A","sourceRoot":""}