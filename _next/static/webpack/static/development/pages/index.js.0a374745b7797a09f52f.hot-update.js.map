{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.0a374745b7797a09f52f.hot-update.js","sources":["webpack:///./typescript/data/feat/Hacker.tsx","webpack:///./typescript/data/feat/index.ts"],"sourcesContent":["import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\nimport { FeatLevel } from '../../feat/FeatLevel'\r\n\r\nexport const Hacker : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('hacker')\r\n    .setName('Hacker (!)')\r\n    .addKeyword('atout')\r\n    .addKeyword('dague')\r\n    .addKeyword('hacker')\r\n    .addLevel(\r\n      FeatLevel\r\n        .builder()\r\n        .addRequirement(<>Maîtrise de la dague 10+</>)\r\n        .setDescription(\r\n          <p>\r\n            Un fois par round, en guise d'attaque à outrance, un personnage armé\r\n            d'une dague peut toujours choisir d'ignorer tout ou partie de\r\n            l'armure de son adversaire. A cette fin le personnage doit réussir\r\n            une attaque normale plus un jet d'opposition entre sa maîtrise de la\r\n            dague et le nombre de point d'armure à ignorer multiplié par quatre.\r\n            Si le second jet réussi l'assassin porte alors un coup ignorant tout\r\n            ou partie de l'armure de son adversaire.\r\n          </p>\r\n        )\r\n        .build()\r\n    )\r\n    .addLevel(\r\n      FeatLevel\r\n        .builder()\r\n        .addRequirement(<>Maîtrise de la dague 20+</>)\r\n        .addRequirement(<>Dextérité 14+</>)\r\n        .addRequirement(<>Hacker I</>)\r\n        .setDescription(\r\n          <p>\r\n            Un fois par round, en guise d'attaque à outrance, un personnage armé\r\n            d'une dague peut toujours choisir d'ignorer tout ou partie de\r\n            l'armure de son adversaire. A cette fin le personnage doit réussir\r\n            une attaque normale plus un jet d'opposition entre sa maîtrise de la\r\n            dague et le nombre de point d'armure à ignorer multiplié par deux.\r\n            Si le second jet réussi l'assassin porte alors un coup ignorant tout\r\n            ou partie de l'armure de son adversaire.\r\n          </p>\r\n        )\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","export { AcrobaticDodging } from './AcrobaticDodging'\r\nexport { AcrobaticParry } from './AcrobaticParry'\r\nexport { AtlasBurden } from './AtlasBurden'\r\nexport { BloodBath } from './BloodBath'\r\nexport { BloodThirst } from './BloodThirst'\r\nexport { BullCharge } from './BullCharge'\r\nexport { CatGrace } from './CatGrace'\r\nexport { ChainAttack } from './ChainAttack'\r\nexport { ChainDodge } from './ChainDodge'\r\nexport { CounterAttack } from './CounterAttack'\r\nexport { DefensiveStyle } from './DefensiveStyle'\r\nexport { Diehard } from './Diehard'\r\nexport { DoubleSkin } from './DoubleSkin'\r\nexport { EagleCharge } from './EagleCharge'\r\nexport { FlashDodge } from './FlashDodge'\r\nexport { FullDodge } from './FullDodge'\r\nexport { Hacker } from './Hacker'\r\n\r\nimport { AcrobaticDodging } from './AcrobaticDodging'\r\nimport { AcrobaticParry } from './AcrobaticParry'\r\nimport { AtlasBurden } from './AtlasBurden'\r\nimport { BloodBath } from './BloodBath'\r\nimport { BloodThirst } from './BloodThirst'\r\nimport { BullCharge } from './BullCharge'\r\nimport { CatGrace } from './CatGrace'\r\nimport { ChainAttack } from './ChainAttack'\r\nimport { ChainDodge } from './ChainDodge'\r\nimport { CounterAttack } from './CounterAttack'\r\nimport { DefensiveStyle } from './DefensiveStyle'\r\nimport { Diehard } from './Diehard'\r\nimport { DoubleSkin } from './DoubleSkin'\r\nimport { EagleCharge } from './EagleCharge'\r\nimport { FlashDodge } from './FlashDodge'\r\nimport { FullDodge } from './FullDodge'\r\nimport { Hacker } from './Hacker'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const ALL : Feat[] = [\r\n  AcrobaticDodging,\r\n  AcrobaticParry,\r\n  AtlasBurden,\r\n  BloodBath,\r\n  BloodThirst,\r\n  BullCharge,\r\n  CatGrace,\r\n  ChainAttack,\r\n  ChainDodge,\r\n  CounterAttack,\r\n  DefensiveStyle,\r\n  Diehard,\r\n  DoubleSkin,\r\n  EagleCharge,\r\n  FlashDodge,\r\n  FullDodge,\r\n  Hacker\r\n]\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;A","sourceRoot":""}