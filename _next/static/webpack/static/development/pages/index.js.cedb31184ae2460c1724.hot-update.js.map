{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.cedb31184ae2460c1724.hot-update.js","sources":["webpack:///./typescript/data/alchemy/processed/GreenleavesCurse.tsx","webpack:///./typescript/data/alchemy/processed/index.ts"],"sourcesContent":["import React from 'react'\r\n\r\nimport { Unit } from '../../../../components/Unit'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\nimport { AlchemicProperty } from '../../../alchemy/AlchemicProperty'\r\n\r\nexport const GreenleavesCurse : AlchemicMaterial = (\r\n  AlchemicMaterial\r\n    .builder()\r\n    .setName('Malédiction de verderelle')\r\n    .setIdentifier('greenleaves-curse')\r\n    .setDescription(\r\n      <>\r\n        <p>\r\n          La malédiction de verderelle est une décoction de verderelle dans\r\n          l'eau. Le liquide vert clair qui en résulte est un poison violent\r\n          capable de paralyser les individus les plus forts. A un certain degré\r\n          de concentration la malédiction de verderelle peut même faire sombrer\r\n          des boeufs dans un coma profond.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Paralysie.</strong> Un personnage qui subit un effet\r\n          paralytique doit réussir un test d'opposition de constitution contre\r\n          un degré de difficulté équivalent à la qualité du poison. Si le jet\r\n          de constitution réussi, le personnage joue en dernier pour le round\r\n          en cours. Si le jet échoue le personnage perds un nombre de round\r\n          égal à la durée de la paralysie.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Coma.</strong> Un personnage qui subit un effet de coma doit\r\n          réussir un test d'opposition de constitution contre un degré de\r\n          difficulté équivalent à la qualité du poison. Si le jet échoue le\r\n          personnage tombe immédiatement dans le coma.\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Mutisme.</strong> Un personnage qui subit un les effets du\r\n          mutisme doit réussir un test d'opposition de constitution contre un\r\n          degré de difficulté équivalent à la qualité du poison. Si le jet\r\n          échoue le personnage ne peut plus communiquer par la parole pendant\r\n          un nombre de round égal à la durée de l'effet du mutisme.\r\n        </p>\r\n      </>\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Paralysie</>)\r\n        .setCost(0)\r\n        .setDuration(<>1<Unit>r</Unit> + 1<Unit>r</Unit> × ¼Qa</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Coma (Concentration x3)</>)\r\n        .setCost(0)\r\n        .setDuration(<>~</>)\r\n        .build()\r\n    )\r\n    .addProperty(\r\n      AlchemicProperty\r\n        .builder()\r\n        .addEffect(<>Mutisme</>)\r\n        .setCost(0)\r\n        .setDuration(<>1<Unit>r</Unit> + 1<Unit>r</Unit> × ¼Qa</>)\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","export { CourrierBlessing } from './CourrierBlessing'\r\nexport { DreamstarInfusion } from './DreamstarInfusion'\r\nexport { GoldenSun } from './GoldenSun'\r\nexport { GreenleavesInfusion } from './GreenleavesInfusion'\r\nexport { GreenleavesPurifier } from './GreenleavesPurifier'\r\nexport { HunterBlessing } from './HunterBlessing'\r\nexport { MorpheaNectar } from './MorpheaNectar'\r\nexport { GreenleavesCurse } from './GreenleavesCurse'\r\nexport { PandoraInfusion } from './PandoraInfusion'\r\nexport { PegasusInfusion } from './PegasusInfusion'\r\nexport { SkyhammerInfusion } from './SkyhammerInfusion'\r\nexport { SquireBlessing } from './SquireBlessing'\r\nexport { StormLiquor } from './StormLiquor'\r\nexport { SunriseInfusion } from './SunriseInfusion'\r\nexport { ThiefBlessing } from './ThiefBlessing'\r\nexport { TreeBlood } from './TreeBlood'\r\nexport { WarriorBlessing } from './WarriorBlessing'\r\nexport { WindSyrup } from './WindSyrup'\r\n\r\nimport { CourrierBlessing } from './CourrierBlessing'\r\nimport { DreamstarInfusion } from './DreamstarInfusion'\r\nimport { GoldenSun } from './GoldenSun'\r\nimport { GreenleavesInfusion } from './GreenleavesInfusion'\r\nimport { GreenleavesPurifier } from './GreenleavesPurifier'\r\nimport { HunterBlessing } from './HunterBlessing'\r\nimport { MorpheaNectar } from './MorpheaNectar'\r\nimport { PandoraInfusion } from './PandoraInfusion'\r\nimport { PegasusInfusion } from './PegasusInfusion'\r\nimport { SkyhammerInfusion } from './SkyhammerInfusion'\r\nimport { SquireBlessing } from './SquireBlessing'\r\nimport { StormLiquor } from './StormLiquor'\r\nimport { SunriseInfusion } from './SunriseInfusion'\r\nimport { ThiefBlessing } from './ThiefBlessing'\r\nimport { TreeBlood } from './TreeBlood'\r\nimport { WarriorBlessing } from './WarriorBlessing'\r\nimport { WindSyrup } from './WindSyrup'\r\n\r\nimport { AlchemicMaterial } from '../../../alchemy/AlchemicMaterial'\r\n\r\nexport const ALL : AlchemicMaterial[] = [\r\n  CourrierBlessing,\r\n  DreamstarInfusion,\r\n  GoldenSun,\r\n  GreenleavesInfusion,\r\n  GreenleavesPurifier,\r\n  HunterBlessing,\r\n  MorpheaNectar,\r\n  PandoraInfusion,\r\n  PegasusInfusion,\r\n  SkyhammerInfusion,\r\n  SquireBlessing,\r\n  StormLiquor,\r\n  SunriseInfusion,\r\n  ThiefBlessing,\r\n  TreeBlood,\r\n  WarriorBlessing,\r\n  WindSyrup\r\n]\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AAEA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACpEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;A","sourceRoot":""}