{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.fc60f5ae82c38ffe42ba.hot-update.js","sources":["webpack:///./typescript/data/feat/CounterAttack.tsx","webpack:///./typescript/data/feat/index.ts"],"sourcesContent":["import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\nimport { FeatLevel } from '../../feat/FeatLevel'\r\n\r\nexport const CounterAttack : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('counter-attack')\r\n    .setName('Contre attaque')\r\n    .addKeyword('atout')\r\n    .addKeyword('contre attaque')\r\n    .addLevel(\r\n      FeatLevel\r\n        .builder()\r\n        .addRequirement(<>Maîtrise d'arme légère 6+</>)\r\n        .setDescription(\r\n          <p>\r\n            Une fois par round, un personnage équipé d'une arme légère possédant\r\n            cet atout et venant de parer un coup peut toujours choisir de contre\r\n            attaquer gratuitement. Les rôles du défenseur et de l'attaquant sont\r\n            alors inversé.\r\n          </p>\r\n        )\r\n        .build()\r\n    )\r\n    .addLevel(\r\n      FeatLevel\r\n        .builder()\r\n        .addRequirement(<>Maîtrise d'arme légère 12+</>)\r\n        .addRequirement(<>Contre attaque I</>)\r\n        .setDescription(\r\n          <p>\r\n            Deux fois par round, un personnage équipé d'une arme légère\r\n            possédant cet atout et venant de parer un coup peut toujours choisir\r\n            de contre attaquer gratuitement. Les rôles du défenseur et de\r\n            l'attaquant sont alors inversé.\r\n          </p>\r\n        )\r\n        .build()\r\n    )\r\n    .addLevel(\r\n      FeatLevel\r\n        .builder()\r\n        .addRequirement(<>Maîtrise d'arme légère 20+</>)\r\n        .addRequirement(<>Contre attaque II</>)\r\n        .setDescription(\r\n          <p>\r\n            Trois fois par round, un personnage équipé d'une arme légère\r\n            possédant cet atout et venant de parer un coup peut toujours choisir\r\n            de contre attaquer gratuitement. Les rôles du défenseur et de\r\n            l'attaquant sont alors inversé.\r\n          </p>\r\n        )\r\n        .build()\r\n    )\r\n    .build()\r\n)\r\n","export { AcrobaticDodging } from './AcrobaticDodging'\r\nexport { AcrobaticParry } from './AcrobaticParry'\r\nexport { AtlasBurden } from './AtlasBurden'\r\nexport { BloodBath } from './BloodBath'\r\nexport { BloodThirst } from './BloodThirst'\r\nexport { BullCharge } from './BullCharge'\r\nexport { CatGrace } from './CatGrace'\r\nexport { ChainAttack } from './ChainAttack'\r\nexport { ChainDodge } from './ChainDodge'\r\nexport { CounterAttack } from './CounterAttack'\r\n\r\nimport { AcrobaticDodging } from './AcrobaticDodging'\r\nimport { AcrobaticParry } from './AcrobaticParry'\r\nimport { AtlasBurden } from './AtlasBurden'\r\nimport { BloodBath } from './BloodBath'\r\nimport { BloodThirst } from './BloodThirst'\r\nimport { BullCharge } from './BullCharge'\r\nimport { CatGrace } from './CatGrace'\r\nimport { ChainAttack } from './ChainAttack'\r\nimport { ChainDodge } from './ChainDodge'\r\nimport { CounterAttack } from './CounterAttack'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const ALL : Feat[] = [\r\n  AcrobaticDodging,\r\n  AcrobaticParry,\r\n  AtlasBurden,\r\n  BloodBath,\r\n  BloodThirst,\r\n  BullCharge,\r\n  CatGrace,\r\n  ChainAttack,\r\n  ChainDodge,\r\n  CounterAttack\r\n]\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;A","sourceRoot":""}