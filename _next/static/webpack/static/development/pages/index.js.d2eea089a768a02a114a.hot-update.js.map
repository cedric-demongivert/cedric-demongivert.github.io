{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.d2eea089a768a02a114a.hot-update.js","sources":["webpack:///./content/rules/core/AdversialTestRule.tsx"],"sourcesContent":["import React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ReactNode } from 'react'\r\n\r\nimport { SubjectSummary } from '../../../components/subject/SubjectSummary'\r\nimport { SubjectContent } from '../../../components/subject/SubjectContent'\r\nimport { SubjectTitle } from '../../../components/subject/SubjectTitle'\r\nimport { SubjectKeyword } from '../../../components/subject/SubjectKeyword'\r\nimport { SubjectIdentifier } from '../../../components/subject/SubjectIdentifier'\r\nimport { Subject } from '../../../components/subject/Subject'\r\nimport { Table2D } from '../../../components/table/Table2D'\r\n\r\nfunction range (value : number) : number[] {\r\n  const result : number[] = []\r\n\r\n  for (let index = 0; index <= value; ++index) {\r\n    result.push(index)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport function AdversialTestRule () : ReactElement {\r\n  return (\r\n    <Subject>\r\n      <SubjectIdentifier>rules-core-adversial-test</SubjectIdentifier>\r\n      <SubjectKeyword>Règle</SubjectKeyword>\r\n      <SubjectKeyword>Règle principale</SubjectKeyword>\r\n      <SubjectKeyword>Résolution</SubjectKeyword>\r\n      <SubjectKeyword>Résolution par opposition</SubjectKeyword>\r\n      <SubjectTitle>Résolution par opposition</SubjectTitle>\r\n      <SubjectSummary>\r\n\r\n      </SubjectSummary>\r\n      <SubjectContent>\r\n        <p>\r\n          <em>Définition.</em> La résolution par opposition décide de l'issue\r\n          d'une confrontation entre deux éléments du récit. C'est le test type\r\n          pour résoudre le succès des attaques d'un épéiste ou la résistance\r\n          d'une serrure à une tentative de crochetage.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Acteur / Opposant.</em> Le joueur qui lance les dés est dit\r\n          acteur de la résolution. Le joueur qui subit le test est dit opposant\r\n          à la résolution. Un joueur est toujours acteur de la résolution\r\n          lorsqu'il se confronte à un élément du récit. Dans le cas où deux\r\n          joueurs se confrontent, l'acteur est décidé d'un commun accord ou\r\n          à pile ou face. Finalement, si deux éléments du récit interagissent\r\n          entre-eux, c'est au maître du jeu de répartir les rôles.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Test.</em> Une résolution par opposition compare une compétence\r\n          de l'acteur appelée compétence offensive à une compétence de\r\n          l'opposant dite compétence défensive. Pour que l'issue du test soit\r\n          favorable pour l'acteur celui-ci doit obtenir un score strictement\r\n          supérieur au niveau de la compétence défensive de son opposant\r\n          augmentée de dix points en lançant un dé à vingt faces et en y\r\n          ajoutant le niveau de sa propre compétence offensive.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Exemple.</em> Un personnage avec une compétence de 10 en\r\n          discrétion tentant de se faire discret en escaladant une muraille\r\n          surveillée par un garde ayant une compétence de 12 en perception\r\n          devra obtenir un score strictement supérieur à 22 points.\r\n          En lançant un dé 20 et avec son niveau de discrétion, le personnage\r\n          réussira le test s'il obtient 13, 14, 15, 16, 17, 18, 19 et 20 sur le\r\n          dé et l'échouera dans tous les autres cas. Ce sera toujours au joueur\r\n          de résoudre le test le garde étant un élément de narration.\r\n        </p>\r\n\r\n        <p>\r\n          <em>Probabilités.</em> Les chances de succès d'un acteur sur un\r\n          opposant en fonction de leur niveau de compétence respectif sont\r\n          retranscrite dans le tableau suivant. Ces probabilités ne tiennent\r\n          pas compte d'éventuels dés bonus.\r\n        </p>\r\n\r\n        <Table2D className='text-center' width={20 * 30 + 'px'}>\r\n          {\r\n            range(20).map(function renderRow (actor : number) : ReactNode {\r\n              return (\r\n                <Table2D.Row key={actor}>\r\n                  <Table2D.Cell heading>{actor}</Table2D.Cell>\r\n                  {\r\n                    range(20).map((rival : number) : ReactNode => (\r\n                      <Table2D.Cell key={rival}>\r\n                        {Math.min(Math.max(actor - rival, -9), +9) * 5 + 50}\r\n                        <span className='percent'>%</span>\r\n                      </Table2D.Cell>\r\n                    ))\r\n                  }\r\n                </Table2D.Row>\r\n              )\r\n            }).reverse()\r\n          }\r\n          <Table2D.Row>\r\n            <Table2D.Cell heading width='35px' />\r\n            {\r\n              range(20).map((index : number) : ReactNode => (\r\n                <Table2D.Cell key={index} heading width='35px'>\r\n                  {index}\r\n                </Table2D.Cell>\r\n              ))\r\n            }\r\n          </Table2D.Row>\r\n        </Table2D>\r\n      </SubjectContent>\r\n    </Subject>\r\n  )\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AASA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;;;;A","sourceRoot":""}