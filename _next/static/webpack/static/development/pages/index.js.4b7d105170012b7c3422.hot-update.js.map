{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.4b7d105170012b7c3422.hot-update.js","sources":["webpack:///./typescript/feat/FeatBuilder.ts"],"sourcesContent":["import { ReactNode } from 'react'\r\n\r\nimport { Arrays } from '../Arrays'\r\nimport { Sets } from '../Sets'\r\n\r\nimport { Feat } from './Feat'\r\nimport { FeatLevel } from './FeatLevel'\r\n\r\nexport class FeatBuilder {\r\n  public name : string\r\n  public identifier : string\r\n  public keywords : Set<string>\r\n  public description : ReactNode\r\n\r\n  public constructor () {\r\n    this.name = null\r\n    this.identifier = null\r\n    this.keywords = new Set()\r\n    this.description = null\r\n  }\r\n\r\n  public build () : Feat {\r\n    return {\r\n      identifier: this.identifier,\r\n      name: this.name,\r\n      keywords: new Set(this.keywords),\r\n      description: this.description\r\n    }\r\n  }\r\n\r\n  public setName (name : string) : FeatBuilder {\r\n    this.name = name\r\n    return this\r\n  }\r\n\r\n  public setIdentifier (identifier : string) : FeatBuilder {\r\n    this.identifier = identifier\r\n    return this\r\n  }\r\n\r\n  public setDescription (description : ReactNode) : FeatBuilder {\r\n    this.description = description\r\n    return this\r\n  }\r\n\r\n  public addKeyword (keyword : string) : FeatBuilder {\r\n    this.keywords.add(keyword)\r\n    return this\r\n  }\r\n\r\n  public copy (toCopy : Feat) : FeatBuilder {\r\n    this.name = toCopy.name\r\n    this.identifier = toCopy.identifier\r\n    this.description = toCopy.description\r\n    Sets.copy(toCopy.keywords, this.keywords)\r\n\r\n    return this\r\n  }\r\n\r\n  public clone () : FeatBuilder {\r\n    const result : FeatBuilder = new FeatBuilder()\r\n    result.copy(this)\r\n\r\n    return result\r\n  }\r\n\r\n  public clear () : void {\r\n    this.name = null\r\n    this.identifier = null\r\n    this.description = null\r\n    this.keywords.clear()\r\n  }\r\n\r\n  public equals (other : any) : boolean {\r\n    if (other == null) return false\r\n    if (other === this) return true\r\n\r\n    if (other instanceof FeatBuilder) {\r\n      return Feat.equals(this, other)\r\n    }\r\n  }\r\n}\r\n\r\nexport namespace FeatBuilder {\r\n  export const BUILDER : FeatBuilder = new FeatBuilder()\r\n\r\n  export function clone (builder : FeatBuilder) : FeatBuilder {\r\n    return builder == null ? builder : builder.clone()\r\n  }\r\n\r\n  export function equals (left : FeatBuilder, right : FeatBuilder) : boolean {\r\n    return left == null ? left === right : left.equals(right)\r\n  }\r\n\r\n  export function builder () : FeatBuilder {\r\n    BUILDER.clear()\r\n    return BUILDER\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAGA;AAEA;AAGA;AAMA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AACA;AAJA;AAMA;AApBA;AAAA;AAAA;AAuBA;AACA;AACA;AAzBA;AAAA;AAAA;AA4BA;AACA;AACA;AA9BA;AAAA;AAAA;AAiCA;AACA;AACA;AAnCA;AAAA;AAAA;AAsCA;AACA;AACA;AAxCA;AAAA;AAAA;AA2CA;AACA;AACA;AACA;AAEA;AACA;AAjDA;AAAA;AAAA;AAoDA;AACA;AAEA;AACA;AAxDA;AAAA;AAAA;AA2DA;AACA;AACA;AACA;AACA;AA/DA;AAAA;AAAA;AAkEA;AACA;AACA;AACA;AACA;AACA;AACA;AAxEA;AACA;AADA;AAAA;AACA;;AA2EA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;AAfA;;;;A","sourceRoot":""}