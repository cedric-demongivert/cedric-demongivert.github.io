{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.f3624ae56d4d64e603de.hot-update.js","sources":["webpack:///./typescript/data/feat/AcrobaticDodging.tsx","webpack:///./typescript/data/feat/AcrobaticParry.tsx","webpack:///./typescript/data/feat/AtlasBurden.tsx","webpack:///./typescript/data/feat/BloodBath.tsx","webpack:///./typescript/data/feat/BloodThirst.tsx","webpack:///./typescript/data/feat/BullCharge.tsx","webpack:///./typescript/data/feat/CatGrace.tsx","webpack:///./typescript/data/feat/ChainAttack.tsx","webpack:///./typescript/data/feat/ChainAttackBastard.tsx","webpack:///./typescript/data/feat/ChainDodge.tsx","webpack:///./typescript/data/feat/CounterAttack.tsx","webpack:///./typescript/data/feat/CounterAttackBastard.tsx","webpack:///./typescript/data/feat/DefensiveStyle.tsx","webpack:///./typescript/data/feat/DefensiveStyleBastard.tsx","webpack:///./typescript/data/feat/Diehard.tsx","webpack:///./typescript/data/feat/DoubleSkin.tsx","webpack:///./typescript/data/feat/EagleCharge.tsx","webpack:///./typescript/data/feat/FlashDodge.tsx","webpack:///./typescript/data/feat/FullDodge.tsx","webpack:///./typescript/data/feat/Hacker.tsx","webpack:///./typescript/data/feat/Twisted.tsx","webpack:///./typescript/data/feat/VulcanStrike.tsx","webpack:///./typescript/data/feat/WindDance.tsx","webpack:///./typescript/data/feat/index.ts"],"sourcesContent":["import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const AcrobaticDodging : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('acrobatic-dodging')\r\n    .setName('Esquive acrobatique')\r\n    .addKeyword('atout')\r\n    .addKeyword('esquive')\r\n    .addKeyword('acrobatie')\r\n    .addKeyword('esquive acrobatique')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Acrobatie 10+ <br/>\r\n\r\n        <p>\r\n          Le personnage gagne une esquive acrobatique supplémentaire par\r\n          round, une esquive acrobatique est résolue comme une acrobatie dont\r\n          le succès aboutit aux effets d'une esquive standard. Lors d'une\r\n          esquive acrobatique le personnage subit un malus de 20% sur sa\r\n          tentative d'esquive.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const AcrobaticParry : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('acrobatic-parry')\r\n    .setName('Parade acrobatique')\r\n    .addKeyword('atout')\r\n    .addKeyword('parade')\r\n    .addKeyword('acrobatie')\r\n    .addKeyword('parade acrobatique')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Acrobatie 15+ <br/>\r\n\r\n        <p>\r\n          Le personnage gagne une parade supplémentaire par round, cette\r\n          parade est résolue comme une acrobatie dont le succès aboutit aux\r\n          effets d'une parade standard avec l'arme choisie. Lors d'une parade\r\n          acrobatique le personnage subit un malus de 20% sur sa tentative.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const AtlasBurden : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('atlas-burden')\r\n    .setName('Fardeau d\\'Atlas')\r\n    .addKeyword('atout')\r\n    .addKeyword('constitution')\r\n    .addKeyword('fardeau d\\'atlas')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Constitution 14+ <br/>\r\n\r\n        <p>\r\n          Gagnez 1 point de charge supplémentaire par groupe de 4 points de\r\n          constitution au dessus de 10 pour chaque groupe de 4 points de force\r\n          effectif.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const BloodBath : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('blood-bath')\r\n    .setName('Bain de sang')\r\n    .addKeyword('atout')\r\n    .addKeyword('controle')\r\n    .addKeyword('bain de sang')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Contrôle 14- <br/>\r\n\r\n        <p>\r\n          Infligez 1 point de dégât supplémentaire tous les 4 points de vie\r\n          perdus. Si le personnage possède 10 points de contrôle ou moins il\r\n          inflige alors 1 point de dégât supplémentaire tous les 2 points de\r\n          vie perdus.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const BloodThirst : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('blood-thirst')\r\n    .setName('Soif de sang')\r\n    .addKeyword('atout')\r\n    .addKeyword('controle')\r\n    .addKeyword('soif de sang')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Contrôle 14- <br/>\r\n\r\n        <p>\r\n          Gagnez 1 point d'initiative supplémentaire tous les 4 points de vie\r\n          perdus. Si le personnage possède 10 points de contrôle ou moins il\r\n          gagne alors 1 point d'initiative supplémentaire tous les 2 points de\r\n          vie perdus.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const BullCharge : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('bull-charge')\r\n    .setName('Charge du taureau')\r\n    .addKeyword('atout')\r\n    .addKeyword('force')\r\n    .addKeyword('armure lourde')\r\n    .addKeyword('charge')\r\n    .addKeyword('charge du taureau')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Force 12+ <br/>\r\n        Armures lourdes 5+ <br/>\r\n\r\n        <p>\r\n          Lors d'une charge, ajoutez 1 point de dégât physique supplémentaire\r\n          tous les 4 points de charge utilisés.\r\n        </p>\r\n\r\n        <p>\r\n          Si le personnage possède une force supérieure ou égale à 14 points et\r\n          une maîtrise du port des armures lourdes supérieure ou égale à 10\r\n          points le ratio passe alors de 1 pour 4 à 1 pour 2.\r\n        </p>\r\n\r\n        <p>\r\n          Si le personnage possède une force supérieure ou égale à 16 points et\r\n          une maîtrise du port des armures lourdes supérieure ou égale à 15\r\n          points le ratio passe alors de 1 pour 4 à 1 pour 1.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const CatGrace : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('cat-grace')\r\n    .setName('Grâce féline')\r\n    .addKeyword('atout')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Dextérité 14+ <br/>\r\n        Acrobatie 10+ <br/>\r\n\r\n        <p>\r\n          Si des suites des actions d'un tiers ou de ses propres décisions, un\r\n          personnage vient à tomber à terre il peut alors effectuer un test\r\n          d'opposition entre son score d'acrobatie et un degré de difficulté de\r\n          15 points pour se rattraper in-extremis. Si le jet est réussi le\r\n          personnage ne tombe pas à terre et peut effectuer son round en cours\r\n          normalement. Si le test échoue le personnage tombe à terre.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const ChainAttack : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('chain-attack')\r\n    .setName('Attaque en chaîne [Arme à une main]')\r\n    .addKeyword('atout')\r\n    .addKeyword('dextérité')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Dextérité 12+ <br/>\r\n        Maîtrise de l'arme choisie 5+ <br/>\r\n\r\n        <p>\r\n          Le personnage peut échanger une parade ou une esquive contre une\r\n          attaque supplémentaire lors d'une attaque à outrance réalisée avec\r\n          l'arme choisie par groupe de 5 points de maîtrise de la-dite arme. Un\r\n          personnage ne peut pas faire l'objet d'un nombre d'échange par round\r\n          qui soit supérieur à son modificateur de dextérité augmenté de 1\r\n          point. Les attaques supplémentaires se résolvent comme des attaques\r\n          normales avec un malus de 10% par attaque déjà portée.\r\n        </p>\r\n\r\n        <p>\r\n          Cet atout peut être choisi plusieurs fois pour pouvoir en bénéficier\r\n          avec différentes armes.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const ChainAttackBastard : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('chain-attack-bastard')\r\n    .setName('Attaque en chaîne [Arme bâtarde]')\r\n    .addKeyword('atout')\r\n    .addKeyword('dextérité')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Dextérité 12+ <br/>\r\n        Maîtrise de l'arme choisie 10+ <br/>\r\n\r\n        <p>\r\n          Le personnage peut échanger une parade ou une esquive contre une\r\n          attaque supplémentaire lors d'une attaque à outrance réalisée avec\r\n          l'arme choisie par groupe de 10 points de maîtrise de la-dite arme. Un\r\n          personnage ne peut pas faire l'objet d'un nombre d'échange par round\r\n          qui soit supérieur à son modificateur de dextérité augmenté de 1\r\n          point. Les attaques supplémentaires se résolvent comme des attaques\r\n          normales avec un malus de 10% par attaque déjà portée.\r\n        </p>\r\n\r\n        <p>\r\n          Cet atout peut être choisi plusieurs fois pour pouvoir en bénéficier\r\n          avec différentes armes.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const ChainDodge : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('chain-dodge')\r\n    .setName('Esquive en chaîne')\r\n    .addKeyword('atout')\r\n    .addKeyword('esquive')\r\n    .addKeyword('esquive en chaîne')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Esquive 5+ <br/>\r\n\r\n        <p>\r\n          Le personnage gagne une esquive supplémentaire par round pour chaque\r\n          groupe de 5 points de maîtrise de l'esquive qu'il possède. Un\r\n          personnage ne peut pas faire l'objet d'un nombre d'esquive bonus par\r\n          round qui soit supérieur à son modificateur de dextérité augmenté de\r\n          1 point. Chaque esquive supplémentaire jouée durant un round se voit\r\n          attribuée un malus de 2 points cumulatif.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const CounterAttack : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('counter-attack')\r\n    .setName('Contre attaque [Arme à une main]')\r\n    .addKeyword('atout')\r\n    .addKeyword('contre attaque')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Maîtrise de l'arme choisie 6+ <br/>\r\n\r\n        <p>\r\n          Par round, pour chaque groupe de 6 points dans la maîtrise de l'arme\r\n          choisie, un personnage venant de parrer un coup avec la-dite arme et\r\n          possédant cet atout peut toujours choisir de contre-attaquer\r\n          gratuitement. Les rôles du défenseur et de l'attaquant sont alors\r\n          inversé. Un personnage ne peut pas faire l'objet d'un nombre de\r\n          contre-attaque par round qui soit supérieur à son modificateur de\r\n          dextérité augmenté de 1 point.\r\n        </p>\r\n\r\n        <p>\r\n          Cet atout peut être choisi plusieurs fois pour pouvoir en bénéficier\r\n          avec différentes armes.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const CounterAttackBastard : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('counter-attack-bastard')\r\n    .setName('Contre attaque [Arme bâtarde]')\r\n    .addKeyword('atout')\r\n    .addKeyword('contre attaque')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Maîtrise de l'arme choisie 10+ <br/>\r\n\r\n        <p>\r\n          Par round, pour chaque groupe de 10 points dans la maîtrise de l'arme\r\n          choisie, un personnage venant de parrer un coup avec la-dite arme et\r\n          possédant cet atout peut toujours choisir de contre-attaquer\r\n          gratuitement. Les rôles du défenseur et de l'attaquant sont alors\r\n          inversé. Un personnage ne peut pas faire l'objet d'un nombre de\r\n          contre-attaque par round qui soit supérieur à son modificateur de\r\n          dextérité augmenté de 1 point.\r\n        </p>\r\n\r\n        <p>\r\n          Cet atout peut être choisi plusieurs fois pour pouvoir en bénéficier\r\n          avec différentes armes.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const DefensiveStyle : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('defensive-style')\r\n    .setName('Style défensif [Arme à une main]')\r\n    .addKeyword('atout')\r\n    .addKeyword('épée courte')\r\n    .addKeyword('style défensif')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Maîtrise de l'arme choisie 5+ <br/>\r\n\r\n        <p>\r\n          Un personnage possédant cet atout gagne une parade supplémentaire par\r\n          round pour chaque groupe de 5 points dans la maîtrise de l'arme\r\n          choisie. Un personnage ne peut pas faire l'objet d'un nombre de\r\n          parade supplémentaire par round qui soit supérieur à son modificateur\r\n          de dextérité augmenté de 1 point.\r\n        </p>\r\n\r\n        <p>\r\n          Cet atout peut être choisi plusieurs fois pour pouvoir en bénéficier\r\n          avec différentes armes.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const DefensiveStyleBastard : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('defensive-style-bastard')\r\n    .setName('Style défensif [Arme bâtarde]')\r\n    .addKeyword('atout')\r\n    .addKeyword('épée courte')\r\n    .addKeyword('style défensif')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Maîtrise de l'arme choisie 10+ <br/>\r\n\r\n        <p>\r\n          Un personnage possédant cet atout gagne une parade supplémentaire par\r\n          round pour chaque groupe de 10 points dans la maîtrise de l'arme\r\n          choisie. Un personnage ne peut pas faire l'objet d'un nombre de\r\n          parade supplémentaire par round qui soit supérieur à son modificateur\r\n          de dextérité augmenté de 1 point.\r\n        </p>\r\n\r\n        <p>\r\n          Cet atout peut être choisi plusieurs fois pour pouvoir en bénéficier\r\n          avec différentes armes.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const Diehard : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('defensive-diehard')\r\n    .setName('Dur à cuir')\r\n    .addKeyword('atout')\r\n    .addKeyword('constitution')\r\n    .addKeyword('dur à cuir')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Constitution 14+ <br/>\r\n\r\n        <p>\r\n          Gagnez 1 point de vie supplémentaire pour chaque groupe de 2 points\r\n          de constitution effectif. Vous mourrez toujours si vous accumulez plus\r\n          de 150% de votre <strong>constitution</strong> en dégâts.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const DoubleSkin : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('double-skin')\r\n    .setName('Seconde peau')\r\n    .addKeyword('atout')\r\n    .addKeyword('armure légère')\r\n    .addKeyword('seconde peau')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Armures légères 8+ <br/>\r\n\r\n        <p>\r\n          Toutes les armures légères voient leur poids réduit de 1 point pour\r\n          chaque groupe de 8 points de maîtrise des armures légères du\r\n          personnage. Le poids d'une armure ne peut jamais valoir moins de 0\r\n          points.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const EagleCharge : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('eagle-charge')\r\n    .setName('Charge de l\\'aigle [Arme à une main]')\r\n    .addKeyword('atout')\r\n    .addKeyword('épée courte')\r\n    .addKeyword('charge de l\\'aigle')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Maîtrise de l'arme choisie 10+ <br/>\r\n\r\n        <p>\r\n          Lors d'une charge un personnage possédant cet atout et ce pour chaque\r\n          groupe de 10 points de maîtrise dans le maniement de l'arme à une main\r\n          choisie peut toujours choisir d'échanger une parade ou une esquive\r\n          contre une attaque supplémentaire de la-dite arme. Les attaques\r\n          supplémentaires se résolvent comme des attaques standard avec un malus\r\n          de 2 points par attaque déjà portée. Les bénefices de la charge\r\n          s'appliquent à l'ensemble des coups portés. Un personnage ne peut pas\r\n          faire l'objet d'un nombre d'attaque bonus par charge qui soit\r\n          supérieur à son modificateur de dextérité augmenté de 1 point.\r\n        </p>\r\n\r\n        <p>\r\n          Cet atout peut être choisi plusieurs fois pour pouvoir en bénéficier\r\n          avec différentes armes.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const FlashDodge : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('flash-dodge')\r\n    .setName('Esquive instinctive')\r\n    .addKeyword('atout')\r\n    .addKeyword('esquive')\r\n    .addKeyword('contrôle')\r\n    .addKeyword('esquive instinctive')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Esquive 14+ <br/>\r\n        Contrôle 12- <br/>\r\n        Dextérité 14+ <br/>\r\n\r\n        <p>\r\n          Le personnage peut tenter d'esquiver les flèches moyennant une\r\n          résolution par opposition entre sa maîtrise de l'esquive réduite de 6\r\n          points et le degré de maîtrise de l'arme du tireur. Cette esquive est\r\n          décomptée du nombre d'esquive du personnage et fait l'objet de tous\r\n          les malus d'esquive connexes si applicable.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const FullDodge : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('full-dodge')\r\n    .setName('Esquive totale')\r\n    .addKeyword('atout')\r\n    .addKeyword('esquive')\r\n    .addKeyword('esquive totale')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Esquive\t5+ <br/>\r\n\r\n        <p>\r\n          Le personnage peut toujours choisir de jouer en dernier et de gagner\r\n          une esquive supplémentaire lors du round en cours.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const Hacker : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('hacker')\r\n    .setName('Hacker')\r\n    .addKeyword('atout')\r\n    .addKeyword('dague')\r\n    .addKeyword('hacker')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Maîtrise de la dague 10+ <br/>\r\n\r\n        <p>\r\n          Un fois par round, en guise d'attaque à outrance, un personnage armé\r\n          d'une dague peut toujours choisir d'ignorer tout ou partie de\r\n          l'armure de son adversaire. A cette fin le personnage doit réussir\r\n          une attaque normale plus un jet d'opposition entre sa maîtrise de la\r\n          dague et le nombre de point d'armure à ignorer multiplié par deux.\r\n          Si le second jet réussi l'assassin porte alors un coup ignorant tout\r\n          ou partie de l'armure de son adversaire.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const Twisted : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('twisted')\r\n    .setName('Coup retord [Arme à une main]')\r\n    .addKeyword('atout')\r\n    .addKeyword('dague')\r\n    .addKeyword('coup retord')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Maîtrise de l'arme choisie 10+ <br/>\r\n        Dextérité 16+ <br/>\r\n\r\n        <p>\r\n          Une fois par round et pour chaque groupe de 10 points de maîtrise de\r\n          l'arme choisie, quand le personnage échoue une tentative d'attaque\r\n          avec la-dite arme il peut retenter sa chance moyennant un malus\r\n          de 8 points sur son jet de touche.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const VulcanStrike : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('vulcan-strike')\r\n    .setName('Frappe vulcain [Arme lourde à deux mains]')\r\n    .addKeyword('atout')\r\n    .addKeyword('frappe vulcain')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Maîtrise de l'arme choisie 10+ <br/>\r\n        Force 14+ <br/>\r\n\r\n        <p>\r\n          Un personnage équipé de l'arme choisie peut toujours choisir, en guise\r\n          d'attaque à outrance, de frapper violament son adversaire en\r\n          maximisant la puissance du coup porté. Une frappe vulcain ne peut pas\r\n          être parré et ajoute un bonus de dégât brut égal au poid de l'arme\r\n          utilisé.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","import React from 'react'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\nimport { FeatLevel } from '../../feat/FeatLevel'\r\n\r\nexport const WindDance : Feat = (\r\n  Feat\r\n    .builder()\r\n    .setIdentifier('wind-dance')\r\n    .setName('Danse des vents')\r\n    .addKeyword('atout')\r\n    .addKeyword('esquive')\r\n    .addKeyword('danse des vents')\r\n    .setDescription(\r\n      <>\r\n        <strong>Prérequis :</strong> <br/>\r\n        Esquive 20+ <br/>\r\n\r\n        <p>\r\n          Avec cet atout le malus attribué à un enchaînement d'esquive durant\r\n          un round est réduit à 1 point cumulatif.\r\n        </p>\r\n      </>\r\n    )\r\n    .build()\r\n)\r\n","export { AcrobaticDodging } from './AcrobaticDodging'\r\nexport { AcrobaticParry } from './AcrobaticParry'\r\nexport { AtlasBurden } from './AtlasBurden'\r\nexport { BloodBath } from './BloodBath'\r\nexport { BloodThirst } from './BloodThirst'\r\nexport { BullCharge } from './BullCharge'\r\nexport { CatGrace } from './CatGrace'\r\nexport { ChainAttack } from './ChainAttack'\r\nexport { ChainAttackBastard } from './ChainAttackBastard'\r\nexport { ChainDodge } from './ChainDodge'\r\nexport { CounterAttack } from './CounterAttack'\r\nexport { CounterAttackBastard } from './CounterAttackBastard'\r\nexport { DefensiveStyle } from './DefensiveStyle'\r\nexport { DefensiveStyleBastard } from './DefensiveStyleBastard'\r\nexport { Diehard } from './Diehard'\r\nexport { DoubleSkin } from './DoubleSkin'\r\nexport { EagleCharge } from './EagleCharge'\r\nexport { FlashDodge } from './FlashDodge'\r\nexport { FullDodge } from './FullDodge'\r\nexport { Hacker } from './Hacker'\r\nexport { Twisted } from './Twisted'\r\nexport { VulcanStrike } from './VulcanStrike'\r\nexport { WindDance } from './WindDance'\r\n\r\nimport { AcrobaticDodging } from './AcrobaticDodging'\r\nimport { AcrobaticParry } from './AcrobaticParry'\r\nimport { AtlasBurden } from './AtlasBurden'\r\nimport { BloodBath } from './BloodBath'\r\nimport { BloodThirst } from './BloodThirst'\r\nimport { BullCharge } from './BullCharge'\r\nimport { CatGrace } from './CatGrace'\r\nimport { ChainAttack } from './ChainAttack'\r\nimport { ChainAttackBastard } from './ChainAttackBastard'\r\nimport { ChainDodge } from './ChainDodge'\r\nimport { CounterAttack } from './CounterAttack'\r\nimport { CounterAttackBastard } from './CounterAttackBastard'\r\nimport { DefensiveStyle } from './DefensiveStyle'\r\nimport { DefensiveStyleBastard } from './DefensiveStyleBastard'\r\nimport { Diehard } from './Diehard'\r\nimport { DoubleSkin } from './DoubleSkin'\r\nimport { EagleCharge } from './EagleCharge'\r\nimport { FlashDodge } from './FlashDodge'\r\nimport { FullDodge } from './FullDodge'\r\nimport { Hacker } from './Hacker'\r\nimport { Twisted } from './Twisted'\r\nimport { VulcanStrike } from './VulcanStrike'\r\nimport { WindDance } from './WindDance'\r\n\r\nimport { Feat } from '../../feat/Feat'\r\n\r\nexport const ALL : Feat[] = [\r\n  AcrobaticDodging,\r\n  AcrobaticParry,\r\n  AtlasBurden,\r\n  BloodBath,\r\n  BloodThirst,\r\n  BullCharge,\r\n  CatGrace,\r\n  ChainAttack,\r\n  ChainAttackBastard,\r\n  ChainDodge,\r\n  CounterAttack,\r\n  CounterAttackBastard,\r\n  DefensiveStyle,\r\n  DefensiveStyleBastard,\r\n  Diehard,\r\n  DoubleSkin,\r\n  EagleCharge,\r\n  FlashDodge,\r\n  FullDodge,\r\n  Hacker,\r\n  Twisted,\r\n  VulcanStrike,\r\n  WindDance\r\n]\r\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AClBA;AAEA;AAEA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AClBA;AAEA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACjBA;AAEA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACjBA;AAEA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACjBA;AAEA;AAEA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AC/BA;AAEA;AAEA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AChBA;AAEA;AAEA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AC3BA;AAEA;AAEA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AC3BA;AAEA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACjBA;AAEA;AAEA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AC1BA;AAEA;AAEA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AC1BA;AAEA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACzBA;AAEA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACzBA;AAEA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACpBA;AAEA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACjBA;AAEA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AC7BA;AAEA;AAEA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACpBA;AAEA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACjBA;AAEA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACjBA;AAEA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AClBA;AAEA;AAEA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACjBA;AAEA;AAGA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AClsourceRoot":""}